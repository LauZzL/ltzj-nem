[
    "function",
    "symbol",
    "iterator",
    "constructor",
    "prototype",
    "hasOwnProperty",
    "defineProperty",
    "value",
    "@@iterator",
    "asyncIterator",
    "@@asyncIterator",
    "toStringTag",
    "@@toStringTag",
    "create",
    "_invoke",
    "normal",
    "call",
    "throw",
    "wrap",
    "suspendedStart",
    "suspendedYield",
    "executing",
    "completed",
    "getPrototypeOf",
    "next",
    "return",
    "forEach",
    "type",
    "arg",
    "object",
    "__await",
    "resolve",
    "then",
    "Generator is already running",
    "method",
    "delegate",
    "sent",
    "_sent",
    "dispatchException",
    "abrupt",
    "done",
    "The iterator does not provide a '",
    "' method",
    "resultName",
    "nextLoc",
    "iterator result is not an object",
    "catchLoc",
    "finallyLoc",
    "afterLoc",
    "tryEntries",
    "push",
    "completion",
    "root",
    "reset",
    "length",
    " is not iterable",
    "displayName",
    "GeneratorFunction",
    "isGeneratorFunction",
    "name",
    "mark",
    "setPrototypeOf",
    "__proto__",
    "awrap",
    "AsyncIterator",
    "async",
    "Generator",
    "toString",
    "[object Generator]",
    "keys",
    "reverse",
    "pop",
    "values",
    "prev",
    "charAt",
    "slice",
    "rval",
    "tryLoc",
    "end",
    "try statement without catch or finally",
    "break",
    "continue",
    "complete",
    "illegal catch attempt",
    "register",
    "chunks:///_virtual/ActionAward.ts",
    "cclegacy",
    "_RF",
    "e8d6bdc2vlGQ534/Up2Vi+r",
    "ActionAward",
    "ActionAwardTabType",
    "AddedDesktop",
    "AddedMiniProgram",
    "Official",
    "chunks:///_virtual/ActionAwardMgr.ts",
    "./rollupPluginModLoBabelHelpers.js",
    "./ClientData.ts",
    "./Common.ts",
    "./NetClientClover.ts",
    "./NetCmdEnum.ts",
    "./NetHandleClover.ts",
    "./GainActionAwardRequestData.ts",
    "./GetClientVarsRequestData.ts",
    "./SetClientVarsRequestData.ts",
    "./EventMgr.ts",
    "./EventType.ts",
    "./TreasureInfoType.ts",
    "./CommonUtils.ts",
    "./RedDotMgr.ts",
    "createClass",
    "ClientData",
    "RedDotPathType",
    "NetClientClover",
    "NetCmdEnum",
    "NetHandleClover",
    "GainActionAwardRequestData",
    "GetClientVarsRequestData",
    "SetClientVarsRequestData",
    "EventMgr",
    "EventType",
    "TreasureInfoType",
    "CommonUtils",
    "RedDotMgr",
    "fc708GQmu1LDJHjDRZbnOhY",
    "ActionAwardMgr",
    "actionAwards",
    "isAddedMiniProgram",
    "ADDED_MINI_PROGRAM_KEY",
    "ADDED_MINI_PROGRAM",
    "actionId",
    "init",
    "instance",
    "addHandler",
    "refreshActionAward",
    "from",
    "sort",
    "loadAddedMiniProgramState",
    "checkActionRewardRedDot",
    "getActionAward",
    "find",
    "key",
    "sendFront",
    "callback",
    "success",
    "data",
    "saveAddedMiniProgramState",
    "sendGainActionAwardRequestData",
    "gainActionAwardResponse",
    "status",
    "setPlayerSurveyStatus",
    "dispatchEvent",
    "RefreshActionAward",
    "setActive",
    "ActionAwardTab",
    "handleResponse",
    "responseCmdId",
    "DownCmdGainActionAward",
    "showTreasureInfo",
    "Reward",
    "getAllItems",
    "request",
    "handleNetError",
    "surveyChannelReward",
    "_instance",
    "chunks:///_virtual/AdvanceRequestData.ts",
    "./RequestDataBase.ts",
    "inheritsLoose",
    "RequestDataBase",
    "8d37cusE4VNipnD6ejxF7cf",
    "AdvanceRequestData",
    "apply",
    "concat",
    "ids",
    "doCreate",
    "head",
    "cmdId",
    "protocolId",
    "UpCmdAdvance",
    "chunks:///_virtual/AidInvitationListRequestData.ts",
    "b3b078rPoJICp58SWHyoAkM",
    "AidInvitationListRequestData",
    "UpCmdAidInvitationList",
    "chunks:///_virtual/AidRequestListRequestData.ts",
    "37a38BYTe5JPoAOA+iejxYz",
    "AidRequestListRequestData",
    "UpCmdAidRequestList",
    "chunks:///_virtual/AnimationCache.ts",
    "./AnimationUtils.ts",
    "./AnimationElement.ts",
    "./StringTool.ts",
    "./ResMgr.ts",
    "./XTool.ts",
    "asyncToGenerator",
    "Texture2D",
    "isValid",
    "SpriteFrame",
    "Rect",
    "Node",
    "AnimationUtils",
    "AnimationElement",
    "StringTool",
    "ResMgr",
    "XTool",
    "69a2eu7RCZGzaX4cvzZuf5c",
    "AnimationCache",
    "TextureCacheItem",
    "imageAsset",
    "texture",
    "imagePath",
    "image",
    "animationFileCache",
    "textureCache",
    "spriteFrameCache",
    "animationElementCache",
    "animationElementLoading",
    "purgeCache",
    "purgeAnimationFileCache",
    "purgeTextureCache",
    "purgeSpriteCache",
    "purgeAnimationElementCache",
    "clear",
    "getAnimationFile",
    "get",
    "loadAnimationFile",
    "error",
    "[AnimationCache] Failed to load animation file: ",
    "filePath",
    "set",
    "loadJson",
    "message",
    "getTexturesByImageAssets",
    "map",
    "uuid",
    "stop",
    "getTextures",
    "fill",
    "loadImageAsset",
    "catch",
    "Failed to load image asset for path: ",
    "path",
    "index",
    "delegateYield",
    "all",
    "Failed to load textures:",
    "getTexture",
    "Failed to load texture:",
    "getSpriteFrame",
    "rectId",
    "scaleFactor",
    "rect",
    "width",
    "height",
    "clearLoading",
    "getCachedAnimationElements",
    "getAnimationElement",
    "string",
    "hashStrings",
    "node",
    "active",
    "resumeAnim",
    "createAnimationElement",
    "recycleAnimationElement",
    "cacheKey",
    "removeFromParent",
    "destroy",
    "isAnimationElementCachedOrLoading",
    "has",
    "cacheAnimationElements",
    "cacheAnimationElement",
    "animationFilePath",
    "imgPaths",
    "count",
    "add",
    "delete",
    "fail to cache animation ",
    "addComponent",
    "getAmKey",
    "chunks:///_virtual/AnimationData.ts",
    "50e9d+Gvx5Ntp+ln91TZjOj",
    "AnimationData",
    "chunks:///_virtual/AnimationDelegate.ts",
    "43264GzKqJCt5+7K0FPE5Zt",
    "AnimationDelegate",
    "chunks:///_virtual/AnimationElement.ts",
    "./CloverEnums.ts",
    "./AnimationCache.ts",
    "./ConfigUtils.ts",
    "./Common2.ts",
    "applyDecoratedDescriptor",
    "initializerDefineProperty",
    "assertThisInitialized",
    "createForOfIteratorHelperLoose",
    "_decorator",
    "Enum",
    "JsonAsset",
    "ImageAsset",
    "CCString",
    "Material",
    "Color",
    "Sprite",
    "UITransform",
    "UIOpacity",
    "Vec2",
    "Component",
    "AnimationUpdateType",
    "ConfigUtils",
    "Common",
    "37f7cSoqDpLVLVNpLKydoL4",
    "ccclass",
    "property",
    "updateType",
    "animationFileJsonAsset",
    "animationImageAssets",
    "onLoadAnimId",
    "onLoadAnimLoop",
    "animationFile",
    "imageStrings",
    "loop",
    "isCycle",
    "remainLastFrame",
    "shouldCallStartAnimationLater",
    "currentAnimationData",
    "currentAnimationIndex",
    "currentAnimationFrameData",
    "currentAnimationFrameIndex",
    "currentFrameId",
    "currentAnimationFrameTime",
    "textures",
    "frameSprites",
    "frameTransforms",
    "frameOpacities",
    "material",
    "animationStatusDidChange",
    "gizmos",
    "_color",
    "WHITE",
    "debug",
    "inited",
    "initInProgress",
    "getCurAnimationIndex",
    "pauseAnim",
    "createWithAE",
    "onLoad",
    "initWithAssignedAsset",
    "startAnimation",
    "json",
    "initWithAnimationFile",
    "[AnimationElement] init fail, animation file is invalid, path:",
    "[AnimationElement] init fail, animationFileJsonAsset is invalid",
    "AnimationElement init fail, animation file is invalid",
    "basename",
    "AnimationElement init fail, image assets is invalid",
    "warn",
    "AnimationElement init fail, image assets is invalid, use image strings instead",
    "AnimationElement init fail, texture is invalid",
    "AnimationElement init failed to load textures by paths:",
    "AnimationElement init failed to load textures by image assets, file:",
    "AnimationElement init failed! No image paths and image assets provided.",
    "setDelegate",
    "[AnimationElement] animationFile is null while calling startAnimation.",
    "animationSet",
    "[AnimationElement] ",
    " startAnimation: ",
    ", isLoop:",
    ", remainLastFrame:",
    ", elapsedTime:",
    " BUT no valid animation data!",
    "animationFrameSet",
    "), isLoop:",
    "getAnimationTime",
    "getAnimationFrameIndexAtTime",
    "showAnimationNextFrame",
    "[AnimationElement] No valid animation data or frame set is empty.",
    "stopAnimation",
    "clearAllFrames",
    "update",
    "cycle",
    "lateUpdate",
    "onDrawGizmos",
    "[AnimationElement] 容错，在资源加载完成后开始播放动画",
    "frameTime",
    "getFpsRate",
    "UnscaledTime",
    "timeScale",
    "bodyRect",
    "strokeColor",
    "bodyRectColor",
    "lineWidth",
    "gizmosLineWidth",
    "stroke",
    "attackRectOnly",
    "attackRectColor",
    "animationDidFinish",
    "showFrame",
    "frameID",
    "frameSet",
    "frameRectSet",
    "addChild",
    "getComponent",
    "layer",
    "color",
    "customMaterial",
    "opacity",
    "imageRectFileSet",
    "imageID",
    "isShown",
    "rectSet",
    "rectID",
    "imageId",
    "anchorPoint",
    "mirror",
    "alpha",
    "setPosition",
    "angle",
    "degree",
    "setScale",
    "scaleX",
    "scaleY",
    "spriteFrame",
    "updateCurrentAnimationBlendFunc",
    "getCurFrameData",
    "getBodyRect",
    "getRect",
    "getAttackRect",
    "attackRect",
    "attack",
    "setBlendFuncTest",
    "addSpriteMaterial",
    "setBlendFuncDstColorAlpha",
    "dstColorSpriteMaterial",
    "setBlendFuncOverlay",
    "overlaySpriteMaterial",
    "setBlendFuncOverlayNew",
    "overlayNewSpriteMaterial",
    "Normal",
    "chunks:///_virtual/AnimationFile.ts",
    "9f45d0gk2pMBYN89NL2LoX6",
    "AnimationFile",
    "chunks:///_virtual/AnimationFrame.ts",
    "c08cfE52JVM0aseT6pOxtVS",
    "AnimationFrame",
    "chunks:///_virtual/AnimationUtils.ts",
    "./BattleEnums.ts",
    "EntityAnimationType",
    "2b5a1TBr5ROgbNIhVSxomM1",
    "_animationTime",
    "getAttackFrameNum",
    "_attackFrameNum",
    "getAnimationFrameAtTime",
    "getFrameIDAtIndex",
    "getFrameIDAtTime",
    "getAnimationFrameRealTimeUntilIndex",
    "getAnimationFrameEditorTimeUntilIndex",
    "getAnimationOfId",
    "getAnimationTimeOfId",
    "setLayer",
    "children",
    "getEntityAnimationTypeByPath",
    "lastIndexOf",
    "substring",
    "cocos",
    "Cocos",
    "spine",
    "Spine",
    "Lucid",
    "chunks:///_virtual/AntiDataRequestData.ts",
    "e9b11uCYBFOdLArvamuOcct",
    "AntiDataRequestData",
    "strData",
    "UpCmdAntiData",
    "chunks:///_virtual/AttackAble.ts",
    "0c14fw39DJC4p86OkHh8yLr",
    "AttackAble",
    "chunks:///_virtual/AttackPoint.ts",
    "./EnemyBullet.ts",
    "./BulletConst.ts",
    "./BattleData.ts",
    "./BattleMgr.ts",
    "EnemyBullet",
    "BulletConst",
    "BattleData",
    "BattleMgr",
    "9b09dabccZOcKh8Wz/FrFWM",
    "AttackPoint",
    "bapData",
    "eapData",
    "aimDegrees",
    "apDelegate",
    "attackOffX",
    "attackOffY",
    "attackOverCount",
    "attackOverTime",
    "attackX",
    "attackY",
    "bAttackOver",
    "bIndex",
    "bNum",
    "bRandom",
    "bShootStart",
    "bulletAttack",
    "bulletCount",
    "bulletCreateTime",
    "bulletData",
    "bulletInterval",
    "bulletNum",
    "curDegree",
    "curDegrees",
    "destDegree",
    "destDegrees",
    "dRotateDegree",
    "owner",
    "ownerType",
    "rotateDegree",
    "shootInterval",
    "shootPauseTime",
    "case_TYPE_DIVERGENT_AIM",
    "params",
    "getLineDegrees",
    "getPlane",
    "getBodyX",
    "getBodyY",
    "toRadians",
    "cos",
    "sin",
    "createBullet",
    "setDir",
    "case_TYPE_DIVERGENT",
    "case_TYPE_EXPRESSIONS",
    "setVelocity",
    "updateCurDegree",
    "radioEmit",
    "setVelocityWithFactor",
    "setAccelerationWithFactor",
    "case_TYPE_CROSS",
    "case_TYPE_GRID_AIM",
    "case_TYPE_GRID_R_AIM",
    "case_TYPE_GRID_R",
    "case_TYPE_GRID",
    "case_TYPE_LASER",
    "floor",
    "setLaser",
    "getLaserAnimationTotalTime",
    "case_TYPE_LINE_AIM",
    "setAim",
    "case_TYPE_LINE_VERTICAL",
    "case_TYPE_LOTUS_AIM",
    "case_TYPE_LOTUS",
    "case_TYPE_MULTI_LINE_AIM",
    "case_TYPE_MULTI_LINE_VERTICAL",
    "case_TYPE_WHEEL",
    "initV",
    "case_TYPE_WHIP_GROUP_",
    "case_TYPE_WHIP_AIM_GROUP",
    "case_TYPE_WHIP_AIM",
    "case_TYPE_WHIP_GROUP",
    "case_TYPE_WHIP_R_GROUP_",
    "abs",
    "case_TYPE_WHIP_R_AIM_GROUP",
    "case_TYPE_WHIP_R_GROUP",
    "case_TYPE_WHIP",
    "createForEnemy",
    "initForEnemy",
    "createForBoss",
    "initForBoss",
    "entityMgr",
    "createComponentByCache",
    "getViewStyleId",
    "EnemyBullet_",
    "bulletID",
    "addEnemyBullet",
    "OWNER_ENEMY",
    "setEnemyID",
    "getId",
    "setAcceleration",
    "holdData",
    "bHoldAimPlane",
    "setHoldDegrees",
    "getPosX",
    "getPosY",
    "bFirstAttackPos",
    "getAttackX",
    "getAttackY",
    "bShowAtPlane",
    "TYPE_LINE_VERTICAL",
    "TYPE_LINE_AIM",
    "TYPE_DIVERGENT",
    "TYPE_LOTUS",
    "TYPE_WHIP",
    "TYPE_GRID",
    "TYPE_CROSS",
    "TYPE_EXPRESSIONS",
    "TYPE_WHEEL",
    "TYPE_MULTI_LINE_VERTICAL",
    "TYPE_MULTI_LINE_AIM",
    "TYPE_DIVERGENT_AIM",
    "TYPE_GRID_AIM",
    "TYPE_GRID_R",
    "TYPE_GRID_R_AIM",
    "TYPE_LOTUS_AIM",
    "TYPE_WHIP_AIM",
    "TYPE_WHIP_GROUP",
    "TYPE_WHIP_AIM_GROUP",
    "TYPE_WHIP_R_GROUP",
    "TYPE_WHIP_R_AIM_GROUP",
    "TYPE_LASER",
    "setBullet",
    "getDelegate",
    "getBulletIndex",
    "bulletIDs",
    "OWNER_BOSS",
    "round",
    "getAnimationInterval",
    "getBulletDatas",
    "bulletAttackRate",
    "getAttack",
    "initAttackRate",
    "isAttackOver",
    "isShootStart",
    "setAttackOver",
    "bulletNums",
    "bulletIntervals",
    "bulletAttackRates",
    "setEnemyAttackPointDelegate",
    "chunks:///_virtual/BagData.ts",
    "./BagItem.ts",
    "./NBag.ts",
    "./kItemSort.ts",
    "./PlayerData.ts",
    "./ClientInitData.ts",
    "./PilotData.ts",
    "./VipMgr.ts",
    "./Vip.ts",
    "./SingletonDataBase.ts",
    "./EngineSkinData.ts",
    "BagItem",
    "default",
    "kItemSort",
    "PlayerData",
    "ClientInitData",
    "PilotData",
    "VipMgr",
    "VipRightType",
    "SingletonDataBase",
    "EngineSkinData",
    "a00d9Mp7yVN16WFe3J4uWA9",
    "BagData",
    "bag",
    "engineIndexOn",
    "armorIndexOn",
    "weaponIndexOn",
    "wingmanIndexOn",
    "lockEquipSet",
    "moduleReadySellArray",
    "allMixLuckys",
    "newPlanesArray",
    "equip_data_key",
    "LOCK_EQUIP_DATA",
    "getEquipEngineAtk",
    "getItemIndex",
    "getMainAttributeValue",
    "getEquipArmorHp",
    "getEquipWeaponAtk",
    "getEquipWingAtk",
    "getEngineOnPlayerData",
    "item",
    "getCurItemData",
    "getArmorOnPlayerData",
    "getWeaponOnPlayerData",
    "getWingmanOnPlayerData",
    "isHasAllNewPlane",
    "isHasTheNewPlane",
    "getEngineSet",
    "itemID",
    "getAddScoreBonus",
    "getValueInVipDataWithLevelAndType",
    "vipLevel",
    "ScoreAdd",
    "wearEquip",
    "kItemSortEngine",
    "kItemSortArmor",
    "kItemSortWeapon",
    "kItemSortWingman",
    "wearEquipIdBySortId",
    "setBagData",
    "removeALlItems",
    "sd_id",
    "quality",
    "level",
    "state",
    "exp",
    "printCfgLog",
    "log",
    " 装备：ID：",
    "，类型：{_sortID}，数量：1，index：",
    "，等级：",
    "，星级ID：",
    " 经验:",
    "addItem",
    "装备未找到",
    " 背包内道具：ID：",
    "，类型：",
    "，数量：",
    "，index：",
    "背包内道具未找到",
    "isNewPlaneStr",
    "split",
    "loadLockDataFromDocuments",
    "getEquipSet",
    "checkEquipLock",
    "lock",
    "unlock",
    "setModuleReadySell",
    "getBagItemByClientInit",
    "removeShopModuleData",
    "bagItemData",
    "isEqual",
    "splice",
    "setAllMixLuckys",
    "refreshMixLucky",
    "getMixLuckyByType",
    "luckyValue",
    "indexInBag",
    "isEquip",
    "indexOf",
    "lockEquip",
    "unlockEquip",
    "removeLockEquip",
    "unlockConsumeEquip",
    "saveLockDataToDocuments",
    "flushLockEquip",
    "RefreshEquipLock",
    "getInstance",
    "chunks:///_virtual/BagItem.ts",
    "./NItem.ts",
    "./NItemData.ts",
    "./BagData.ts",
    "./BagUtils.ts",
    "./EA.ts",
    "kMarsActivatableState",
    "kAttr",
    "BagUtils",
    "__e__a__",
    "b44aaXpPKNLFrExW89Q960L",
    "nextLevelItem",
    "nextStarItem",
    "num",
    "marsPartIndexInBags",
    "marsParentIndexInBag",
    "marsPartBagItems",
    "m_bIsLocked",
    "bOwnItemData",
    "isLocked",
    "createTestEquip",
    "initTestEquip",
    "initItemId",
    "createTestItem",
    "initTestItem",
    "createItemData",
    "[BagItem] create, itemData NULL!",
    "sortID",
    "levelMax",
    "starID",
    "createBagItem",
    "initBagItem",
    "createItem",
    "isArray",
    "BagItem.createItem values is invalid:",
    "join",
    "isNumber",
    "BagItem.createItem itemID, star, level must be defined",
    "splitToNumberArray",
    "BagItem.createItem string value is invalid:",
    "setOwnedItemData",
    "isUpgradableBySortID",
    "isLevelMax",
    "setNextLvItemData",
    "isAdvanceableBySortID",
    "isQualityMax",
    "getAdvanceData",
    "setNextQualityItemData",
    "qualityFinish",
    "createAdvanceConsume",
    "initAdvanceConsume",
    "consumeStarID",
    "consumeLv",
    "getTypeName",
    "getMainAttributeLab",
    "ATTR_NAME",
    "isAttributeBonus",
    "kAttrScoreBonus",
    "kAttrGoldBonus",
    "addAttributeBonusSprite",
    "isHasEquipStarMore3",
    "star",
    "isHasEnergyNum",
    "isEquiped",
    "isCanAdvanceNow",
    "isAdvanceableByLevel",
    "isAdvanceableByEnoughMaterial",
    "isUpgradeByMaterial",
    "getExtraSet",
    "getWorthExp",
    "consumeNum",
    "进阶需要",
    "getConsumeItem",
    "getBaseAdvanceConsume",
    "进阶消耗目标：name:[",
    "getItemName",
    "], sortID:",
    ", itemID:",
    ", star:",
    ", index:",
    ", num:",
    ", level:",
    "getSpecialAdvanceConsume",
    "itemUpgradeSucceed",
    "itemAdvanceSucceed",
    "isBelongToPlayer",
    "getMainAttributeType",
    "getMainAttributeTypes",
    "kAttrNull",
    "getMainAttributeMaxValue",
    "getLevelDataMax",
    "getMainAttributeValues",
    "min",
    "isMars",
    "getMarsMainAttrValues",
    "getMainAttributeTotalValues",
    "setMarsPartBagItems",
    "getNextStarMainAttributeValues",
    "isMarsActivated",
    "setMarsPartIndexInBags",
    "cleanMarsPartIndexInBags",
    "setMarsPartIndexInBagsDirectly",
    "getMarsPartIndexInBags",
    "getDisplayMarsPartBagItems",
    "getBestMarsPartBagItems",
    "getMarsAcivateRate",
    "bagItem : name : ",
    "getMarsActivatableState",
    "getMarsData",
    "partItems",
    "kMarsActivatableStateNotAvaliableNotEnoughPartEquipNum",
    "kMarsActivatableStateNotAvaliablePartEquipInUseByOthers",
    "kMarsActivatableStateAvaliable",
    "getItems",
    "isMarsPart",
    "getMarsParentBagItem",
    "getBagItemByClientInitArray",
    "isItemEqual",
    "isEnableDoubleItem",
    "isCoin",
    "itemData",
    "isTreasurekey",
    "kItemSortKey",
    "chunks:///_virtual/BagItemIcon.ts",
    "./ItemEnum.ts",
    "Label",
    "Size",
    "instantiate",
    "ItemQuality",
    "6f36c51DL1Ovo1oX1SQHOmR",
    "BagItemIcon",
    "装备图标",
    "装备默认图标",
    "进阶节点",
    "进阶等级",
    "锁图标",
    "等级节点",
    "装备等级",
    "物品名称",
    "双倍奖励",
    "是否显示等级",
    "equipIcon",
    "itemDefaultIcon",
    "frameImg",
    "advanceNode",
    "advanceLabel",
    "advanceFrameImg",
    "levelNode",
    "levelLabel",
    "sEquipNode",
    "equippedNode",
    "effectNode",
    "nameLabel",
    "doubleNode",
    "isShowLevel",
    "isShowEquipped",
    "isShowLock",
    "isCanClick",
    "bagItem",
    "clickCallBack",
    "changeLockState",
    "iconScale",
    "purpleAnim",
    "isLoadPurpleAni",
    "loadPrefab",
    "gameUI/prefab/bag/Item_BagItemIcon",
    "preloadItemIcons",
    "loadSpriteFrame",
    "gameUI/item/",
    "icon",
    "ITEM_ICON_SIZE65",
    "getDisplayLevel",
    "getDisplayLevelMax",
    "isRarity",
    "refreshLock",
    "starType",
    "getAdvanceDataWithStar",
    "breakthrough",
    "MAX",
    "gameUI/item/item-",
    "getColorByStar",
    "02-s",
    "STAR_PURPLE",
    "gameUI/item/item-purple-effect",
    "setContentSize",
    "RAW_SIZE",
    "sizeMode",
    "SizeMode",
    "CUSTOM",
    "setNameVisible",
    "setNameScaleAndColor",
    "getColorByQuality",
    "fontSize",
    "enableOutline",
    "outlineColor",
    "outlineWidth",
    "gameUI/shopUI/",
    "onBtnIconClick",
    "showWareDetails",
    "showDouble",
    "dispose",
    "getBagItem",
    "ITEM_ICON_SIZE100",
    "ITEM_ICON_SIZE80",
    "ITEM_ICON_SIZE60",
    "ITEM_ICON_SIZE50",
    "ITEM_ICON_SIZE40",
    "chunks:///_virtual/BagUtils.ts",
    "./NetAddGoods.ts",
    "./NumberTool.ts",
    "NetAddGoods",
    "NumberTool",
    "cb44a63F89JWoa7+AqEw67w",
    "getAllItemsByNetAddGoods",
    "addCoin",
    "moneyStr",
    "addDiamond",
    "rmbStr",
    "addEnergy",
    "energyStr",
    "addPvpToken",
    "pvpTokenStr",
    "addPack",
    "packBagStr",
    "addItems",
    "ignoreItemConfig",
    "hashNumbers",
    "getAllItemsByTreasureNetAddGoods",
    "getAllItemsByNetAddGoodsStr",
    "parseGoodsStr",
    "printDetailLog",
    "获得的头：",
    "ENERGY",
    "PACK",
    "addFriendPower",
    "PVP",
    "ShowTip",
    "服务端下行奖励字符串数据异常",
    "服务端下行奖励字符串数据异常 isReward:",
    " str:",
    " goodsStr:",
    "getAllItemSet",
    "chunks:///_virtual/BattleArrayRequestData.ts",
    "7024buwJXJPnJnmp5JfHxuY",
    "BattleArrayRequestData",
    "UpCmdBattleArray",
    "chunks:///_virtual/BattleData.ts",
    "./BattleMode.ts",
    "./Config.ts",
    "./EnemyType.ts",
    "./LootType.ts",
    "./Pilot.ts",
    "./StageData.ts",
    "./UtilMgr.ts",
    "./Util.ts",
    "./ReadyEnum.ts",
    "./NPilotSkill.ts",
    "./SystemUnlockMgr.ts",
    "./RecoverBattleData.ts",
    "EnemyPlaneType",
    "BossType",
    "RebornType",
    "PilotState",
    "SystemUnlock",
    "BattleMode",
    "excel",
    "EnemyType",
    "ItemType",
    "CrystalType",
    "PilotSkillType",
    "StageData",
    "UtilMgr",
    "UtilType",
    "ReadyType",
    "NPilotSkill",
    "SystemUnlockMgr",
    "RecoverBattleData",
    "0b562APclZPhZ8G277mhgG+",
    "bQuit",
    "battleMode",
    "stageID",
    "subStageID",
    "isUnitTest",
    "debugEnemyActionIndex",
    "randomEnemy",
    "showBossWarning",
    "readyItemData",
    "bombNum",
    "curBombPrize",
    "curRebornPrize",
    "totalPrize",
    "totalSucPrize",
    "rebornLimit",
    "rebornADLimit",
    "doubleRewardADLimit",
    "pilotSkillType",
    "pilotBombHurtRate",
    "pilotEndlessFriendTime",
    "pilotSkillTime",
    "pilotSkillMax",
    "friendPlaneLoots",
    "readyStartDashNum",
    "readyEndDashNum",
    "pilotStartDashNum",
    "pilotEndDashNum",
    "readyItems",
    "bossTicketNum",
    "bossTicketBuyNum",
    "bossModeMoney",
    "bossTicketRMB",
    "periodTimes",
    "gameCostMoney",
    "gameCostRmb",
    "enemyNorLootNums",
    "enemyNorLootTypes",
    "enemyRanLootNum",
    "enemyRanLootType",
    "enemyRanLootRates",
    "enemyRanLootTypes",
    "enemyRanLootLimits",
    "bossLoots",
    "scoreBonus",
    "readyRan",
    "scoreRate",
    "enemyRanScoreMax",
    "bPirate",
    "pirateIndex",
    "pirateID",
    "pirateDIndex",
    "bPirateTreasure",
    "hpMax",
    "mainAttack",
    "assistAttack",
    "wingmanAttack",
    "stageHpRate",
    "stageAttackRate",
    "stageCrystalRate",
    "stageScoreRate",
    "enemyAttackRate",
    "enemyNorHpRates",
    "enemyNorAttackRates",
    "enemyNorCrystalRates",
    "enemyNorScoreRates",
    "enemyRanHpRates",
    "enemyRanAttackRates",
    "enemyRanCrystalRates",
    "enemyRanScoreRates",
    "stageHpRatePlus",
    "stageAttackRatePlus",
    "stageCrystalRatePlus",
    "stageScoreRatePlus",
    "unHurtTime",
    "endlessFriendTime",
    "endlessFriendOptTime",
    "efHpMax",
    "efMainAttack",
    "efAssistAttack",
    "efWingmanAttack",
    "efUnHurtTime",
    "ctpScoreMax",
    "bSuc",
    "bSprint",
    "gameCount",
    "gameDuration",
    "bBossRandomAttack",
    "gameScore",
    "gameGold",
    "hitEnemy",
    "useBomb",
    "useReborn",
    "useADReborn",
    "endlessIndex",
    "enemyScores",
    "bossScores",
    "bossScoreMax",
    "bossScoreMin",
    "bossScoreTotal",
    "cryScores",
    "lootNums",
    "lootTypeIDs",
    "lootItemIDs",
    "lootStars",
    "lootLevels",
    "bossLootNum",
    "bossIndex",
    "bossMidIndex",
    "bossLarIndex",
    "bPirateLoot",
    "pirateDeadCount",
    "pirateDeadBossIndex",
    "pirateBossHpLeftRate",
    "pirateLootCounts",
    "startDashNum",
    "endDashNum",
    "curEndlessFriend",
    "endlessFriendUsed",
    "curPlaneHp",
    "curPlaneWeaponGrade",
    "randomEnemyActionArrayIndexes",
    "pilotSkillTimer",
    "pilotSkillNum",
    "pilotSkillTotal",
    "ctpTotalScore",
    "ctpComboTotalScore",
    "ctpComboBonusTotalScore",
    "ctpComboMax",
    "ctpInComboScoreMax",
    "ctpInComboScoreMin",
    "endlessFriendPrizeTypes",
    "endlessFriendValueTypes",
    "endlessFriendValues",
    "endlessFriendOptPrizeTypes",
    "endlessFriendOptValueTypes",
    "endlessFriendOptValues",
    "endlessFriendScoreRate",
    "endlessFriendOptScoreRate",
    "enemyNum",
    "bossNum",
    "cryNum",
    "enemyRanScoreTotal",
    "pirateShipKillCount",
    "sLootNum",
    "weaponLootNum",
    "enemyScoreTotal",
    "enemyPlaneScoreTotal",
    "enemyScoreMax",
    "enemyScoreMin",
    "bPlaneHurtFir",
    "planeHpBase",
    "planeHurtMax",
    "planeHurtMin",
    "planeHurtNum",
    "planeHurtTotal",
    "planeHurtUnreduceWeaponNum",
    "planeHurtUpgradeWeaponNum",
    "planeEnergyTransNum",
    "planeDieNum",
    "planeDieCounts",
    "hurtPlaneValue",
    "bNoHurtInBoss",
    "transNum",
    "planeHpAddItemNum",
    "planeHpAddItemMax",
    "planeHpAddItemMin",
    "planeHpAddItemTotal",
    "pirateBoxCount",
    "lootScoreNum",
    "lootCrystalNum",
    "crystalScoreTotal",
    "crystalSMax",
    "crystalMMax",
    "crystalLMax",
    "startDashDidNum",
    "endDashDidNum",
    "dashDidNum",
    "enemyDashNum",
    "bossDashNum",
    "pirateBossKillCount",
    "totalWave",
    "randomWave",
    "energyNum",
    "energyTime",
    "energyTimeMax",
    "energyTimeMin",
    "energyStartTime",
    "energyOnCount",
    "shieldNum",
    "shieldOnCount",
    "shieldTimeMax",
    "shieldTimeMin",
    "pilotShieldMax",
    "pilotShieldTotal",
    "friendPlaneTotalTime",
    "efTime",
    "efOnTotal",
    "efOnMax",
    "bombMinCD",
    "comboNum",
    "comboNums",
    "comboBonusNums",
    "comboDisMax",
    "comboDisMin",
    "comboIntervalMax",
    "comboIntervalMin",
    "nextStageID",
    "nextSubStageID",
    "shouldShowSummary",
    "stageStar",
    "timeScore",
    "hitEnemyScore",
    "totalScore",
    "crystalNum",
    "bRankChange",
    "bWeekHigh",
    "bWeekHighRank",
    "bHighest",
    "prizes",
    "bossPrizes",
    "stageInfo",
    "enemyActions",
    "enemyActionArray",
    "enemyWaveDatas",
    "enemyRanWaveDatas",
    "wormHoleCount",
    "isPvpOpponentFinish",
    "resetGameData",
    "setPilotBombHurtRate",
    "setPilotEndlessFriendTime",
    "Null",
    "setPilotSkillTime",
    "setPilotSkillMax",
    "setStartDashNum",
    "setEndDashNum",
    "resetPilotSkill",
    "resetCostData",
    "onEnterBattle",
    "pirateHurtLoot",
    "RebornTimesAdd",
    "TP_NUM",
    "Num",
    "T_CRY_NUM",
    "friendPlaneLootStr",
    "setBossLootNum",
    "setBossIndex",
    "assignProgressToBattleData",
    "refreshRebornPrize",
    "initStageData",
    "reborn",
    "Boss",
    "getUtilValue",
    "ResurgenceBossFirstCost",
    "ResurgenceBossGrowthCost",
    "ResurgenceFirstCost",
    "ResurgenceGrowthCost",
    "setupEnemyActionNorIDs",
    "getNextRnd",
    "enemyNorIDArray",
    "enemyNorIDs",
    "lootEnemyIDs",
    "lootWaveIDs",
    "lootIds",
    "stageInfoData",
    "[BattleData] initStageData stageInfo:",
    "enemyActionData",
    "enemyWaveNormalData",
    "enemyWaveRandomData",
    "endlessLoopId",
    "Enemy",
    "getEnemyWave",
    "[BattleData] initStageData enemyActions:",
    "[BattleData] initStageData enemyWaveDatas:",
    "[BattleData] initStageData enemyRanWaveDatas:",
    "setupTestData",
    "splitToNumberArray2",
    "equip length error:",
    " index:",
    "Engine",
    "Armor",
    "Weapon",
    "Wingman",
    "5,0;1,1;1,2;1,3;",
    "1,0;10,0,100;",
    "3780,189,100,100",
    "loadFromResponse",
    "refreshStageID",
    "getStageInfoDatas",
    "[BattleData] nextStageID : ",
    ", nextSubStageID : ",
    "getMapDatas",
    "mapData",
    "mapID",
    "getMapGroupdatas",
    "mapGroupData",
    "getEnemyRanWave",
    "getEnemyDatas",
    "enemyData",
    "getEnemyData",
    "getTrackDatas",
    "trackData",
    "getTrackData",
    "getBossLevel",
    "bossLevel",
    "levelRateData",
    "getBossDatas",
    "midBossData",
    "bossID",
    "getBossLarDatas",
    "larBossData",
    "getBlastGroupDatas",
    "blastGroupData",
    "filter",
    "blastGroupID",
    "getBlastDatas",
    "blastData",
    "getLootDatas",
    "lootData",
    "getLootWaveData",
    "lootWaveData",
    "getDialogueData",
    "dialogueData",
    "getDialogueContentData",
    "dialogueContentData",
    "recordStageData",
    "getEndlessIndex",
    "setEndlessIndex",
    "getStartDashNum",
    "getEndDashNum",
    "setHpMax",
    "getHpMax",
    "setMainAttack",
    "getMainAttack",
    "setAssistAttack",
    "getAssistAttack",
    "setWingmanAttack",
    "getWingmanAttack",
    "setEnemyAttackRate",
    "getEnemyAttackRate",
    "setStageHpRate",
    "getStageHpRate",
    "getCurrentHpRate",
    "getStageHpRatePlus",
    "setStageAttackRate",
    "getStageAttackRate",
    "getCurrentAttackRate",
    "getStageAttackRatePlus",
    "setStageCrystalRate",
    "getStageCrystalRate",
    "getCurrentCrystalRate",
    "getStageCrystalRatePlus",
    "setStageScoreRate",
    "getStageScoreRate",
    "getCurrentScoreRate",
    "getStageScoreRatePlus",
    "setEnemyNorHpRates",
    "getEnemyNorHpRates",
    "setEnemyNorAttackRates",
    "getEnemyNorAttackRates",
    "setEnemyNorCrystalRates",
    "getEnemyNorCrystalRates",
    "setEnemyNorScoreRates",
    "getEnemyNorScoreRates",
    "setEnemyRanHpRates",
    "getEnemyRanHpRates",
    "setEnemyRanAttackRates",
    "getEnemyRanAttackRates",
    "setEnemyRanCrystalRates",
    "getEnemyRanCrystalRates",
    "setEnemyRanScoreRates",
    "getEnemyRanScoreRates",
    "setStageHpRatePlus",
    "setStageAttackRatePlus",
    "setStageCrystalRatePlus",
    "setStageScoreRatePlus",
    "setUnHurtTime",
    "getUnHurtTime",
    "setEndlessFriendTime",
    "getEndlessFriendTime",
    "setEfHpMax",
    "getEfHpMax",
    "setEfMainAttack",
    "getEfMainAttack",
    "setEfAssistAttack",
    "getEfAssistAttack",
    "setEfWingmanAttack",
    "getEfWingmanAttack",
    "setEfUnHurtTime",
    "getEfUnHurtTime",
    "setEndlessFriendOptTime",
    "getPilotBombHurtRate",
    "getPilotEndlessFriendTime",
    "getPilotSkillTime",
    "getPilotSkillMax",
    "addBossScore",
    "getScore",
    "addGameScore",
    "setBossNum",
    "getBossNum",
    "getBossType",
    "max",
    "addEnemyScore",
    "setEnemyNum",
    "getEnemyNum",
    "setCryNum",
    "getCryNum",
    "getBossIndex",
    "isBossReward",
    "getBossRewardCount",
    "isReplaceWithPirateBoss",
    "getBossLootNum",
    "getShowBossLootNum",
    "setLootNums",
    "getLootNums",
    "addLootData",
    "[BattleData] addLootData typeID:",
    "itemID:",
    "star:",
    "level:",
    "addGameGold",
    "addScoreLoot",
    "getCrystalType",
    "T_CRY_SMALL",
    "T_CRY_MIDDLE",
    "T_CRY_LARGE",
    "onHurtPlane",
    "getWeaponBulletDatas",
    "weaponBulletData",
    "getWeaponBulletIndex",
    "weaponBulletIndex",
    "initPilotSkill",
    "pilotBaseData",
    "config",
    "skillID",
    "getPilotSkillData",
    "isPilotMain",
    "isCanUses",
    "skillType",
    "SKILL_BOMB",
    "valueStr",
    "SKILL_DASH_OPEN",
    "SKILL_ENDLESS_FRIEND",
    "SKILL_DASH_DEAD",
    "SKILL_WEAPON",
    "toFrame",
    "SKILL_SHIELD",
    "Shield",
    "setupEndlessReadyData",
    "dealWithReadyDatas",
    "getItemDatas",
    "Ready",
    "getItem",
    "param",
    "shift",
    "levelMin",
    "readyDetails",
    "readyType",
    "T_DASH",
    "readyParam",
    "T_DASH_DEAD",
    "T_ATTACK",
    "T_HP",
    "T_MONEY",
    "T_SCORE",
    "T_WARE_CHANGE",
    "getDeployPilotDatas",
    "pilotID",
    "[BattleData] 玩家拥有多个相同的驾驶员 pilotID:",
    " 使用等级(：",
    ")较高的",
    "main",
    "engineDmg",
    "engineDmgK",
    "weaponDmg",
    "weaponDmgK",
    "wingmanDmg",
    "wingmanDmgK",
    "enemyK",
    "wudiMs",
    "normalDrop",
    "randomDrop",
    "numVars",
    "enemyVars",
    "bossReward",
    "scoreAdd",
    "m1Add",
    "phMaxScore",
    "cdMaxScore",
    "hasAid",
    "aidHp",
    "aidEngineDmg",
    "aidEngineDmgK",
    "aidWeaponDmg",
    "aidWeaponDmgK",
    "aidWingmanDmg",
    "aidWingmanDmgK",
    "aidWudiMs",
    "equipDataArray",
    "equips",
    "hasRandomBoss",
    "isSystemLock",
    "Pilot",
    "randomBossAppear",
    "randomBossId",
    "randomBossReturnInterval",
    "isRandomBossLootGift",
    "hpMax:",
    "mainAttack:",
    "assistAttack:",
    "wingmanAttack:",
    "enemyAttackRate:",
    "enemyRanLootNum:",
    "enemyRanLootType:",
    "stageHpRate:",
    "stageAttackRate:",
    "stageCrystalRate:",
    "stageScoreRate:",
    "enemyRanScoreMax:",
    "ctpScoreMax:",
    "displayGameScore",
    "chunks:///_virtual/BattleDialogueMgr.ts",
    "./UIEnum.ts",
    "./MgrBase.ts",
    "./UIMgr.ts",
    "./UIType.ts",
    "./DialogueEnums.ts",
    "./BattleState.ts",
    "UIEnum",
    "MgrBase",
    "UIMgr",
    "PopupRootType",
    "DialogueType",
    "DialogueShowType",
    "BattleGuideType",
    "DialogueAfterEnd",
    "BattleState",
    "ChangePlaneType",
    "4d5b8tdZxhLSqf5jIZN77Pq",
    "BattleDialogueMgr",
    "bShowDialogue",
    "popupDialogue",
    "bNewDialogue",
    "guideType",
    "guideIndex",
    "Story",
    "battleMgr",
    "stageMgr",
    "bEnemyCreate",
    "cycleStageDialogue",
    "dialogueID",
    "shouldShowDialogue",
    "[BattleDialogueMgr] trigger dialogue:",
    "showType",
    "Now",
    "showDialogue",
    "BossHp",
    "bossMgr",
    "bBossDialogue",
    "[BattleDialogueMgr] showDialogue:",
    "planeMgr",
    "setPlanePauseShoot",
    "Bomb",
    "bombMgr",
    "bombCoolTimer",
    "leaveDialogue",
    "gotoGuide",
    "Move",
    "showPopup",
    "PopupDialogue",
    "Default",
    "[BattleDialogueMgr] show popup:",
    "hideCallback",
    "[BattleDialogueMgr] leaveDialogue:",
    "afterEnd",
    "Energy",
    "ChangeWeapon",
    "changePlane",
    "CH_WEAPON",
    "ChangeWingman",
    "CH_WINGMAN",
    "PlaneBody",
    "LootInfo",
    "[BattleDialogueMgr] gotoGuide:",
    "S_GUIDE",
    "setCycleGame",
    "enabled",
    "setMgrEnable",
    "stopMoving",
    "inputMgr",
    "resetTouchId",
    "PopupBattleGuide",
    "onGuideBtnClick",
    "leaveGuide",
    "gotoGame",
    "[BattleDialogueMgr] onGuideBtnClick",
    "chunks:///_virtual/BattleEnums.ts",
    "932ce3O3KdJba2rN4bGQi3e",
    "BattleEnums",
    "Small",
    "Big",
    "TP_S",
    "TP_M",
    "TP_L",
    "TP_NB",
    "EnemyStoneType",
    "TYPE_STONE_NULL",
    "TYPE_STONE_GREY",
    "TYPE_STONE_GREEN",
    "TYPE_STONE_RED",
    "TYPE_STONE_BLACK",
    "CH_FRIEND",
    "CH_ME",
    "PlaneAnim",
    "FIRE_FRONT",
    "FIRE_BACK",
    "MOVE_NORMAL",
    "MOVE_RIGHT",
    "MOVE_RIGHT_TWICE",
    "MOVE_RIGHT_THIRD",
    "MOVE_LEFT",
    "MOVE_LEFT_TWICE",
    "MOVE_LEFT_THIRD",
    "BossAction",
    "INIT",
    "NORMAL",
    "APPEAR",
    "TRANSFORM",
    "ATTACK_PREPARE",
    "ATTACK_ING",
    "ATTACK_OVER",
    "BLAST",
    "LEAVE",
    "PeriodStageType",
    "Rock",
    "Laser",
    "Missile",
    "BattleResType",
    "Map",
    "Plane",
    "Friend",
    "Loot",
    "BossConstant",
    "ANIMATION_ATTACK_PREPARE",
    "ANIMATION_ATTACK_ING",
    "ANIMATION_ATTACK_OVER",
    "ANIMATION_ATTACK_NUM",
    "ANIMATION_NORMAL",
    "ANIMATION_FIRE_BACK",
    "ANIMATION_LEFT",
    "ANIMATION_FIRE_FRONT",
    "ANIMATION_RIGHT",
    "ANIMATION_APPEAR",
    "ANIMATION_TRANSFORM",
    "ANIMATION_DEAD",
    "ANIMATION_NORMAL_NUM",
    "ANIMATION_NAMES",
    "01Idle",
    "01Left",
    "01Right",
    "01In",
    "01InToIdle",
    "01Die",
    "02Idle",
    "02Left",
    "02Right",
    "02In",
    "02InToIdle",
    "02Die",
    "Attack01Begin",
    "Attack01Keep",
    "Attack01End",
    "Attack02Begin",
    "Attack02Keep",
    "Attack02End",
    "Attack03Begin",
    "Attack03Keep",
    "Attack03End",
    "Attack04Begin",
    "Attack04Keep",
    "Attack04End",
    "Attack05Begin",
    "Attack05Keep",
    "Attack05End",
    "Attack06Begin",
    "Attack06Keep",
    "Attack06End",
    "Attack07Begin",
    "Attack07Keep",
    "Attack07End",
    "Attack08Begin",
    "Attack08Keep",
    "Attack08End",
    "Attack09Begin",
    "Attack09Keep",
    "Attack09End",
    "Attack10Begin",
    "Attack10Keep",
    "Attack10End",
    "Attack11Begin",
    "Attack11Keep",
    "Attack11End",
    "Attack12Begin",
    "Attack12Keep",
    "Attack12End",
    "COCOS_ANIMATION_APPEAR",
    "COCOS_ANIMATION_TRANSFORM",
    "COCOS_ANIMATION_NORMAL",
    "COCOS_ANIMATION_DEAD",
    "COCOS_ANIMATION_LEFT",
    "COCOS_ANIMATION_RIGHT",
    "COCOS_ANIMATION_NORMAL_NUM",
    "chunks:///_virtual/BattleMgr.ts",
    "./MapMgr.ts",
    "./StageMgr.ts",
    "./BattleResMgr.ts",
    "./EntityMgr.ts",
    "./BossMgr.ts",
    "./InputMgr.ts",
    "./EnemyMgr.ts",
    "./BlastMgr.ts",
    "./LootMgr.ts",
    "./PlaneMgr.ts",
    "./WeaponBulletMgr.ts",
    "./EnemyBulletMgr.ts",
    "./NetMgr.ts",
    "./BombMgr.ts",
    "./DashMgr.ts",
    "./SoundMgr.ts",
    "./FriendMgr.ts",
    "./Sound.ts",
    "./PilotSkillMgr.ts",
    "./CtpMgr.ts",
    "./BattleDialogueMgr.ts",
    "./TimeTool.ts",
    "./Tracer.ts",
    "./BattleTrackType.ts",
    "./EndlessCupData.ts",
    "./EndlessWorldPvpMgr.ts",
    "./TipsMgr.ts",
    "./MessageBox.ts",
    "./DpsMgr.ts",
    "sys",
    "director",
    "GameTipType",
    "MapMgr",
    "StageMgr",
    "BattleResMgr",
    "EntityMgr",
    "BossMgr",
    "InputMgr",
    "EnemyMgr",
    "BlastMgr",
    "LootMgr",
    "PlaneMgr",
    "WeaponBulletMgr",
    "EnemyBulletMgr",
    "NetMgr",
    "BombMgr",
    "DashMgr",
    "SoundMgr",
    "FriendMgr",
    "SoundMusicType",
    "SoundType",
    "PilotSkillMgr",
    "CtpMgr",
    "TimeTool",
    "Tracer",
    "BattleTrackType",
    "EndlessCupData",
    "EndlessWorldPvpMgr",
    "TipsMgr",
    "ResultType",
    "DpsMgr",
    "b895fMPKidIQrR4BePwb4dB",
    "mgrSet",
    "mapMgr",
    "battleResMgr",
    "enemyMgr",
    "enemyBulletMgr",
    "blastMgr",
    "ctpMgr",
    "friendMgr",
    "pilotMgr",
    "dashMgr",
    "lootMgr",
    "weaponBulletMgr",
    "dialogueMgr",
    "netMgr",
    "dpsMgr",
    "S_LOAD",
    "bottomLayer",
    "topLayer",
    "uiLayer",
    "touchMoveID",
    "readyTime",
    "bNextStage",
    "passState",
    "bShowBomb",
    "shouldShowPvpOfflineFailTip",
    "dailyInfo",
    "previewPlane",
    "_uiBattle",
    "createInstance",
    "scene",
    "addPersistRootNode",
    "createMgr",
    "setDebug",
    "initBattleDailyInfo",
    "localStorage",
    "battle_daily_info",
    "parse",
    "getDayTag",
    "dayTag",
    "stage_challenge_counts",
    "setItem",
    "stringify",
    "initPreview",
    "BattleDebug",
    "setupDebug",
    "S_READY",
    "cycleReady",
    "S_GAME",
    "gotoEndlessPvpFailTip",
    "showConfirmMessage",
    "getGameTips",
    "PvpOfflineFail",
    "Yes",
    "gotoFail",
    "plane",
    "playBackgroundMusic",
    "Endless",
    "isJoin",
    "play",
    "GameBgEndlessCpu",
    "GameBgEndless",
    "GameBgNormal",
    "GameBossMid",
    "GameBossLarge",
    "playBackgroundMusic: unknown bossType ",
    "uiBattle",
    "showBgmName",
    "gotoReady",
    "setCommonProperties",
    "track",
    "LEVEL_START",
    "updateEndlessBossReward",
    "initEquipDpsInfo",
    "ReadyGo",
    "openShootCount",
    "getHp",
    "standby",
    "gotoCrcError",
    "S_CRC_ERROR",
    "gotoMain",
    "setPassState",
    "gotoVictory",
    "showVictory",
    "gotoPass",
    "pass",
    "setActionListener",
    "setEnabled",
    "S_PVP_FAIL_TIP",
    "gotoPause",
    "S_PAUSE",
    "gotoReborn",
    "S_REBORN",
    "PopupReborn",
    "REVIVE",
    "actionPerformed",
    "source",
    "S_PASS",
    "stateNet",
    "ST_GAME_END",
    "stage_id",
    "sub_stage_id",
    "level_mode",
    "challenge_times",
    "buff",
    "power",
    "add_score_rate",
    "revive_times",
    "bomb_times",
    "wave",
    "enemyActionIndexNormal",
    "duration",
    "toSecond",
    "stageTimeCount",
    "box_count",
    "toLowerCase",
    "onGameScoreAdd",
    "currentUI",
    "chunks:///_virtual/BattleMode.ts",
    "f199elBerxI9IAIKECQ0wCM",
    "Hero",
    "Period",
    "Count",
    "endless",
    "boss",
    "hero",
    "period",
    "chunks:///_virtual/BattleResMgr.ts",
    "./ConfigLoader.ts",
    "./Pipeline.ts",
    "./Global.ts",
    "./EnemyLaser.ts",
    "./Blast.ts",
    "./PopuDialogue.ts",
    "Director",
    "ConfigLoader",
    "Pipeline",
    "EnemySpecialType",
    "Global",
    "EnemyLaser",
    "Blast",
    "bede6K+QapILqIIvn8U7E8H",
    "pipeline",
    "imageSet",
    "amSet",
    "assetCount",
    "loadedCount",
    "tempImageSet",
    "tempAmSet",
    "loadedEnemyIDs",
    "loadedBlastTypes",
    "loadedBulletIDs",
    "amFileMap",
    "amImagesMap",
    "entityStyleInActions",
    "progress",
    "addToEntityStyleMap",
    "isEntityStyleUseful",
    "unload",
    "soundEffects",
    "stopMusic",
    "removeListenersByTarget",
    "releaseRes",
    "off",
    "EVENT_AFTER_SCENE_LAUNCH",
    "unloadAssetsWithTag",
    "isCacheBossResource",
    "loadBattleRes",
    "loadRes",
    "loadStageData",
    "initData",
    "initStage",
    "initMedia",
    "initPopup",
    "gatherRes",
    "loadImages",
    "loadAnimations",
    "cacheAnimations",
    "initBattle",
    "startBattle",
    "addListener",
    "StopBattleLoading",
    "stopLoading",
    "loadPreviewRes",
    "steps",
    "finishCallback",
    "LoadingProgress",
    "progressCallback",
    "flow",
    "disconnect",
    "loadStageConfig",
    "preload",
    "preloadPopup",
    "PopupBossWarningPirate",
    "BossLarge",
    "preloadHeadTextures",
    "PopupBossWarning",
    "PopupPause",
    "finishGather",
    "gatherImage",
    "gatherAni",
    "gatherWithEntityStyle",
    "gatherMapRes",
    "mapGroupID",
    "imgStrArray",
    "PATH_MAP",
    "gatherEnemyAndBossRes",
    "gatherEnemyRes",
    "enemyID",
    "gatherBossRes",
    "enemyRanIDs",
    "gatherCommonRes",
    "PATH_ENEMY",
    "enemyhpdark2",
    "enemyhp2",
    "PATH_EFFECT",
    "trans",
    "bisha1",
    "waihuan",
    "upgrade_tip",
    "upgrade_tip1",
    "upgrade_tip2",
    "PATH_ITEM",
    "baozou",
    "diaoluodaoju",
    "redline",
    "timebomb-01",
    "sprintdie",
    "shield_player",
    "missile-02b-boom",
    "gatherPlanesRes",
    "getCurrentPlaneData",
    "gatherPlaneRes",
    "getFriendPlaneData",
    "gatherLootRes",
    "amStr",
    "imageStrs",
    "now",
    "gatherRes time: ",
    " ms",
    "size",
    "loadSpriteFrameWithTag",
    "[BattleResMgr] loadImages error",
    "animationType",
    "resPath",
    "[BattleResMgr] loadPrefab fail:",
    "onGameResLoaded",
    "[BattleResMgr] Prefab animation loaded ",
    "[BattleResMgr] AnimationElement loaded ",
    "[BattleResMgr] onGameResLoaded error",
    "runtimeLoadBossRes",
    "destroyBlastType",
    "gatherBlastGroupRes",
    "getBossAttackPointDatas",
    "bAvailable",
    "gatherEnemyBulletRes",
    "soundData",
    "showSound",
    "getEnemyAttackPointDatas",
    "enemySpecialType",
    "SPECIAL_LASER_FATHER",
    "amImages",
    "shield-player",
    "sprint",
    "blackhole-plane",
    "engineData",
    "gatherWeaponBulletRes",
    "getEngineAmFilePath",
    "getEngineAmImageStrings",
    "getEngineShootAmFilePath",
    "getEngineShootAmImageStrings",
    "armorData",
    "bodyAmStr",
    "weaponData",
    "wingmanData",
    "PATH_PLANE",
    "getAmFileName",
    "getImageFileNames",
    "gameUI/gameUI/star",
    "gameUI/gameUI/star-effect",
    "effect/sprint",
    "effect/shield_player",
    "effect/liangzihua",
    "effect/waihuan",
    "gameUI/gameUI/effect_zhuzhan",
    "blastID",
    "PATH_BULLET",
    "hitBlastType",
    "WEAPON_GRADE_NUM",
    "bullIDs",
    "laserBlastAmStr",
    "laserBlastImgStr",
    "passBlastData",
    "passBlastType",
    "laserBlastData",
    "laserBlastID",
    "allContainer",
    "canvas",
    "lootID",
    "lootItemData",
    "lootItemID",
    "itemNum",
    "[BattleResMgr] cacheAnimations error",
    "amCountPerEntity",
    "addEnemyLaser",
    "recycleEnemyLaser",
    "getItemData",
    "kItemSortLoot",
    "animID",
    "initCallback",
    "DieEnemy",
    "BombCoolDownStart",
    "BombCoolDownEnd",
    "ShieldOver",
    "LootCrystal",
    "LootUpgradeNormal",
    "LootUpgradeSuper",
    "LootShield",
    "LootHp",
    "Reborn",
    "MarsFull",
    "MarsVoice",
    "EnergyFull",
    "EnergyVoice",
    "Fly",
    "PlaneShoot",
    "BossWarning",
    "Victory",
    "SummaryStar",
    "chunks:///_virtual/BattleState.ts",
    "14bfbokzu1PTabeF8Oi41+L",
    "S_DOOR",
    "S_Summery",
    "S_SHOP",
    "S_BOMB",
    "S_CHECK_AM_FAIL",
    "S_ENDLESS_FRIEND",
    "S_WORMHOLE",
    "chunks:///_virtual/BattleTrackType.ts",
    "0aa76iIoXNOHYnBEBU3pZjY",
    "PLAYER_DEAD",
    "USE_BOMB",
    "GET_BOX",
    "LEVEL_END",
    "chunks:///_virtual/BattleUtils.ts",
    "7e43bbxszBCnqvAV/czFMx1",
    "BattleUtils",
    "getEnemyType",
    "getStoneType",
    "stoneHps",
    "chunks:///_virtual/BestHistoryRequestData.ts",
    "d762bx7Gy5DhpUeq4Xf+/uV",
    "BestHistoryRequestData",
    "UpCmdBestHistory",
    "chunks:///_virtual/BgMap.ts",
    "72eadKbqYFPCZaBC863gZFr",
    "BgMap",
    "type_bg",
    "type_fg",
    "type_fg_group",
    "type_fg_group_once",
    "layer_bg",
    "layer_fir",
    "layer_sec",
    "location_center",
    "location_left",
    "location_right",
    "location_rand",
    "allPos",
    "bgLayer",
    "bgOffMax",
    "changeSpeedCount",
    "changeSpeedTime",
    "curSpeedRate",
    "dSpeedRate",
    "firLayer",
    "firOffMax",
    "mapCurDatas",
    "mapDatas",
    "mapSpeed",
    "mapState",
    "resStrs",
    "secLayer",
    "secOffMax",
    "spArray",
    "speedRate",
    "spSpeeds",
    "viewOffX",
    "viewOffY",
    "cachedTrans",
    "addResStr",
    "BgMap_",
    "LAYER_NUM",
    "getMapCurDatas",
    "setMapState",
    "BgLayer",
    "FirstLayer",
    "SecondLayer",
    "cycleCreateMapSprite",
    "cycleCreateMapSpriteWithParams",
    "offXMax",
    "posY",
    "speed",
    "viewHeight",
    "indexArray",
    "createSp",
    "createCount",
    "time",
    "createSpGroup",
    "bOnce",
    "Sp_",
    "imgStr",
    "BgMap createSp mapID:",
    " loadSpriteFrame ",
    " failed",
    "scaleXArray",
    "scaleYArray",
    "locationArray",
    "setAnchorPoint",
    "posDX",
    "viewWidth",
    "SubLayer_",
    "cycleChangeSpeed",
    "cycleAddMap",
    "cycleRemoveMap",
    "position",
    "scale",
    "getBgSpeed",
    "clone",
    "createDelayTime",
    "posDY",
    "getMapState",
    "releaseMapCurDatas",
    "setViewOffRate",
    "onDestroy",
    "chunks:///_virtual/BigInteger.js",
    "./cjs-loader.mjs",
    "__cjsMetaURL",
    "meta",
    "url",
    "define",
    "0123456789abcdefghijklmnopqrstuvwxyz",
    "sign",
    "isSmall",
    "ceil",
    "number",
    "Cannot divide by zero",
    "negate",
    "unshift",
    "isUnit",
    "equals",
    "isEven",
    "isDivisibleBy",
    "lesser",
    "divide",
    "modPow",
    "square",
    "mod",
    "subtract",
    "plus",
    "minus",
    "multiply",
    "times",
    "_multiplyBySmall",
    "divmod",
    "over",
    "remainder",
    "pow",
    "The exponent ",
    " is too large.",
    "isNegative",
    "isZero",
    "Cannot take modPow with modulus 0",
    "modInv",
    "isPositive",
    "isOdd",
    "compareAbs",
    "compare",
    "compareTo",
    "notEquals",
    "neq",
    "greater",
    "greaterOrEquals",
    "geq",
    "lesserOrEquals",
    "leq",
    "isPrime",
    "bitLength",
    "toJSNumber",
    "isProbablePrime",
    "randBetween",
    "zero",
    "one",
    " and ",
    " are not co-prime",
    "not",
    "shiftLeft",
    " is too large for shifting.",
    "shiftRight",
    "and",
    "xor",
    "bigint",
    " is not a valid digit in base ",
    " is not a valid character",
    "Cannot convert nonzero numbers to base 0.",
    "valueOf",
    "quotient",
    "Invalid integer: ",
    " is not a valid exponent.",
    "Cannot include negative exponent part for integers",
    "test",
    " is not an integer.",
    "toArray",
    "0000000",
    "toJSON",
    "minusOne",
    "gcd",
    "lcm",
    "isInstance",
    "random",
    "fromArray",
    "exports",
    "amd",
    "chunks:///_virtual/BigInteger.mjs_cjs=&original=.js",
    "./BigInteger.js",
    "throwInvalidWrapper",
    "require",
    "chunks:///_virtual/Blast.ts",
    "./Entity.ts",
    "Entity",
    "25132BaFpFL6K9yNwCMzncm",
    "blastType",
    "blastNode",
    "blastAE",
    "animationID",
    "bDead",
    "bStandby",
    "standByTime",
    "animArray",
    "countTime",
    "bAttack",
    "bMirror",
    "dirDegrees",
    "attackPlane",
    "divideBulletTime",
    "divideBulletTimeCount",
    "divideBulletID",
    "bulletBelongType",
    "Blast#",
    "Blast_",
    "getNodeByCache",
    "getAnimationByCache",
    "mainAE",
    "posX",
    "setPos",
    "setSelfScale",
    "DEFAULT_DIR_DEGREES",
    "die",
    "isDivideBullet",
    "isDead",
    "TYPE_DESTROY",
    "playWithInterval",
    "setBulletBelongType",
    "getBulletBelongType",
    "setAttack",
    "isAttack",
    "setMirror",
    "setAttackPlane",
    "isAttackPlane",
    "getAttackPlane",
    "setDivideBulletID",
    "getDivideBulletID",
    "getDivideTimeCount",
    "setDivideTime",
    "isDivide",
    "isMirror",
    "DISAPPEAR_BLAST_TYPE",
    "TYPE_HIT",
    "TYPE_DISAPPEAR",
    "chunks:///_virtual/BlastMgr.ts",
    "25edfxR+KFL77nKR8Btrb6f",
    "cycleBlastSet",
    "generateBlast",
    "randomDeltaY",
    "posD",
    "addBlast",
    "setDivide",
    "blastSet",
    "recycleBlast",
    "rectNotZero",
    "bDamageable",
    "isRectIntersectedWithEntity",
    "hurtBoss",
    "logHurt",
    "enemySet",
    "hurtEnemy",
    "printHurtLog",
    "recordDamage",
    "enemyBulletSet",
    "isHurtable",
    "hurtEnemyBullet",
    "getBodyAEPosition",
    "getBodyAERect",
    "hurtPlane",
    "chunks:///_virtual/BombMgr.ts",
    "./ItemMgr.ts",
    "./ShopMgr.ts",
    "./EndlessWorldPvpData.ts",
    "./DamageBelongType.ts",
    "ItemMgr",
    "ShopMgr",
    "EndlessWorldPvpRivalState",
    "EndlessWorldPvpData",
    "DamageBelongType",
    "306e8/KDEFHGbwKfX2whK8G",
    "_bombNum",
    "_bombCoolTimer",
    "bombBagItem",
    "bombCoolTime",
    "bombTimer",
    "bombHurtTime",
    "bombAE",
    "bombInterval",
    "showBombInterval",
    "uiBombBtn",
    "uiBombNum",
    "uiBombCoolDownNum",
    "uiBombMask",
    "bombItem",
    "getEffectDetail",
    "prize",
    "BombCDReduce",
    "bisha",
    "BOMB_HURT_NUM",
    "addEffect",
    "click",
    "showBomb",
    "cycleBomb",
    "isShowBomb",
    "getBombHurt",
    "isDamageable",
    "clearEnemyBullets",
    "isHoldTime",
    "gotoBuyBomb",
    "addUseItemRequest",
    "shake",
    "isPvpBattleInProgress",
    "myServerState",
    "Offline",
    "EndlessWorldPvpBuyBombTimeDown",
    "currentTime",
    "showBuyWithDiamond",
    "是否购买并立即使用",
    "buyWithDiamondAndAddTotalPrize",
    "fillRange",
    "chunks:///_virtual/Boss.ts",
    "./AttackPoint.ts",
    "./TurnToDirAnim.ts",
    "Animation",
    "AnimationClip",
    "TurnToDirAnim",
    "fe70eW3mqlKg44dN7jFhTEN",
    "action",
    "actionTime",
    "animationIndex",
    "attackPointDelegate",
    "attackID",
    "attackPointSet",
    "attacks",
    "bArriveDes",
    "baseHp",
    "bAttackMove",
    "bBossBGM",
    "bossRewardCount",
    "bDialogue",
    "bFireOn",
    "bFirHurt",
    "bFirstWayPoint",
    "bGuide",
    "bInitHp",
    "bMoving",
    "bOrderAttack",
    "bossDatas",
    "bossType",
    "bWinkWhite",
    "collideAttacks",
    "crystalRate",
    "dialogueFormIndex",
    "dialogueHpRate",
    "formIndex",
    "formNum",
    "hurtLoots",
    "initHpCount",
    "initHpIndex",
    "initHpTime",
    "lootCounts",
    "lootIDs",
    "moveSpeed",
    "moveToX",
    "moveToY",
    "nextAttackInterval",
    "nextAttackTime",
    "nextWayPointInterval",
    "nextWayPointTime",
    "nextWayPointX",
    "nextWayPointY",
    "nextWaySpeed",
    "orderIndex",
    "pirateLootType",
    "rates",
    "s_bCacheBossResource",
    "winkAlpha",
    "winkCount",
    "scores",
    "hpInitRate",
    "bossAE",
    "fireBackAE",
    "fireFrontAE",
    "bossCocosAnim",
    "bossSpineAnim",
    "cocosAnimSprites",
    "spineAnimMap",
    "spineAttackRectMap",
    "spineBodyRectMap",
    "animAttackRectNode",
    "animBodyRectNode",
    "bossNode",
    "lastPos",
    "turnToDirAnim",
    "initGizmos",
    "setAction",
    "setFormIndex",
    "BossNode",
    "enemyScale",
    "Boss_",
    "setHp",
    "collideAttack",
    "score",
    "viewBossTrackDesignRatioY",
    "moveToPos",
    "appearY",
    "BOSS_APPEAR_SPEED",
    "setHpInitRate",
    "PIRATE_NULL",
    "[Boss] init: loadPrefab ",
    "FINISHED",
    "cocosAnimationDidFinish",
    "getComponentsInChildren",
    "Skeleton",
    "_updateSkeletonData",
    "clearAnimation",
    "setCompleteListener",
    "spineAnimationDidFinish",
    "bind",
    "skeletonData",
    "skeletonJson",
    "animations",
    "attackrect",
    "bodyrect",
    "[Boss] init: animation ",
    " missing attack rect node",
    " missing body rect node",
    "getAnimationIndex",
    "TURN_DIR_MIDDLE",
    "turnDelayFactor",
    "turnCheckRange",
    "[Boss] init: unknown animation type: ",
    "initCrystalRate",
    "initHpMax",
    "initHpRate",
    "initHurtLoot",
    "initScoreRate",
    "setScore",
    "processNextWayPoint",
    "cycleMove",
    "cycleTurnTo",
    "processNextAttack",
    "fireOn",
    "getHpInitRate",
    "changeAnimation",
    "setAnimationColor",
    "sqrt",
    "sprintRate",
    "onMove",
    "getCurTileID",
    "blast",
    "fireOff",
    "assignRectWithTrans",
    "assignRectWithSpineBoundingBox",
    "getCurrent",
    "animation",
    "trackTime",
    "findSlot",
    "getAttachment",
    "vertices",
    "computeWorldVertices",
    "MAX_VALUE",
    "MIN_VALUE",
    "getAppearY",
    "bossData",
    "[Boss] getAttackRect fail, unknown animation type: ",
    "[Boss] getBodyRect fail, unknown animation type: ",
    "bombHurtRate",
    "getBossBaseHp",
    "getBossHpMax",
    "getBossID",
    "getCollideAttack",
    "getCrystalRate",
    "getDestroyBlastType",
    "getDialogueID",
    "getFormIndex",
    "getFormNum",
    "getHpRate",
    "getLootCounts",
    "getLootTypes",
    "lootTypes",
    "getPirateLoot",
    "getWinkAlpha",
    "hurt",
    "ENEMY_DESTROY_Y",
    "winkWhite",
    "checkHurtLoot",
    "isBossBGM",
    "isCollideAttack",
    "isDestroyBlast",
    "isEnemyLoot",
    "isPirate",
    "isPirateLoot",
    "leave",
    "SPEED_RATE",
    "isNaN",
    "[Boss] moveToPos: moveSpeed is NaN",
    "getRndInArray",
    "attackIntervals",
    "attackActions",
    "attackPointIDs",
    "wayPointIntervals",
    "wayPoints",
    "speeds",
    "[Boss] processNextWayPoint: nextWaySpeed is NaN",
    "[Boss] setAction: ",
    "setBossID",
    "setBossReward",
    "setBossType",
    "setDialogue",
    "setLootCounts",
    "setOrderAttack",
    "setPirate",
    "setPirateLoot",
    "PIRATE_TREASURE",
    "PIRATE_CRYSTAL",
    "[Boss] animationDidFinish: ",
    ", animationIndex: ",
    "onAnimationDidFinish",
    "[Boss] cocosAnimationDidFinish: ",
    "clip",
    ", index: ",
    "[Boss] spineAnimationDidFinish: ",
    "[Boss] getAnimationIndex: unknown animation type: ",
    "[Boss] startLucidAnimation: ",
    "), loop: ",
    "getCocosAnimationState",
    "isPlaying",
    "wrapMode",
    "WrapMode",
    "Loop",
    "[Boss] startCocosAnimation: ",
    "[Boss] startCocosAnimation: animation state not found, index: ",
    "getState",
    "setMix",
    "setAnimation",
    "mixDuration",
    "[Boss] startSpineAnimation: ",
    ", totalFrame:",
    "getTotalFrames",
    "[Boss] changeAnimation: unknown animation type: ",
    "[Boss] setAnimationColor: unknown animation type: ",
    "[Boss] getAnimationTime: unknown animation type: ",
    "[Boss] getAnimationTime is 0, index: ",
    ", animName: ",
    "hasCocosAnimation",
    "clips",
    "createState",
    "BUFF_SIZE",
    "TURN_DIR_LEFT",
    "TURN_DIR_RIGHT",
    "chunks:///_virtual/BossAttackPointData.ts",
    "6dd67aPLfhP0JaXsPQx7kO6",
    "BossAttackPointData",
    "percents",
    "createArray",
    "getRndIndexInPercents",
    "chunks:///_virtual/BossDetailCircle.ts",
    "CCFloat",
    "CCBoolean",
    "Tween",
    "tween",
    "Vec3",
    "2fccdijftJJiYawK4X+NP5H",
    "BossDetailCircle",
    "circle",
    "circleNode",
    "circleSpecialAnim",
    "circleNodeSpecialAnim",
    "specialOpacity",
    "_circleUIOpacity",
    "_circleNodeUIOpacity",
    "stopAllByTarget",
    "repeatForever",
    "start",
    "runOpenAction",
    "sequence",
    "delay",
    "chunks:///_virtual/BossDetailSwitchBtn.ts",
    "5d1190g7kJOTKjtgPFP0+CW",
    "BossDetailSwitchBtn",
    "isLeft",
    "_btnAE",
    "_ui",
    "gameUI/effect/ware-arrow",
    "chunks:///_virtual/BossMgr.ts",
    "./Boss.ts",
    "./Jump.ts",
    "./PlatformMgr.ts",
    "./ShowLoadingType.ts",
    "MessageBoxType",
    "JumpType",
    "PlatformMgr",
    "ShowLoadingType",
    "55a50NGdVpDJKB/ZvBXdD0v",
    "bossToAddSet",
    "isCreatingBoss",
    "createBossTime",
    "creatingBossID",
    "loadingPopup",
    "loadPopupBossWarning",
    "bBossBlast",
    "bossBlastTime",
    "bossBlastStep",
    "bBossWarning",
    "bossWarningStep",
    "bossWarningCount",
    "bBossTransform",
    "bossFormIndex",
    "m_pBossWarningBoxAnim",
    "m_pBossNameBoxAnim",
    "bossSetHpMax",
    "bossTimeCount",
    "bossBulletNum",
    "bBossFirHurt",
    "enemyHpBaseMax",
    "bPirateBoss",
    "pirateTime",
    "bossLeaveCount",
    "bBossLeave",
    "bCallBossLeave",
    "addTouchStartListener",
    "touchBattleVec2",
    "isPointIntersected",
    "getPos",
    "cycleBoss",
    "cycleBossWaring",
    "createBossShowLoadingTime",
    "showLoading",
    "BattleRes",
    "createBossShowPopupTime",
    "onFailToLoadBossRes",
    "time out",
    "hasBoss",
    "hurtBossWrapper",
    "bossBlast",
    "clearEnemyPlane",
    "createBoss",
    "cycleBossBlast",
    "generateEnemyLootWithBoss",
    "generateBossBlastLoot",
    "removeBoss",
    "hideBossInfo",
    "bEnemyNorCreate",
    "saveProgress",
    "isDash",
    "bossTransform",
    "cycleBossLeave",
    "cycleBossHurtLoot",
    "dashNum",
    "updateBossWarningInfo",
    "generateBossBlast",
    "onLoadBossResFinish",
    "bossData has been modified!!!",
    "no valid boss data",
    "[BossMgr] skip create boss because boss is created",
    "getCurrentBossRewardCount",
    "updateDebugLabel",
    "\nboss:",
    "null",
    ") reward:",
    " bossIndex:",
    "bossMidIndex:",
    "bossLarIndex:",
    "getEnemyActionIndex",
    "addBoss",
    "hide",
    "hideLoading",
    "showBossInfo",
    "getPopup",
    "bossWarningBoxAnim",
    "showEndlessBossRewardBox",
    "showBossLeaveTime",
    "pirateHpMax",
    "[BossMgr] skip create boss because bossID is changed, creatingBossID:",
    ", resBossID:",
    ", bossID:",
    "[BossMgr] error while loading boss res",
    "PopupMessageBox",
    "LOAD_TIMEOUT_TIP",
    "Confirm",
    "修  复",
    "继续等待",
    "platform",
    "clearCachedAssets",
    "Close",
    "jumpUI",
    "BackLogin",
    "scheduleOnce",
    "isCurrentBossReward",
    "bossLeave",
    "updateBossLeaveTime",
    "showBossEscape",
    "hideBossLeaveTime",
    "generateEnemyLoot",
    "bossHurtLootBody",
    "bossWarningTime",
    "bossLeaveTimeMinuteTag",
    "bossLeaveTimeSecondTag",
    "bossLeaveTimeMilliSecondTag",
    "chunks:///_virtual/BossPkDataRequestData.ts",
    "37d8eGr0x1O+b0dQycLp/EO",
    "BossPkDataRequestData",
    "UpCmdBossPkData",
    "chunks:///_virtual/BottomAnimation.ts",
    "16850/kqfdFx76ok3z2La9g",
    "BottomAnimation",
    "openAnimation",
    "closeAnimation",
    "_openCb",
    "_closeCb",
    "onAnimationFinished",
    "runOpenAnimation",
    "runCloseAnimation",
    "AM-ware-BottomNode-ComeIn",
    "AM-ware-BottomNode-GoOut",
    "chunks:///_virtual/BulletConst.ts",
    "3a246VZoaNFXqpG3O5Nz21m",
    "ANIMATION_LOOP",
    "ANIMATION_NUM",
    "SHOW_TYPE_APPEAR_LOOP",
    "SHOW_TYPE_CYCLE",
    "SHOW_TYPE_LAST",
    "SHOW_TYPE_ORDER",
    "TYPE_AIM_FAMILY",
    "TYPE_DOUBLE_FOLLOW_MISSILE",
    "TYPE_DOUBLE_MISSILE",
    "TYPE_FOLLOW",
    "TYPE_FOLLOW_FAMILY",
    "TYPE_MACHETE",
    "TYPE_MISSILE",
    "TYPE_MISSILE_DIVIDE",
    "TYPE_LASER_W",
    "chunks:///_virtual/ButtonMgr.ts",
    "./CustomButton.ts",
    "Button",
    "CustomButton",
    "2bce8YBvG1OwYZJgeFiJfmO",
    "ButtonMgr",
    "_defaultSound",
    "onSwitchScene",
    "addClickSoundToButtons",
    "addClickFlag",
    "CLICK",
    "handleButtonClick",
    "removeClickSoundToButtons",
    "onChildAdd",
    "onChildRemove",
    "playClickSound",
    "playSound",
    "sound",
    "onBtnClick",
    "chunks:///_virtual/BuyFundRequestData.ts",
    "21b3fpfWCNNXapJ25qRknGp",
    "BuyFundRequestData",
    "phaseId",
    "orderId",
    "UpCmdBuyFund",
    "chunks:///_virtual/BuyMoonGiftRewardRequestData.ts",
    "73f35D5CoxBbLQ371d0hNRd",
    "BuyMoonGiftRewardRequestData",
    "moonOptionRewards",
    "UpCmdBuyMoonGiftReward",
    "chunks:///_virtual/BuyPeriodicGiftRewardRequestData.ts",
    "9a656i8paFBnZZswa4hmulc",
    "BuyPeriodicGiftRewardRequestData",
    "UpCmdBuyPeriodicGiftReward",
    "chunks:///_virtual/BuyPrivilegeCardRequestData.ts",
    "8a347zxkNBDJbMDq71g6Lko",
    "BuyPrivilegeCardRequestData",
    "UpCmdBuyPrivilegeCard",
    "chunks:///_virtual/BuyRequestData.ts",
    "75b9f9wDjpGbbPh2/FeoeLV",
    "BuyRequestData",
    "shopIndex",
    "sdTargetData",
    "adBuy",
    "UpCmdBuy",
    "chunks:///_virtual/BuyStoreFirstRequestData.ts",
    "e8424fJ2GxAS4Zq2b0wWffg",
    "BuyStoreFirstRequestData",
    "UpCmdBuyStoreFirst",
    "chunks:///_virtual/BuyStoreFreeRequestData.ts",
    "6ea8agjZ4JNN5sJi+lrrvMp",
    "BuyStoreFreeRequestData",
    "UpCmdBuyStoreFree",
    "chunks:///_virtual/BuyStorePeriodRequestData.ts",
    "88cb5mLWHBLBrFfXPsn1Bie",
    "BuyStorePeriodRequestData",
    "UpCmdBuyStorePeriod",
    "chunks:///_virtual/BuyStoreStageRequestData.ts",
    "b38acvVVR1D+4Zc1CghdpYA",
    "BuyStoreStageRequestData",
    "stageId",
    "UpCmdBuyStoreStage",
    "chunks:///_virtual/CacheableData.ts",
    "c67583XHg5EjICSiliIuMFq",
    "CacheableData",
    "referenceCount",
    "getPool",
    "poolDict",
    "onCreate",
    "clearAllPool",
    "clearPool",
    "recycle",
    "releaseCollection",
    "release",
    "mergeFrom",
    "resetData",
    "retain",
    "Release {GetType()} 异常，引用计数小于零：",
    "，可能是被多次Release，有可能造成正在使用的数据被重置。",
    "chunks:///_virtual/CancelButtonPress.ts",
    "Input",
    "7d820o3b/1CIa0CTnfbXlZV",
    "CancelButtonPress",
    "button",
    "target",
    "TOUCH_MOVE",
    "_onTouchMove",
    "interactable",
    "enabledInHierarchy",
    "_pressed",
    "touch",
    "_uiProps",
    "uiTransformComp",
    "hitTest",
    "getLocation",
    "windowId",
    "chunks:///_virtual/Canvas2Image.ts",
    "63a442RPWtJw7FU5FWMjqmL",
    "Canvas2Image",
    "createElement",
    "getContext",
    "getImageData",
    "toDataURL",
    "btoa",
    "drawImage",
    "img",
    "src",
    "image/",
    "replace",
    "jpeg",
    "match",
    "btoa undefined",
    "fromCharCode",
    "data:",
    ";base64,",
    "dataURL",
    "getElementById",
    "png",
    "image/octet-stream",
    "toBlob",
    "createObjectURL",
    "image/bmp",
    "style",
    "display",
    "none",
    "href",
    "download",
    "body",
    "appendChild",
    "removeChild",
    "defaultpng",
    "defaultjpg",
    "gif",
    "defaultgif",
    "bmp",
    "defaultbmp",
    "chunks:///_virtual/CaptureComponent.ts",
    "Camera",
    "gfx",
    "9d231Abr/VIJIgenVzOBkEa",
    "CaptureComponent",
    "camera",
    "captureSprite",
    "shareBtn",
    "_buffer",
    "_copyNode",
    "_texture",
    "_path",
    "doCapture",
    "capture",
    "getWorldPosition",
    "targetTexture",
    "BufferTextureCopy",
    "texOffset",
    "texExtent",
    "device",
    "copyTextureToBuffers",
    "getGFXTexture",
    "saveImage",
    "showImage",
    "PixelFormat",
    "RGBA8888",
    "packable",
    "flipUVY",
    "onBtnShareClick",
    "shareAppMessage",
    "测试截图分享",
    "chunks:///_virtual/CaptureMgr.ts",
    "./CaptureComponent.ts",
    "66d138LrcBAb7uesywMAkDd",
    "CaptureMgr",
    "_captureComponent",
    "loadCapture",
    "gameUI/prefab/capture/P-Capture",
    "chunks:///_virtual/CdKeyMgr.ts",
    "./CdKeyRequestData.ts",
    "CdKeyRequestData",
    "594bcN2y7dGf7Kryqtqtvi2",
    "CdKeyMgr",
    "sendCdkeyRequestData",
    "cdkeyCode",
    "DownCmdCdKey",
    "RefreshCdKey",
    "chunks:///_virtual/CdKeyRequestData.ts",
    "ddcf7xqZxZLdYIz5jxeh6hT",
    "UpCmdCdKey",
    "chunks:///_virtual/CheckPVPResultRequestData.ts",
    "13c4aQbgKZLNZnx2FM9gCeb",
    "CheckPVPResultRequestData",
    "UpCmdCheckPVPResult",
    "chunks:///_virtual/ChestInfo.ts",
    "./ItemReward.ts",
    "Prefab",
    "Layout",
    "ItemReward",
    "b4b81UA9zRDNZnv3xJKPQUz",
    "ChestInfo",
    "bgNode",
    "rewardParent",
    "rewardItemPrefab",
    "showReward",
    "refreshReward",
    "spacingX",
    "parent",
    "convertToWorldSpaceAR",
    "convertToNodeSpaceAR",
    "destroyAllChildren",
    "chunks:///_virtual/Classic.ts",
    "ac0cezGX0VGC4JNurx9+o5M",
    "Classic",
    "chunks:///_virtual/ClientData.ts",
    "./SetClientDataRequestData.ts",
    "./GetClientDataRequestData.ts",
    "SetClientDataRequestData",
    "GetClientDataRequestData",
    "68151I2b3VN0baOJEG0hSLE",
    "FUNC_TOGGLE",
    "_funcToggles",
    "_tipUnlockIdleBonus",
    "_tipPopupFirstRecharge",
    "_tipPopupPrivilegeCard",
    "_tipPopupPrivilegeCardUnActive",
    "_tipPopupNoticeTime",
    "_finishedTriggerGuides",
    "_periodStageSelect",
    "_bossStageSelect",
    "_tipPopupSevenSign",
    "_tipPopupContinueSign",
    "_tipPopupEndlessCup",
    "_tipPopupEndlessCupOver",
    "_surveyChannelReward",
    "_decadeOpenLastPlayTime",
    "_moonGiftOptionSelect",
    "_tipPopupMoonSign",
    "_initCb",
    "onClear",
    "removeHandler",
    "doInit",
    "sendGetClientDataRequest",
    "loadLocalFuncToggle",
    "getFuncToggle",
    "setFuncToggle",
    "sendSetClientDataRequest",
    "setPeriodStageSelect",
    "getPeriodStageSelect",
    "setBossStageSelect",
    "setMoonGiftOptionSelectIndex",
    "getMoonGiftOptionSelectIndex",
    "getBossStageSelect",
    "loadClientDataFromServer",
    "tipPopupIdleBonus",
    "tipPopupFirstRecharge",
    "tipPopupPrivilegeCard",
    "tipPopupPrivilegeCardUnActive",
    "tipPopupNoticeTime",
    "finishedTriggerGuides",
    "periodStageSelect",
    "bossStageSelect",
    "tipPopupSevenSign",
    "tipPopupContinueSign",
    "tipPopupEndlessCup",
    "tipPopupEndlessCupOver",
    "decadeOpenLastPlayTime",
    "moonGiftOptionSelect",
    "tipPopupMoonSign",
    "funcToggles",
    "tipUnlockIdleBonus",
    "requestCmdId",
    "UpCmdGetClientData",
    "errorMsg",
    "未知网络异常",
    "DownCmdGetClientData",
    "chunks:///_virtual/ClientInitData.ts",
    "e27f2k7IW5GV5E0hedw0F0b",
    "_initFlag",
    "bombStr",
    "energyMedStr",
    "energyMedItem",
    "rebornStr",
    "rebornItem",
    "stageKeyStr",
    "gameResetStr",
    "gmDescribeStr",
    "boxFriendStr",
    "boxRmbStr",
    "bossRewardID",
    "nextRank",
    "ctpTime",
    "ctpWidth",
    "ctpLevelNum",
    "ctpAddScore",
    "ctpAddHp",
    "ctpBonusScore",
    "ctpBonusHp",
    "planeLootType",
    "stageCheatEquips",
    "dashStr",
    "powerupStr",
    "dashDeadStr",
    "lootScores",
    "crystalSStr",
    "crystalMStr",
    "crystalLStr",
    "weaponUpgradeStr",
    "transStr",
    "hpStr",
    "qqloginExtra",
    "qqLoginExtraType",
    "weloginExtra",
    "weLoginExtraType",
    "endlessFirstPrize",
    "endlessSecondPrize",
    "endlessThirdPrize",
    "endlessOtherPrize",
    "handbookPlaneStr",
    "bossModeUnlocks",
    "gameTransID",
    "pirateLootStr",
    "pirateCrystalLootStr",
    "lootCrystalMid",
    "periodUnlocks",
    "stageWipOutStr",
    "pvpTokenItem",
    "guideBoxItem",
    "energyADMedStr",
    "rebornADStr",
    "rebornADItem",
    "rebornADLimitStr",
    "doubleRewardADLimitStr",
    "randomEquipStr",
    "marsNameColor",
    "guildApplyMaxNum",
    "guildCreateCost",
    "guildRenameCost",
    "pvpCoinRedDotShow",
    "equipUpgradeExpOverflowRatio",
    "load",
    "rawClientInitData",
    "ClientInitData load failed, rawClientInitData is empty.",
    "chunks:///_virtual/CloudUserInfoKeys.ts",
    "29ddbqAnD5KjpxANpkw6UY2",
    "CloudUserInfoKeys",
    "timestamp",
    "endlessHistoryHighest",
    "endlessCurrentWeek",
    "endlessCurrentWeekTimestamp",
    "endlessLastWeek",
    "endlessLastWeekTimestamp",
    "pilotUrl",
    "planeUrl",
    "uid",
    "vip",
    "chunks:///_virtual/CloverEnums.ts",
    "dbd6eMhc2VNr6LZ9C8Bcz2l",
    "CloverEnums",
    "GuideDialogState",
    "open",
    "show",
    "close",
    "finish",
    "CGType",
    "About",
    "GuideArrowPos",
    "Above",
    "Below",
    "Left",
    "Right",
    "TreasureTab",
    "Treasure",
    "Wheel",
    "Handbook",
    "SPilotItemType",
    "change",
    "DataEvent",
    "None",
    "Test",
    "ListType",
    "Horizontal",
    "Vertical",
    "Grid",
    "StartAxisType",
    "ItemDialogueCallbackAction",
    "ResetDialogueCount",
    "TypeWritingStart",
    "TypeWritingFinish",
    "OpenGuide",
    "WareTabType",
    "Upgrade",
    "Advance",
    "Split",
    "Mix",
    "StorePageType",
    "Mall",
    "GiftBag",
    "Fund",
    "Recharge",
    "BattleFail",
    "FlauntDontOwnPlane",
    "BuyNotEnoughMoney",
    "BuyNotEnoughRmb",
    "BuyEquipmentSuccess",
    "OverTodayStageLimit",
    "BuyEnergyTip",
    "ChangeEquipment",
    "EndlessStageBuySupplyNotEnoughMoney",
    "BuyNotEnoughPvp",
    "NormalKeyNotEnough",
    "SpecialKeyNotEnough",
    "ReviewNotEnoughDiamond",
    "ReviewNotEnoughCoin",
    "UpgradeSuccess",
    "UpgradeChooseTarget",
    "UpgradeChooseConsume",
    "UpgradeLevelMax",
    "UpgradeNotEnoughMoney",
    "AdvanceSuccess",
    "AdvanceChooseTarget",
    "AdvanceTargetNotEnoughLevel",
    "AdvanceStarMax",
    "AdvanceNotEnoughMaterial",
    "AdvanceNotEnoughMoney",
    "AdvanceMaterialLocked",
    "SplitCost",
    "SplitChooseTarget",
    "SplitEquiped",
    "SplitConfirm",
    "SplitTipStar401",
    "SplitTipStar402",
    "SplitTipStar403",
    "SplitTipStar501",
    "SplitTipStar502",
    "SplitTipStar503",
    "SplitTipStar504",
    "SplitTipStar505",
    "MixCost",
    "MixChooseConsume",
    "MixConsumeNotEnough",
    "MixEquiped",
    "MixConfirm",
    "MixNoMaterial",
    "MixTipStar2",
    "MixTipStar3",
    "MixTipStar4",
    "MixLocked",
    "SellEquipHigh",
    "SellEquipLow",
    "SplitExplain",
    "MixExplain",
    "AboutCopyRightLineOne",
    "AboutCopyRightLineTwo",
    "AboutCopyRightLineThree",
    "AboutUrl",
    "DataRefreshLoginReward",
    "DataRefreshActivity",
    "DataRefreshNews",
    "DataRefreshRewardList",
    "DataAddEnergy",
    "DataAddEnergy2",
    "GetNoticeDataUrl",
    "GetNoticeDataTip",
    "GetNoticeDataFailTip",
    "ActivityDoubleLoot",
    "ActivityEndlessDoubleGold",
    "WakeUpDifferent",
    "DifferentPlatformQQ",
    "DifferentPlatformWX",
    "DifferentOpenIdQQ",
    "DifferentOpenIdWX",
    "DifferentPlatformQQGuest",
    "DifferentPlatformWXGuest",
    "FriendsPanel",
    "Beyond",
    "DataCrcError",
    "GameNetDelayError",
    "GameNetRequestWorked",
    "GameNetOtherError",
    "EndlessCancelHasTreasure",
    "BossCancel",
    "BossTicket",
    "MaxBag",
    "VipOnRecharge",
    "VipToLevel",
    "VipIsLevel",
    "VipHasGain",
    "VipCantGain",
    "LockEquip",
    "UnlockEquip",
    "ShareWare",
    "ShareStoryBeyond",
    "ShareRankChange",
    "ShareSummery",
    "ShareWeekResult",
    "ShareInventFriend",
    "ShareHelp",
    "SharePvp",
    "HelpMan",
    "HelpNoMan",
    "AmCheckFailFadeTip",
    "AmCheckFailGameTip",
    "EndlessFriendNotEnoughMoney",
    "EndlessFriendNotEnoughRmb",
    "BossInfoUnknown",
    "BossInfoGoUnknown",
    "Pullback0",
    "Pullback1",
    "Pullback2",
    "PullbackMax",
    "WheelTimeout",
    "WheelTitleNormal",
    "WheelTitleDouble",
    "WheelTitlePrize",
    "WheelTitleMulty",
    "PilotAdvanceSucTip",
    "PilotUpgradeCost",
    "PilotMoneyUpLastPerDay",
    "PilotStarLvMax",
    "PilotUnlockSuc",
    "PilotChangeSuc",
    "PilotLvMax",
    "PilotStarLvAllMax",
    "PilotUnlockNotEnough",
    "PilotLvNotMax",
    "PilotAdvanceNotEnough",
    "PilotSeatNotOpen",
    "PilotMainAddPersent",
    "PilotDeputyAddPersent",
    "PilotUpNeedRmb",
    "RewardChoose",
    "BlackMarketSellerTalk",
    "BlackMarketSellerLeave",
    "BlackMarketSellerNeverLeaveTip",
    "BlackMarketItemRefresh",
    "BlackMarketSellerAppear",
    "BlackMarketTreasureUI",
    "PeriodClose",
    "WipOutCanNot",
    "WipOutNoItem",
    "MarsActivateSuc",
    "MarsUnactivateSuc",
    "MarsActivateNotOwn",
    "MarsActivatePartNotOwn",
    "MarsUnactivateEquiped",
    "MarsActivatableTip",
    "MarsNotOwnTip",
    "MarsPartInUse",
    "MarsPartLevelNotEnough",
    "MarsPartInUseByOthers",
    "GuestShareTip",
    "GuestPayTip",
    "GuestFriendTip",
    "GuestEndlessFriendTip",
    "GuestLoginTip",
    "PvpShopSellerTalk",
    "PvpShopTitle",
    "PvpShopItemRefresh",
    "PvpMatchFail",
    "PvpNotAvailable",
    "PvpQuitConfirm",
    "PvpClose",
    "PvpTodayCountReachLimit",
    "PvpEndlessScoreZero",
    "PvpReportCheatConfirm",
    "PvpReportCheatSuccess",
    "PvpCloseUITip",
    "ChooseUpdateMethod",
    "IsUpdateYYB",
    "GuildLeave",
    "GuildRename",
    "GuildAddSuccess",
    "GuildAddHas",
    "GuildDismissGuild",
    "kGameStringTioGuildChangeLeader",
    "TreasureHuntInfoS",
    "TreasureHuntInfoA",
    "TreasureHuntInfoB",
    "PlayerGroupDesc",
    "OfficialAccountsDesc",
    "FirstRechargeTip",
    "DecadeUniteTip",
    "DecadeUniteInviteReward",
    "DecadeUniteInviteShareTip",
    "DecadeUniteInviteNoReward",
    "DecadeUniteInviteDailyGain",
    "DecadeUniteSkinTitleContent",
    "DecadeUniteSkinEquipDescContent",
    "DecadeUniteSkinActivateContent",
    "DecadeUniteSkinTicketDescContent",
    "EndlessCupJoinInfo",
    "EndlessCupRuleInfo",
    "PeriodicGiftInfo",
    "MarsRateInfo",
    "MoonGiftNotSelectOptionReward",
    "MoonGiftCantGainReward",
    "NetTipDealType",
    "RefreshGame",
    "DoNoting",
    "Logout",
    "LoginReward",
    "EndlessMode",
    "StoryMode",
    "EndlessRank",
    "FriendAid",
    "StagePeriod",
    "StageBoss",
    "StageHeroMode",
    "StageSweep",
    "BagEquip",
    "BagMaterial",
    "BagResource",
    "Shop",
    "News",
    "Help",
    "Service",
    "Msg",
    "Activity",
    "ExitStory",
    "ExitEndless",
    "EndlessHard",
    "ReformMix",
    "ReformSplit",
    "BlackMarket",
    "Mars",
    "MarsShow",
    "EndlessWorldPvp",
    "Guide",
    "IdleBonus",
    "StoreFirst",
    "PrivilegeCard",
    "ADPveDoubleReward",
    "GameClub",
    "GameGroup",
    "DecadeUnite",
    "DecadeUniteSkin",
    "Store",
    "SevenSign",
    "ContinueSign",
    "EndlessCup",
    "PeriodicGift",
    "SurveyChannel",
    "EngineSkin",
    "MoonGift",
    "SystemUnlockType",
    "RechargeType",
    "StoreStage",
    "RechargeData",
    "StorePeriod",
    "FundData",
    "PeriodicGiftReward",
    "MoonGiftReward",
    "FundType",
    "Stage",
    "BossHandleType",
    "PeriodHandleType",
    "kMarsActivatableStateNotAvaliableNotEnoughPartEquipLevel",
    "kItemMixType",
    "kItemMixTypeNull",
    "kItemMixTypeStar2",
    "kItemMixTypeStar3",
    "kItemMixTypeStar4",
    "kMarsShowType",
    "kMarsShowTypeAlways",
    "kMarsShowTypeOnlyOwned",
    "kMarsShowTypeUnknown",
    "GetFriendHandleType",
    "GET_FRIEND_NONE",
    "GET_FRIEND_ENDLESS",
    "GET_FRIEND_NORMAL",
    "GET_FRIEND_MESSAGE",
    "Diamond",
    "FuncToggle",
    "Music",
    "Sound",
    "Vibrate",
    "relex",
    "deputy",
    "chunks:///_virtual/CmdRealHead.ts",
    "78fdcbgXYdL0YH1NZe1FJ7O",
    "CmdRealHead",
    "chunks:///_virtual/Common.ts",
    "f3742ms47BGipj0jcGGE5Ga",
    "RefreshType",
    "RefreshDaily",
    "RefreshWeek",
    "RewardShowType",
    "Tips",
    "RewardInfo",
    "TreasureInfoEquip",
    "TreasureInfoReward",
    "RedDotType",
    "GainIdleBonus",
    "GainQuickIdleBonus",
    "BossMode",
    "PeriodMode",
    "Message",
    "System",
    "DailyTask",
    "TaskDaily",
    "Task",
    "Achievement",
    "Vip",
    "GainStoreFirstReward",
    "StoreMall",
    "StoreMallStage",
    "StoreMallFree",
    "StoreMallFree0",
    "StoreMallFree1",
    "StoreMallFree2",
    "StoreMallFree3",
    "StoreGiftBag",
    "StoreGiftBagFree",
    "StoreFund",
    "StoreFundStage",
    "StoreFundEndless",
    "TreasureWheelTab",
    "TreasureAD_B",
    "TreasureKey_B",
    "TreasureAD_A",
    "TreasureKey_A",
    "WheelFree",
    "GainPrivilegeCardReward",
    "Invite",
    "InviteReward",
    "Skin",
    "Danmaku",
    "Milestone",
    "WeekTask",
    "WeekTaskDay1",
    "WeekTaskDay2",
    "WeekTaskDay3",
    "WeekTaskDay4",
    "WeekTaskDay5",
    "WeekTaskDay6",
    "WeekTaskDay7",
    "WeekTaskTotalProgress",
    "PeriodicGiftMain",
    "ActionAwardTab1",
    "ActionAwardTab2",
    "EndlessWorldPvpBattleInfo",
    "GainMoonGiftReward",
    "GiftConditionType",
    "GiftInfoType",
    "chunks:///_virtual/Common2.ts",
    "game",
    "view",
    "fc25dVa+Y5CTpRn0Z5lmOQv",
    "canvasHeightWidthRatio",
    "s_fCanvasHeightWidthRatio",
    "viewHeightWidthRatio",
    "s_fViewHeightWidthRatio",
    "s_nViewHeight",
    "s_nViewWidth",
    "s_nViewOffX",
    "s_nViewOffY",
    "viewAdjustOffY",
    "ENEMY_TRACK_DESIGN_HEIGHT",
    "viewCenter",
    "canvasViewRatio",
    "s_fCanvasViewRatio",
    "canvasViewRatioX",
    "s_fCanvasViewRatioX",
    "canvasViewRatioY",
    "s_fCanvasViewRatioY",
    "viewSize",
    "isLongScreen",
    "s_bLongScreen",
    "isLowCpu",
    "s_bLowCpu",
    "setLowCpu",
    "s_fFps",
    "FPS_DEFAULT",
    "s_fFpsRate",
    "FPS_RATE_DEFAULT",
    "frameRate",
    "s_fAnimationInterval",
    "isSmallMemory",
    "s_bSmallMemory",
    "setSmallMemory",
    "getFps",
    "setGuideClosed",
    "_guideClosed",
    "guideClosed",
    "onGuideClosedChanged",
    "[Common init] memory status: ",
    "toFixed",
    "MB / ",
    "[Common init] cpu data:",
    "[Common init] deviceInfo: platform:",
    "Platform",
    "Android",
    "LOW_MEMORY_ANDROID_TAG",
    "LOW_MEMORY_IOS_TAG",
    "[Common init] isLowMemory:",
    " isLowCpu:",
    "getSafeAreaRect",
    "getVisibleSize",
    "adapterTop",
    "hasNotch",
    "topNotchHeight",
    "bottomNotchHeight",
    "[Common init] hasNotch:",
    " topNotchHeight:",
    " bottomNotchHeight:",
    " safeArea:(",
    ") visibleSize:(",
    "getScene",
    "getChildByName",
    "Canvas",
    "contentSize",
    "heightWidthRatio",
    "[Common init] canvasSize:(",
    ") canvasHeightWidthRatio:",
    "setUtilitesBottomUIHight",
    "HEIGHT_WIDTH_RATIO_MIN",
    "HEIGHT_WIDTH_RATIO_MAX",
    "viewEnemyTrackDesignRatioX",
    "ENEMY_TRACK_DESIGN_WIDTH",
    "viewEnemyTrackDesignRatioY",
    "viewEnemyTrackDesignRatio",
    "viewBossTrackDesignRatioX",
    "BOSS_TRACK_DESIGN_WIDTH",
    "BOSS_TRACK_DESIGN_HEIGHT",
    "viewBossTrackDesignRatio",
    "[Common init] viewSize:(",
    ") viewHeightWidthRatio:",
    " viewOff:(",
    ") canvasViewRatio:(",
    "_utilitesBottomUIHight",
    "updateFileSearchPathes",
    "utilitesBottomUIHight",
    "getBottomRatio",
    "UI_HEIGHT_WIDTH_RATIO_MAX",
    "clientVersion",
    "1.0.8",
    "isReview",
    "_isReview",
    "cdnUrl",
    "https://wxmini-cdn.jj5agame.com/clover",
    "cloudFuncReviewUrl",
    "https://1327686872-70v4gig71u-bj.scf.tencentcs.com/info",
    "isDesktop",
    "DESKTOP_BROWSER",
    "isWeChat",
    "WECHAT_GAME",
    "openHero",
    "drawGizmos",
    "_drawGizmos",
    "yellowBtnLabelColor",
    "grayBtnLabelColor",
    "greenBtnLabelColor",
    "blueBtnLabelColor",
    "CANVAS_WIDTH",
    "hasRechargeEnv",
    "planeScale",
    "viewOffMaxX",
    "translateScale",
    "BOTTOM_SPR_POSY_IN_PHONE4",
    "BOTTOM_SPR_POSY_IN_PHONE5",
    "LOW_CPU_ANDROID_TAG",
    "LOW_CPU_IOS_TAG",
    "normalSpriteMaterial",
    "chunks:///_virtual/CommonUtils.ts",
    "./Shop.ts",
    "./StageUIMgr.ts",
    "./UseItemRequestData.ts",
    "./EnergyRequestData.ts",
    "./UIEndlessFriendRank.ts",
    "./FriendData.ts",
    "./WheelData.ts",
    "./TreasureWheelMgr.ts",
    "./UIMainPage.ts",
    "./UISummary.ts",
    "./UIStagePeriod.ts",
    "./UIWareRemould.ts",
    "./UIStage.ts",
    "./UIBattle.ts",
    "./DataUtils.ts",
    "./MessageMgr.ts",
    "./PopupDecadeUniteOpen.ts",
    "./EndlessWorldShopMgr.ts",
    "math",
    "ItemMoney",
    "kCurrency",
    "RechargePanelType",
    "BuyItemType",
    "ShopPrizeType",
    "UIRootType",
    "StageUIMgr",
    "UseItemRequestData",
    "EnergyRequestData",
    "UIEndlessFriendRank",
    "FriendData",
    "WheelData",
    "TreasureWheelMgr",
    "UIMainPage",
    "UISummary",
    "UIStagePeriod",
    "UIWareRemould",
    "UIStage",
    "UIBattle",
    "DataUtils",
    "MessageMgr",
    "PopupDecadeUniteOpen",
    "EndlessWorldShopMgr",
    "66ff6pRbk9GxpE8wwGxQkda",
    "showMessageUseEnergy",
    "dailyBuyEnergyNum",
    "getCurAddEnergyNum",
    "dailyWatchADEnergyNum",
    "getCurAddADEnergyNum",
    "今日购买体力次数已用完",
    "PopupBuyEnergy",
    "showMessage",
    "showCustomMessage",
    "addCustomContent",
    "showOverflowExpConfirmMessage",
    "animated",
    "clearMessage",
    "coinNotEnough",
    "showRechargePanel",
    "Coin",
    "diamondNotEnough",
    "KeyNotEnough",
    "PopupDiamondRecharge",
    "showUI",
    "UIStore",
    "AboveTopUI",
    "addRmbBtnAction",
    "showRechargeRMB",
    "PopupBuyWithDiamond",
    "showBuyWithPvpCoin",
    "PopupBuyWithPvpCoin",
    "showWheelRefresh",
    "WheelRefreshInfo",
    "showMessageBuyBag",
    "PopupBagFull",
    "buyShopEffect",
    "prizeType",
    "getItemMoneyData",
    "sendBuyRequest",
    "shopItemData",
    "removeCoinMethods",
    "removeDiamondMethods",
    "ADFree",
    "energy",
    "energyMax",
    "体力已满",
    "removeItemsMethods",
    "CommonUtils.addUseItemRequest: item not in bag",
    "addCheckEnergyRequest",
    "powerNotEnough",
    "PopupPowerLess",
    "showSweepInfo",
    "getAddItems",
    "PopupSweepInfo",
    "PopupWareDetails",
    "showPilotDetails",
    "PopupPilotDetails",
    "isSystemLockByJumpId",
    "Home",
    "GameNormal",
    "HeroMode",
    "showUIStage",
    "GamePeriod",
    "showUIStagePeriod",
    "GameBoss",
    "showUIStageBoss",
    "UIWareEnhance",
    "Reform",
    "UIPilot",
    "UIWareSkin",
    "isKnowFriendList",
    "addGetFriendBaseData",
    "UIEndlessWorldPvp",
    "UIEndlessWorldPvpBattleInfo",
    "PopupMessage",
    "EndlessAid",
    "isKnowEndlessAidList",
    "UIEndlessAid",
    "addRandomEndlessAidFriendListRequest",
    "addGetEndlessAidList",
    "GameEndless",
    "UIEndlessBuyReady",
    "clearAll",
    "switchScene",
    "LoginScene",
    "TreasureWheel",
    "tab",
    "wheelData",
    "bWheelAvaliable",
    "sendTurnTableShowRequestData",
    "sendCmdTreasureHuntRequest",
    "UITreasureWheel",
    "UIAbout",
    "Ware",
    "UIWareHouse",
    "DecadeUniteMainPage",
    "sendDecadeUniteInfoRequestData",
    "DecadeOpenPlayType",
    "played",
    "isSameDay",
    "EndlessWorldShop",
    "sendPvpShopRequest",
    "UIEndlessWorldShop",
    "getCurrentUIJumpType",
    "getJumpType",
    "Summary",
    "CommonUtils.getJumpType: unknown ui class:",
    "showGetItems",
    "Money",
    "Expand",
    "getAddResourceAndGoodsStr",
    "Equip",
    "showRewardInfo",
    "PopupRewardInfo",
    "treasureInfoQueue",
    "showNextTreasureInfo",
    "popupHideCallback",
    "PopupTreasureInfo",
    "popupShowCallback",
    "showPopupByUIEnum",
    "bindEvent",
    "ShowMessage",
    "ShowPopup",
    "checkEndlessWorldPvpAvailable",
    "isAvailable",
    "isClosed",
    "getPvpBattleFieldData",
    "currencyType",
    "kCurrencyCoin",
    "coin",
    "costValue",
    "kCurrencyDiamond",
    "diamond",
    "todayPvpBattleFieldJoinCounts",
    "dailyLimitCount",
    "clamp",
    "chunks:///_virtual/ComponentActionPageBase.ts",
    "19567Qf0PVOD6yZf7HsOb0W",
    "ComponentActionPageBase",
    "refreshRewardCallBack",
    "removeListener",
    "refreshView",
    "chunks:///_virtual/ComponentAddedDesktop.ts",
    "./ComponentActionPageBase.ts",
    "./ActionAwardMgr.ts",
    "75712ZAww9JVobc0pv/j5Wc",
    "ComponentAddedDesktop",
    "tipsLabel",
    "first",
    "首次添加桌面，立即获得好礼",
    "每日桌面登录，领取豪礼",
    "chunks:///_virtual/ComponentAddedMiniProgram.ts",
    "12dcc2PqUFMQJNWLbP3qEs9",
    "ComponentAddedMiniProgram",
    "chunks:///_virtual/ComponentStoreFund.ts",
    "./ComponentStorePageBase.ts",
    "./StoreMgr.ts",
    "./StoreFundItem.ts",
    "./StoreFundProgressBarItem.ts",
    "./RedDot.ts",
    "./ExtToggle.ts",
    "./StoreFund.ts",
    "ScrollView",
    "ComponentStorePageBase",
    "StoreMgr",
    "StoreFundItem",
    "StoreFundProgressBarItem",
    "RedDot",
    "ExtToggle",
    "StoreFundFreeType",
    "StoreFundType",
    "d0d529DMuRKErPGG1iyQ01Q",
    "ComponentStoreFund",
    "titleImg",
    "priceBtn",
    "priceLabel",
    "leftArrowNode",
    "rightArrowNode",
    "proScrollView",
    "pageScrollView",
    "toggleList",
    "fundItemPrefab",
    "fundProItemPrefab",
    "proBgSprite",
    "proLabel",
    "stageTipNode",
    "endlessTipNode",
    "leftRedDot",
    "rightRedDot",
    "leftTitleBg",
    "rightTitleBg",
    "fundItems",
    "fundProItems",
    "curType",
    "curIndex",
    "maxSize",
    "arrowImgStrs",
    "leftPlaneArrowAnimation",
    "rightPlaneArrowAnimation",
    "maxScrollOffsetY",
    "maxProScrollOffsetY",
    "lastOffsetY",
    "curFundDatas",
    "curFundData",
    "playArrowAnim",
    "SCROLLING",
    "onScrolling",
    "isChecked",
    "onToggleClick",
    "onBtnArrowClick",
    "getScrollOffset",
    "scrollToOffset",
    "updatePayData",
    "gameUI/shopUI/new/",
    "fundData",
    "payPrice",
    "已购买",
    "enableShadow",
    "5E0707",
    "b1b0b0",
    "refreshPageView",
    "getFundBaseDataConfigs",
    "cond",
    "Star1",
    "score-bg1",
    "numberUnitFormat",
    "gameUI/shopUI/new/fund-unlimited-",
    "spawnFundItem",
    "spawnFundProItem",
    "nodes",
    "itemRender",
    "stopUIEvent",
    "getMaxScrollOffset",
    "getCanReceiveFundIndex",
    "recoverUIEvent",
    "freeStatus",
    "NotClaimed",
    "setParent",
    "content",
    "itemClick",
    "onBtnFuncClick",
    "checkCanReceitveFund",
    "resetScrollOfset",
    "checkCanReceiveFundItem",
    "onStateChange",
    "checkAllReceiveFundItem",
    "Claimed",
    "PopupFundRecharge",
    "fId",
    "getFundDatas",
    "gameUI/shopUI/new/fund-",
    "unlimited",
    "-ordinary",
    "-Luxury",
    "chunks:///_virtual/ComponentStoreGiftBag.ts",
    "./List.ts",
    "List",
    "ef9fex43yJIKr7ZYHMX7KGW",
    "ComponentStoreGiftBag",
    "itemList",
    "storePeriods",
    "getStorePeriodPayDatas",
    "array",
    "RefreshStorePeriod",
    "onUpdateStorePeriod",
    "findIndex",
    "periodData",
    "getListItem",
    "chunks:///_virtual/ComponentStoreMall.ts",
    "./StoreMallStage.ts",
    "./StoreMallFree.ts",
    "./StoreMallMoney.ts",
    "./PrivilegeCardMgr.ts",
    "StoreMallMoney",
    "PrivilegeCardMgr",
    "d6470RYjw9MeYKoMU3NNn3o",
    "ComponentStoreMall",
    "mallStage",
    "mallFree",
    "mallMoney",
    "scrollView",
    "freeAdNode",
    "refresh",
    "offsetPos",
    "onEnable",
    "RefreshPrivilegeCardInfo",
    "refreshFreeAd",
    "skipAD",
    "onDisable",
    "onBtnPrivilegeCardClick",
    "PopupPrivilegeCard",
    "chunks:///_virtual/ComponentStorePageBase.ts",
    "dcf3dAKUkxHs6HzCi3ROdnk",
    "callBack",
    "chunks:///_virtual/ComponentStoreRecharge.ts",
    "ba435myp5VFh7pkhludJSLf",
    "ComponentStoreRecharge",
    "list",
    "getRechargeRMBDatas",
    "chunks:///_virtual/ComponentUpgradeAdvanceTips.ts",
    "40817AY2qRLe5h9jM2XSE5G",
    "ComponentUpgradeAdvanceTips",
    "upgradeArrow",
    "advanceRedDot",
    "itemSort",
    "isCheckSkinRedDot",
    "WearEquip",
    "checkHasEquipTip",
    "RefreshkMaterial",
    "refreshRedDot",
    "isCanAdvance",
    "isCanUpgrade",
    "chunks:///_virtual/ComponentWareAdvance.ts",
    "./ComponentWareTabBase.ts",
    "./BagItemIcon.ts",
    "ComponentWareTabBase",
    "WareListItemType",
    "kEquipTab",
    "ee7a7oXHQFIS4WcqCRXAF1V",
    "ComponentWareAdvance",
    "leftStarList",
    "leftStarNode",
    "leftEquipName",
    "leftequipIcon",
    "rightStarList",
    "rightStarNode",
    "rightEquipName",
    "rightequipIcon",
    "scanningLineAnimation",
    "selectedAnimation",
    "curBagItem",
    "advanceAniDuration",
    "fadeIn",
    "AM-ware-Advance-FUI",
    "fadeOut",
    "resetEquipInfo",
    "EquipChooseBag",
    "refreshEquipLock",
    "playScanningLineAni",
    "AM-ware-ScanningLine",
    "itemTouchEvent",
    "checkToggle",
    "closePopup",
    "playAdvanceFinishAni",
    "AM-ware-Advance-end",
    "refreshEquipInfo",
    "getDisplayStar",
    "chunks:///_virtual/ComponentWareMix.ts",
    "./EquipChooseBag.ts",
    "ProgressBar",
    "Toggle",
    "57955VKp9VELolOQyIYKf8Q",
    "ComponentWareMix",
    "luckyProBar",
    "luckyBg",
    "luckyProBarBg",
    "luckyBarBg",
    "luckyProFx",
    "luckyProLabel",
    "luckyTipLabel",
    "luckyAnimation",
    "tipLabel",
    "equipName",
    "starList",
    "chooseMaterialsIcons",
    "materialsScanningLineAnis",
    "atmosphereAnimation",
    "mixAniamtion",
    "resultAniamtion",
    "equipToggle",
    "curTabIndex",
    "curItemMixData",
    "checkedBagItems",
    "autoChooseBagItems",
    "mixResultBagItem",
    "mixAniDuration",
    "curLuckyValue",
    "costChangeCallback",
    "playMaterialsScanningLineAni",
    "All",
    "refreshChooseMaterials",
    "onToggleCheck",
    "AM-ware-Mix-FUI",
    "resume",
    "pause",
    "resetMaterials",
    "onBtnMixClick",
    "MAX_CHECKED_NUM",
    "costMoney",
    "costRmb",
    "confirmToMix",
    "sendMixRequestData",
    "onBtnLuckyInfoClick",
    "PopupMixLuckyExplain",
    "onBtnAutoChooseConsume",
    "refreshLuckyPro",
    "gameUI/remouldUI/",
    "-white",
    "-green",
    "remould-lucky-bg",
    "bar-lucky",
    "bar-lucky-FX",
    "getMixData",
    "spawnAutoChooseList",
    "onEquipMixHandler",
    "mixSuccess",
    "/100",
    "AM-Lucky-Up",
    "合成成功",
    "AM-ware-Mix-Alchemy",
    "AM-ware-Mix-ItemIconFX",
    "AM-ware-Mix-Alchemy-Result",
    "sortByQualityAndLevel",
    "wareListItemType",
    "sortMarsBagItem",
    "isMixable",
    "matchMixRequire",
    "getMixRequire",
    "AM-Materials-ScanningLine",
    "chunks:///_virtual/ComponentWareSplit.ts",
    "acd5e/wnmRP7aRrZXwe7XUW",
    "ComponentWareSplit",
    "starNode",
    "splitEquipIcons",
    "splitResultEquipIcons",
    "splitEquipOpacitys",
    "splitEquipLineAnis",
    "splitAreaScanningLineAnimation",
    "equipScanningLineAnimation",
    "equipChooseAnimation",
    "splitResultAnimation",
    "splitEquipDownNode",
    "itemSplitData",
    "uiTrans",
    "playSplitAreaScanningLineAnimation",
    "AM-ware-choose-loop",
    "AM-SplitResult-ScanningLine",
    "playSplitEquipTweens",
    "isSplitable",
    "getSplitData",
    "splitBagItems",
    "SplitTipStar",
    "convertNodeSpaceAR",
    "union",
    "onBtnSplitClick",
    "保护装备不能拆分",
    "isBagFull",
    "confirmToSplit",
    "onEquipSplitHandler",
    "拆分成功",
    "AM-ware-Split-Recovery",
    "worldPosition",
    "parallel",
    "AM-ItemIcom-SplitEnd",
    "sendSplitRequestData",
    "chunks:///_virtual/ComponentWareTabBase.ts",
    "b20deu8ZUZJHr/xKSKtnwhr",
    "chunks:///_virtual/ComponentWareUpgrade.ts",
    "9df4efsovlFC7saHnRYL7jo",
    "ComponentWareUpgrade",
    "labelNode",
    "expProBar",
    "upgradeNeedExpLabel",
    "upgradeMaxNeedExpLabel",
    "upgradeCurExpTipLabel",
    "upgradeCurExpLabel",
    "upgradeAniamtion",
    "upgradeAniDuration",
    "AM-ware-upgrade-FUI",
    "playSelectedAni",
    "refreshExp",
    "setProgressClean",
    "getExp",
    "getExpMax",
    "refreshNeedAndMaxExp",
    "getExpToMaxLv",
    "playUpgradeAni",
    "AM-ware-ItemUpgrade-keep",
    "playUpgradeFinishAni",
    "AM-ware-ItemUpgrade-end",
    "setProgressAction",
    "AM-ware-ItemSelected",
    "chunks:///_virtual/Config.ts",
    "./ConfigBase.ts",
    "ConfigData",
    "67caelg6wdHs7jQjFidWhpy",
    "Config",
    "ActionAwardData",
    "bonus",
    "dailyBonus",
    "handleArray",
    "getInt32",
    "AdvertisementData",
    "adUnitId",
    "strings",
    "desc",
    "BlastData",
    "getFloat32",
    "BlastGroupData",
    "createData",
    "buffer",
    "BossAttackActionData",
    "BossData",
    "attackPointDatas",
    "attackPoints",
    "blackImageStrs",
    "BossInfoData",
    "bossDY",
    "subID",
    "BulletData",
    "posOffs",
    "accelerateLastTime",
    "accelerateStartTime",
    "animationSetNum",
    "bBlastDestroy",
    "bDirHold",
    "bTurnDir",
    "followTime",
    "initDV",
    "inviewTime",
    "BulletHoldData",
    "holdAnimIndex",
    "holdAnimType",
    "holdDegrees",
    "holdTime",
    "CdkeyData",
    "gains",
    "deadline",
    "DailyBonusData",
    "dayId",
    "DailyBonusTotal",
    "DailyTaskData",
    "jumpId",
    "maxNum",
    "valuePerTime",
    "DailyTaskStageData",
    "rewardItem",
    "DecadeUniteDailyTask",
    "addit",
    "DecadeUniteDailyTasksData",
    "tasks",
    "DecadeUniteDailyTasksTotal",
    "expiredBonus",
    "DecadeUniteDailyTasksValue",
    "DecadeUniteDanmakuData",
    "danmakuID",
    "DecadeUniteInviteData",
    "reward",
    "stage",
    "DecadeUniteInviteValue",
    "DecadeUniteMilestoneBomb",
    "boxLevel",
    "goalId",
    "starCond",
    "DecadeUniteMilestoneEndless",
    "DecadeUniteMilestoneItem",
    "DecadeUniteMilestoneKill",
    "DecadeUniteMilestoneLottery",
    "DecadeUniteMilestoneRecall",
    "DecadeUniteMilestoneStage",
    "DecadeUniteMilestoneUse",
    "DecadeUniteMilestoneData",
    "initVal",
    "order",
    "override",
    "DecadeUnitePlaneData",
    "planeID",
    "skinRate",
    "weight",
    "DecadeUniteRandomDanmakuData",
    "DecadeUniteSkinData",
    "armor",
    "code",
    "engine",
    "skin",
    "weapon",
    "wingman",
    "activateShowRes",
    "attr",
    "showRes",
    "skinID",
    "ticket",
    "DecadeUniteSkinValue",
    "DialogueContentData",
    "contPosType",
    "headID",
    "DialogueData",
    "contents",
    "DropData",
    "prob",
    "DropIndex",
    "EndlessIndividualCupData",
    "boxShow",
    "EndlessIndividualCupValue",
    "EndlessWorldPvpBattleFieldData",
    "description",
    "loseRewardValue",
    "matchNpc",
    "tieRewardValue",
    "winRewardValue",
    "EndlessWorldPvpJumpFieldData",
    "baseM1Fact",
    "baseScoreFact",
    "jumpWave",
    "lower",
    "upper",
    "EndlessWorldPvpMatchFieldData",
    "EnemyActionData",
    "enemyNorParam",
    "enemyRanParam",
    "mapParam",
    "enemyActionID",
    "enemyNorInterval",
    "enemyRanInterval",
    "wormID",
    "EnemyData",
    "apStr",
    "hpBarData",
    "secApStr",
    "secAttackPointDatas",
    "attackInterval",
    "attackNum",
    "bCollideDead",
    "bMoveAttack",
    "bStayAttack",
    "blastAttack",
    "enemyLootType",
    "EnemyHpBarData",
    "bHpShows0",
    "bHpShows1",
    "hpShowY",
    "EnemyNormalLootData",
    "lootNum",
    "lootType",
    "EnemySoundData",
    "showSoundTime",
    "EnemyWaveData",
    "startPos",
    "trackStr",
    "enemyGroupID",
    "enemyInterval",
    "extraSpeedY",
    "groupInterval",
    "FundEndless",
    "freeBonus",
    "FundStage",
    "storeId",
    "GameTipsData",
    "GetItemData",
    "GiftInfoData",
    "giftId",
    "infoSpUrl",
    "tipsId",
    "title",
    "GuideArrowState",
    "arrowPosOffX",
    "arrowPosOffY",
    "arrowRotate",
    "GuideGetItemData",
    "GuideOrderData",
    "guideLockBuilds",
    "guideID",
    "nextGuideID",
    "GuideStepData",
    "arrowState",
    "getItemFinishGuide",
    "hasArrow",
    "hasDialog",
    "hasTouchRect",
    "highLightArea",
    "maskPosOff",
    "openByStage",
    "touchArea",
    "actionID",
    "blackScreenOpacity",
    "dialogPosY",
    "dialogText",
    "durationTime",
    "guideManActionID",
    "isFinish",
    "isGuideCloseShow",
    "isGuideOpenShow",
    "isGuideShow",
    "maskFilePath",
    "stepID",
    "GuideTriggerData",
    "gameStateIndex",
    "guideTriggerID",
    "isUse",
    "HelpData",
    "text",
    "HttpTipsData",
    "deal",
    "IdleBonusData",
    "equipDrops",
    "itemDrops",
    "quickEquipDrops",
    "quickItemDrops",
    "equipTime",
    "idleTime",
    "itemTime",
    "m1Time",
    "IdleBonusDrop",
    "clientView",
    "drops",
    "IdleBonusValue",
    "ItemCfgAdvanceData",
    "breakThrough",
    "evolution",
    "materialCnt",
    "materialLevel",
    "materialQuality",
    "needsLevel",
    "needsM1",
    "needsM2",
    "newLevel",
    "newQuality",
    "specailMaterial",
    "ItemCfgAttrData",
    "cName",
    "canAdvance",
    "canSell",
    "canStack",
    "canUpgrade",
    "canUse",
    "expPercent",
    "notUsePack",
    "ItemCfgUpgradeData",
    "needsExp",
    "offerExp",
    "offerM1",
    "ItemArmorData",
    "skillTypes",
    "baoji",
    "bodyAm",
    "def",
    "defUp",
    "gedang",
    "hpUp",
    "imageFile",
    "info",
    "m1AddRate",
    "marsId",
    "mingzhong",
    "rarity",
    "scoreAddRate",
    "shangbi",
    "skillId",
    "skillName",
    "skillVar",
    "startLevel",
    "wudi",
    "ItemBoxData",
    "boxID",
    "ItemDrugData",
    "sale",
    "ItemEngineData",
    "amFile",
    "attackUp",
    "baozouMvDex",
    "boomEffect",
    "engineIcon",
    "mvDex",
    "offsetX",
    "offsetY",
    "shootAm",
    "shootAmImages",
    "zidangId",
    "ItemEngineSkinData",
    "unlockParam",
    "background",
    "unlockType",
    "ItemExpandData",
    "ItemExtraData",
    "quickSale",
    "ItemGiftData",
    "giftItem",
    "money",
    "price",
    "ItemKeyData",
    "ItemLootData",
    "readImageStrs",
    "ItemMaterialData",
    "rocketLevel",
    "ItemMoneyData",
    "ItemPilotData",
    "ItemPropData",
    "ItemReadyData",
    "ItemWeaponData",
    "ItemWheelData",
    "ItemWingmanData",
    "followSpeed",
    "isBulletproofNormally",
    "isBulletproofWhenRaging",
    "runawayFollowDex",
    "ItemMixConsumeData",
    "costItemCount",
    "mixType",
    "requireStr",
    "resultStr",
    "ItemMixRequireData",
    "itemIDs",
    "requireID",
    "sortIDs",
    "ItemSplitData",
    "maxLevel",
    "minLevel",
    "splitEquip",
    "LaserBlastData",
    "laserBlastTime",
    "LootData",
    "LootItemData",
    "lootLevel",
    "lootStar",
    "lootTypeID",
    "LootSpeedData",
    "degrees",
    "LootWaveData",
    "speedData",
    "groupID",
    "MapData",
    "MapGroupData",
    "MarsData",
    "items",
    "MarsDataItem",
    "ModeInfoData",
    "keyNeedNum",
    "stageName",
    "MoonBonusActivity",
    "endTime",
    "startTime",
    "MoonBonusData",
    "MoonGiftActivityConfigData",
    "rewardIds",
    "conditionType",
    "MoonGiftGroupConfigData",
    "MoonGiftOptionConfigData",
    "optionRewardList",
    "MoonGiftRewardConfigData",
    "optionReward",
    "activityId",
    "rewardBgIndex",
    "NewbieBonusData",
    "NewsData",
    "endTimestamp",
    "startTimestamp",
    "channel",
    "endDate",
    "startDate",
    "version",
    "OpenByStageData",
    "maxSubStageId",
    "minSubStageId",
    "skipGuideType",
    "OptionRewardData",
    "optionId",
    "PassBlastData",
    "passBlastTime",
    "PayData",
    "productId",
    "PeriodInfoData",
    "bEnemyNorPause",
    "bMapEffect",
    "lootRangeRate",
    "PeriodicGiftActivityConfigData",
    "giftIds",
    "PeriodicGiftConfigData",
    "giftList",
    "giftBg",
    "giftChest",
    "giftOpenChest",
    "giftTitle",
    "PeriodicGiftRewardConfigData",
    "PilotBaseData",
    "advanceCostItem",
    "armorMultiple",
    "baseValue",
    "baseValueGrow",
    "bgPic",
    "deputyValuePer1000",
    "describe",
    "effectAmPath",
    "effectAnimNumStr",
    "effectPicPath",
    "engineMultiple",
    "mainValuePer1000",
    "maxLv",
    "minLv",
    "moneyAdd",
    "moneyAddGrow",
    "pilotStar",
    "skillDesc",
    "soundStr",
    "upgradeCostMoney",
    "upgradeCostMoneyGrow",
    "upgradeCostRmb",
    "upgradeCostRmbGrow",
    "valueAdd",
    "valueAddGrow",
    "weaponMultiple",
    "wingMultiple",
    "PilotSkillData",
    "isCanUseStr",
    "PilotUnlockData",
    "costItemsStr",
    "isNew",
    "nameindex",
    "PlayerShowData",
    "headurl",
    "nick",
    "PrivilegeCardData",
    "privileges",
    "cardId",
    "PrivilegeCardPrivilege",
    "RawClientInitData",
    "ReadyDetailData",
    "readyID",
    "readyStr",
    "realNeed",
    "rechargeID",
    "rechargeStr",
    "rmbGet",
    "rmbGetExtra",
    "salesIcon",
    "RechargeMoneyData",
    "AchievementRewardData",
    "frontIdList",
    "iconUrl",
    "rewardStr",
    "rewardTipStr",
    "sortLevel",
    "subStr",
    "ActivityRewardData",
    "beginTimeStr",
    "devicePlatform",
    "endTimeStr",
    "isClean",
    "regiestBeginTimeStr",
    "regiestEndTimeStr",
    "tencentPlatform",
    "DecadeuniteRewardData",
    "TaskRewardData",
    "ShareConfigData",
    "dataIds",
    "shareId",
    "ShareData",
    "imageUrl",
    "ShopBoxData",
    "shopItem",
    "extra",
    "ShopData",
    "limitNum",
    "saleIcon",
    "saleStr",
    "ShopEffectData",
    "ShopItemData",
    "itemId",
    "sortId",
    "ShopModuleData",
    "ShopTreasureHuntData",
    "adstime",
    "boxtype",
    "SkinShowData",
    "skins",
    "typeID",
    "SmailData",
    "smailId",
    "SoundData",
    "StageEnemyParam",
    "attackRate",
    "hpRate",
    "StageInfoData",
    "enemyNorLoots",
    "enemyParam",
    "enemyRanLoots",
    "prizeParams",
    "bossName",
    "bossSlashTime",
    "breakEnemyNumOfStar1",
    "breakEnemyNumOfStar2",
    "breakEnemyNumOfStar3",
    "energyCost",
    "prizeIndex",
    "stageAttack",
    "stageDefense",
    "stageFile",
    "stagePower",
    "stageTime",
    "stageType",
    "StageMapParam",
    "mapChangeSpeedTime",
    "mapSpeedRate",
    "StagePrizeParam",
    "StoreData",
    "goods",
    "priceParam",
    "priceType",
    "StoreFree",
    "canShow",
    "dailyLimit",
    "board",
    "limit",
    "superValue",
    "fontOutline",
    "fontShadow",
    "freeName",
    "freeStoreId",
    "giftPackageBackground",
    "nondiscount",
    "prizeBackgroundImage",
    "zodiacIcon",
    "zodiacIconAnimation",
    "zodiacLines",
    "zodiacPoints",
    "StoreValue",
    "channelId",
    "SurveyData",
    "SystemUnlockData",
    "clientShowStage",
    "previewUIEnumId",
    "tipContent",
    "unlockMaxSubStageNum",
    "unlockMinSubStageNum",
    "ThroughData",
    "bThroughOnce",
    "throughLossAttackRate",
    "throughSpeedRate",
    "throughTime",
    "TipPopupData",
    "priority",
    "TrackData",
    "trackID",
    "TreasureProbData",
    "UniverseData",
    "extraPos",
    "pos",
    "UniverseStage",
    "starBgPosY",
    "starBgStr",
    "starPosX",
    "starPosY",
    "starStr",
    "titleAnchorX",
    "titlePosY",
    "titleStr",
    "UtilData",
    "Vector2",
    "VipData",
    "firstGiftItemList",
    "vipDescribe",
    "vipRightData",
    "vipRightIconStr",
    "rmbNeed",
    "vipBgName",
    "vipDesc",
    "vipName",
    "vipOpacity",
    "VipRightData",
    "WeaponBulletData",
    "throughData",
    "bBomb",
    "standbyTime",
    "suicideTime",
    "weaponBulletID",
    "WeaponBulletIndex",
    "grade",
    "WheelProbData",
    "WormHoleInfo",
    "bWormShoot",
    "wormType",
    "ZoneData",
    "url2",
    "Excel",
    "achievementRewardData",
    "actionAwardData",
    "activityRewardData",
    "advertisementData",
    "bossInfoData",
    "cdkeyData",
    "dailyBonusData",
    "dailyBonusTotal",
    "dailyTaskData",
    "dailyTaskStageData",
    "decadeUniteDailyTasksData",
    "decadeUniteDailyTasksTotal",
    "decadeUniteDailyTasksValue",
    "decadeUniteDanmakuData",
    "decadeUniteInviteData",
    "decadeUniteInviteValue",
    "decadeUniteMilestoneBomb",
    "decadeUniteMilestoneData",
    "decadeUniteMilestoneEndless",
    "decadeUniteMilestoneItem",
    "decadeUniteMilestoneKill",
    "decadeUniteMilestoneLottery",
    "decadeUniteMilestoneRecall",
    "decadeUniteMilestoneStage",
    "decadeUniteMilestoneUse",
    "decadeUnitePlaneData",
    "decadeUniteRandomDanmakuData",
    "decadeUniteSkinData",
    "decadeUniteSkinValue",
    "decadeuniteRewardData",
    "endlessIndividualCupData",
    "endlessIndividualCupValue",
    "endlessWorldPvpBattleFieldData",
    "endlessWorldPvpHelpData",
    "endlessWorldPvpJumpFieldData",
    "endlessWorldPvpMatchFieldData",
    "fundEndless",
    "fundStage",
    "gameTipsData",
    "giftInfoData",
    "guideOrderData",
    "guideStepData",
    "guideTriggerData",
    "helpData",
    "httpTipsData",
    "idleBonusData",
    "idleBonusDrop",
    "idleBonusValue",
    "itemArmorData",
    "itemBoxData",
    "itemCfgAdvanceData",
    "itemCfgAttrData",
    "itemCfgUpgradeData",
    "itemDrugData",
    "itemEngineData",
    "itemEngineSkinData",
    "itemExpandData",
    "itemExtraData",
    "itemGiftData",
    "itemKeyData",
    "itemLootData",
    "itemMaterialData",
    "itemMixConsumeData",
    "itemMixRequireData",
    "itemMoneyData",
    "itemPilotData",
    "itemPropData",
    "itemReadyData",
    "itemWeaponData",
    "itemWheelData",
    "itemWingmanData",
    "loadTipsData",
    "marsData",
    "marsRewardData",
    "modeInfoData",
    "moonBonusActivity",
    "moonBonusData",
    "moonGiftActivityConfigData",
    "moonGiftGroupConfigData",
    "moonGiftOptionConfigData",
    "moonGiftRewardConfigData",
    "newbieBonusData",
    "news",
    "payData",
    "periodInfoData",
    "periodicGiftActivityConfigData",
    "periodicGiftConfigData",
    "periodicGiftRewardConfigData",
    "playerShowData",
    "privilegeCardData",
    "privilegeCardPrivilege",
    "remoteUtilData",
    "shareConfigData",
    "shareData",
    "shopBoxData",
    "shopData",
    "shopEffectData",
    "shopModuleData",
    "shopTreasureHuntData",
    "skinShowdata",
    "smailData",
    "storeData",
    "storeFirst",
    "storeFree",
    "storePeriod",
    "storeStage",
    "storeValue",
    "surveyChannel",
    "surveyData",
    "systemUnlockData",
    "taskRewardData",
    "tipPopupData",
    "universeData",
    "universeHeroData",
    "universeStage",
    "utilData",
    "vipData",
    "wormHoleEnemyActionData",
    "wormHoleInfo",
    "zoneData",
    "configTypeMap",
    "configPaths",
    "cfg_advertisement_data",
    "cfg_client_init_data",
    "cfg_daily-bonus_data",
    "cfg_daily-bonus_total",
    "cfg_daily-task_data",
    "cfg_daily-task_reward",
    "cfg_endless-individual-cup_value",
    "cfg_endless-individual-cup_data",
    "cfg_fund_data",
    "cfg_fund_stage",
    "cfg_fund_endless",
    "cfg_guideData_data",
    "cfg_guideData_order",
    "cfg_guideData_trigger",
    "cfg_idle-bonus_value",
    "cfg_idle-bonus_data",
    "cfg_idle-bonus_drop",
    "cfg_item-cfg_attr",
    "cfg_item-cfg_upgrade",
    "cfg_item-cfg_advance",
    "cfg_item-mix_consume",
    "cfg_item-mix_require",
    "cfg_item-split_data",
    "cfg_item_engine",
    "cfg_item_armor",
    "cfg_item_weapon",
    "cfg_item_wingman",
    "cfg_item_prop",
    "cfg_item_gift",
    "cfg_item_extra",
    "cfg_item_wheel",
    "cfg_item_drug",
    "cfg_item_expand",
    "cfg_item_loot",
    "cfg_item_ready",
    "cfg_item_box",
    "cfg_item_money",
    "cfg_item_key",
    "cfg_item_material",
    "cfg_item_pilot",
    "cfg_item_engineSkin",
    "cfg_mars_data",
    "cfg_moon-bonus_activity",
    "cfg_moon-bonus_data",
    "cfg_newbie-bonus_data",
    "cfg_news_news",
    "cfg_news_help",
    "cfg_pay_data",
    "cfg_periodic-gift_activity",
    "cfg_periodic-gift_data",
    "cfg_periodic-gift_reward",
    "cfg_pilot_data",
    "cfg_pilot_unlock",
    "cfg_pilot_skill",
    "cfg_player-show_data",
    "cfg_privilege-card_data",
    "cfg_privilege-card_privilege",
    "cfg_pvp_data",
    "cfg_pvp_help",
    "cfg_ready_data",
    "cfg_recharge_data",
    "cfg_recharge_money",
    "cfg_reward_task",
    "cfg_reward_achievement",
    "cfg_reward_mars",
    "cfg_reward_decadeunite",
    "cfg_shop_data",
    "cfg_shop_box",
    "cfg_shop_module",
    "cfg_shop_effect",
    "cfg_shop_explore",
    "cfg_skinShow_data",
    "cfg_sound_effect",
    "cfg_store_value",
    "cfg_store_data",
    "cfg_store_free",
    "cfg_store_period",
    "cfg_store_stage",
    "cfg_store_first",
    "cfg_survey_data",
    "cfg_survey_channel",
    "cfg_system-unlock_data",
    "cfg_tipPopup_data",
    "cfg_tips_response",
    "cfg_tips_tips",
    "cfg_tips_game",
    "cfg_tips_wheelProb",
    "cfg_tips_treasureHuntProb",
    "cfg_util_data",
    "cfg_vip_data",
    "cfg_zone_data",
    "data_blast_data",
    "data_blast_group_data",
    "data_map_data",
    "data_map_group_data",
    "data_universe_data",
    "data_universe_stage",
    "data_universe_heroLoc",
    "data_weapon-bullet_index",
    "data_weapon-bullet_data",
    "cfg_action-award_data",
    "cfg_gift-info_data",
    "cfg_moon-gift_activity",
    "cfg_moon-gift_reward",
    "cfg_moon-gift_option",
    "cfg_moon-gift_group",
    "decade_unite_decade-unite-daily-tasks_value",
    "decade_unite_decade-unite-daily-tasks_data",
    "decade_unite_decade-unite-daily-tasks_total",
    "decade_unite_decade-unite-danmaku_data",
    "decade_unite_decade-unite-invite_value",
    "decade_unite_decade-unite-invite_data",
    "decade_unite_decade-unite-milestone_data",
    "decade_unite_decade-unite-milestone_item",
    "decade_unite_decade-unite-milestone_endless",
    "decade_unite_decade-unite-milestone_recall",
    "decade_unite_decade-unite-milestone_lottery",
    "decade_unite_decade-unite-milestone_kill",
    "decade_unite_decade-unite-milestone_bomb",
    "decade_unite_decade-unite-milestone_stage",
    "decade_unite_decade-unite-milestone_use",
    "decade_unite_decade-unite-plane_data",
    "decade_unite_decade-unite-skin_data",
    "decade_unite_decade-unite-skin_value",
    "stageConfigPaths",
    "boss-info_data",
    "boss-lar_data",
    "boss-mid_data",
    "dialogue_data",
    "dialogue_cont",
    "enemy-wave-normal_data",
    "enemy-wave-random_data",
    "enemy_data",
    "loot_data",
    "track_data",
    "bullet_data",
    "decade-unite-danmaku_random",
    "manualConfigPaths",
    "stage-2_data",
    "stage-info_data",
    "info_data",
    "loot-wave_data",
    "stage-wormhole_data",
    "stage-wormhole_info",
    "period-info_info",
    "remoteConfigPaths",
    "cfg_reward_activity",
    "cfg_share_config",
    "cfg_share_data",
    "cfg_util_remote",
    "chunks:///_virtual/ConfigBase.ts",
    "./CRC.ts",
    "./RSA.ts",
    "./StringUtil.ts",
    "CRC",
    "RSA",
    "StringUtil",
    "a687fbAeONK16NbKkol7u5s",
    "ConfigBase",
    "getUint16",
    "getInt16",
    "getInt8",
    "Unhandled type: ",
    "byteLength",
    "loadContainer",
    "loadData",
    "decodeText",
    "compute",
    "decrypt",
    " crc: ",
    " crcOrigin: ",
    "loadScene",
    "msg",
    "doClearCachedAssets",
    "loadCombineData",
    "byteOffset",
    "chunks:///_virtual/ConfigLoader.ts",
    "./PilotMgr.ts",
    "./GuideMgr.ts",
    "assetManager",
    "GetBattleModeIndex",
    "GetBattleModePath",
    "PilotMgr",
    "GuideMgr",
    "16cca2nfQBFAaXzaftF90Qs",
    "loadConfig",
    "all json loaded",
    "testLoad",
    "config/",
    "loadBin",
    "loaded: ",
    "onCfgLoaded",
    "loadCallback",
    "needLoadCount",
    "loadStartTimestamp",
    "getTimestamp",
    "getBundle",
    "resources",
    "getInfoWithPath",
    "config/auto",
    "load combine config",
    "config/stage_infos",
    "load combine stage infos",
    "endsWith",
    "binDataCache",
    "config/stage_",
    "_info_data",
    "loadStageInfoConfig",
    "_stage-info_data",
    "stageInfoData[",
    "] is null",
    "loadEnemyActionData",
    "stageInfoData is null",
    "loadBossLarData",
    "loadBossInfoData",
    "stage_",
    "_boss-info_data",
    "loadBossMidData",
    "loadDialogueDatas",
    "ConfigStage onCfgLoaded error: ",
    "loadTime",
    "loadRemoteConfig",
    "/config/",
    "dev",
    "pub",
    ".json?t=",
    "loadRemoteJson",
    "[ConfigLoader] onRemoteCfgLoaded ",
    " from ",
    "chunks:///_virtual/ConfigUtils.ts",
    "./TrackGroup.ts",
    "./BossAttackPointData.ts",
    "./EnemyAttackPointData.ts",
    "TrackGroup",
    "EnemyAttackPointData",
    "81e17fceSROBrkCRYyojWmg",
    "intersects",
    "getTrackGroups",
    "trackGroups",
    "loopNum",
    "trackIDs",
    "trackIntervals",
    "isStraightTrack",
    "transferFlag",
    "getScaleYTrackData",
    "scaleYTrackData",
    "scaledCfgY",
    "convertCfgX",
    "convertCfgY",
    "addWeaponBulletDataByIndex",
    "chunks:///_virtual/ConfigZoneData.ts",
    "e1f5cFeYoBIXIRk0nze7Yqd",
    "ConfigZoneData",
    "backupUrl",
    "zoneIndex",
    "_zoneIndex",
    "chunks:///_virtual/CountDown.ts",
    "3341cbEJIlCvKczT7ERYnx/",
    "CountDown",
    "BattleCountDown",
    "timeDownBar",
    "timeDownLabel",
    "onCountDownFinish",
    "countDownSeconds",
    "timeLeftSeconds",
    "startCountDownTime",
    "chunks:///_virtual/CRC.ts",
    "193c6eh06FB+6tFu6zoezMP",
    "generateTable",
    "table",
    "chunks:///_virtual/CtpMgr.ts",
    "c37b33SoIhGdK/HvdEKcXSC",
    "ctpLevelNums",
    "ctpAddScores",
    "ctpAddHps",
    "ctpBonusScores",
    "ctpBonusHps",
    "ctpCombo",
    "inComboScore",
    "isInCtp",
    "ctpFrame",
    "ctpOutFrame",
    "ctpComboOutLimitFrame",
    "ctpGradeSprite",
    "ctpEffectSprite",
    "splitToNums",
    "parseInt",
    "parseFloatD100",
    "ca_assess",
    "ca_effect",
    "ctpComboOver",
    "bulletQuitCtp",
    "[BattleData] addEbCloseToP comboIntervalMax:",
    "[BattleData] addEbCloseToP comboIntervalMin:",
    "getCtpMaxLevel",
    "isCtpAddScore",
    "addScore:",
    "isCtpAddHp",
    "addHp",
    "addHp:",
    "showCTPGrade",
    "addBonusScore:",
    "addBonusHp:",
    "setComboDis",
    "showCTPEffect",
    "planeNode",
    "addOpacity",
    "ctpCallFuncN",
    "TRIMMED",
    "Type",
    "FILLED",
    "fillType",
    "FillType",
    "VERTICAL",
    "fillStart",
    "anchorY",
    "chunks:///_virtual/CustomButton.ts",
    "11b396zvNZLu4AP5wCxR0e5",
    "chunks:///_virtual/DailyBonusInfoRequsetData.ts",
    "e41cbdbeehPF6nCdVD+htWF",
    "DailyBonusInfoRequsetData",
    "UpCmdDailyBonusInfo",
    "chunks:///_virtual/DailyTask.ts",
    "982463tda5BUZSEZbQFSs3I",
    "DailyTaskStageState",
    "CanGet",
    "HasGet",
    "DailyTaskStageUIType",
    "Max",
    "chunks:///_virtual/DailyTaskData.ts",
    "b664bInHpVO05SSIYSyhW71",
    "curNum",
    "getDescription",
    "活跃度内容：ID：",
    "，名称：",
    "，描述：",
    "，最大完成次数：",
    "，每次的活跃度值：",
    "chunks:///_virtual/DailyTaskMgr.ts",
    "./DailyTaskData.ts",
    "./DailyTaskStageData.ts",
    "./DailyTask.ts",
    "./GainDailyTaskRewardRequestData.ts",
    "GainDailyTaskRewardRequestData",
    "2441fYib6tND5yl5gfhppjq",
    "DailyTaskMgr",
    "_dailyTaskDataMap",
    "_dailyTaskStageMap",
    "_curActivityValue",
    "_getDailyTaskStageIndex",
    "loadDailyTaskData",
    "loadDailyTaskStageData",
    "getDailyTaskData",
    "getCurDailyTaskStage",
    "getMaxDailyTaskStage",
    "getMaxDailyTaskStageLength",
    "getDailyTaskStageData",
    "getDailyTaskDataList",
    "isCanGain",
    "setDailyTaskCurNumByStr",
    "setDailyTaskCurNum",
    "setStageStateByStr",
    "setStageState",
    "checkRedDot",
    "sendGainDailyTaskRewardRequestData",
    "DownCmdGainDailyTaskReward",
    "RefreshDailyTaskStage",
    "chunks:///_virtual/DailyTaskStage.ts",
    "./DailyTaskMgr.ts",
    "./ItemDailyTaskStage.ts",
    "ItemDailyTaskStage",
    "e9111SrnYBCZIcKFKUfFj84",
    "DailyTaskStage",
    "stageNumLabel",
    "stageProgressBar",
    "itemDailyTaskStageList",
    "itemDailyTaskRewardList",
    "getBtn",
    "getBtnLabel",
    "getLabel",
    "_curStage",
    "_maxStage",
    "_curStageIndex",
    "autoChooseStage",
    "chooseStage",
    "setSelect",
    "getStageReward",
    "onBtnGetClick",
    "chunks:///_virtual/DailyTaskStageData.ts",
    "b9b9cAO4xhN7JhyfDGZmmie",
    "rewardBagItems",
    "活跃度阶段：序列：",
    "，数值：",
    "，奖励游戏币：",
    "，奖励充值币：",
    "，道具奖励：",
    "chunks:///_virtual/DamageBelongType.ts",
    "5b2e5/WhQ9LnaBkRWQdvvGJ",
    "chunks:///_virtual/DashMgr.ts",
    "./XPlane.ts",
    "PlaneLootType",
    "XPlane",
    "f4f0eOMxiZM/7iuXz3xK6IV",
    "dashStartNum",
    "dashDeadNum",
    "bStartOrDeadDash",
    "dashHurtTime",
    "dashHurtCount",
    "initDash",
    "initReady",
    "cycleDash",
    "startDash",
    "lootRangeMax",
    "lootRangeMin",
    "setEnemyPauseShoot",
    "bgMap",
    "sprintOff",
    "generatePlaneLoot",
    "PL_DEATH",
    "isEnergy",
    "changeEnergy",
    "energyTotal",
    "isDestoryBlast",
    "clearPlaneLasers",
    "chunks:///_virtual/DataBase.ts",
    "abc9eDdb6ZPwqjeE0XPlG8i",
    "DataBase",
    "_data",
    "getDataValue",
    "setDataValue",
    "chunks:///_virtual/DataDriverLabel.ts",
    "./DataDriverUIBase.ts",
    "DataDriverUIBase",
    "319b7htkHxN64dlgQ1WV3pQ",
    "DataDriverLabel",
    "_label",
    "refreshContent",
    "dataComp",
    "query",
    "chunks:///_virtual/DataDriverLabelSwitch.ts",
    "./DataDriverSwitchBase.ts",
    "./DataItem.ts",
    "DataDriverSwitchBase",
    "StringItem",
    "df6edJb3VBCRr+aFCu3NEI3",
    "DataDriverLabelSwitch",
    "chunks:///_virtual/DataDriverSprite.ts",
    "52b20UiWt1EwJPwUs/azrsK",
    "DataDriverSprite",
    "sprite",
    "chunks:///_virtual/DataDriverSwitchBase.ts",
    "653541d295HVbp8jwNOukBu",
    "chunks:///_virtual/DataDriverUIBase.ts",
    "./DataBase.ts",
    "./DataDriverUtils.ts",
    "DataDriverUtils",
    "a156dDVs55A+7+zRGcrUExe",
    "updateInterval",
    "refreshOnEnable",
    "_lastUpdateTime",
    "findPanel",
    "findComponentInParentHierarchy",
    "onDataChanged",
    "chunks:///_virtual/DataDriverUtils.ts",
    "a10c9OglM1DD7dgPtjVBuT8",
    "chunks:///_virtual/DataEvent.ts",
    "b58b5oP9eBHYbDSlapuokp4",
    "EditorDataEvent",
    "chunks:///_virtual/DataEventManager.ts",
    "be3e9LMmulK/4f03A//aJ2w",
    "DataEventManager",
    "addMonitor",
    "monitors",
    "eventKey",
    "removeMonitor",
    "onDataChange",
    "workingListStack",
    "chunks:///_virtual/DataEventMonitor.ts",
    "./DataEventMonitorBase.ts",
    "DataEventMonitorBase",
    "d9b08MtxAFOCY8ISMxH1Zkr",
    "DataEventMonitor",
    "Self",
    "AllChildren",
    "Select",
    "refreshMode",
    "targets",
    "refreshDataDrivers",
    "getComponents",
    "chunks:///_virtual/DataEventMonitorBase.ts",
    "./DataEvent.ts",
    "./DataEventManager.ts",
    "b659eu+SRlDWaPLpErp9oa8",
    "chunks:///_virtual/DataItem.ts",
    "1ba42DNoshKRbPGSONsQ4TH",
    "DataItem",
    "SpriteItem",
    "Vector2Item",
    "ZERO",
    "chunks:///_virtual/DataUtils.ts",
    "./NPilot.ts",
    "NPilot",
    "c0085dw429I/p6PuIyWz1DV",
    "tickEnergy",
    "_energyTime",
    "needAddEnergyTime",
    "addEnergyBySeconds",
    "AddedEnergyForEachSecond",
    "RefreshTop",
    "addEnergyByTime",
    "refreshBossRedDot",
    "getPackNum",
    "packCapability",
    "checkMainPagePilotRedDot",
    "getPilotModuleData",
    "pilotArray",
    "isUnlock",
    "timesPerDay",
    "isCanUnlock",
    "BuyEnergyTimesAdd",
    "receiveFriendEnergyNum",
    "ReceiveFriTimesAdd",
    "DailyReceiveEnergyCount",
    "sendFriendEnergyNum",
    "DailySendEnergyCount",
    "SentFriTimesAdd",
    "EnergyRecoverFrequency",
    "EnergyCDReduce",
    "MaxEnergyCount",
    "EnergyMaxAdd",
    "getDeputySeatNum",
    "PilotCoplilotNum",
    "PilotSeatAdd",
    "chunks:///_virtual/DeacdeMilestoneChestInfo.ts",
    "c1f96w1QYZGiKPfHT4Wmmut",
    "DeacdeMilestoneChestInfo",
    "bgTran",
    "goodsTran",
    "rewardItems",
    "bagItemList",
    "showStatus",
    "showRewards",
    "getChestInfoWorldPos",
    "onClickTips",
    "onClickBagItem",
    "bagItemIcon",
    "chunks:///_virtual/debug-view-runtime-control.ts",
    "RichText",
    "b2bd1+njXxJxaFY3ymm06WU",
    "debug-view-runtime-control",
    "DebugViewRuntimeControl",
    "internal.DebugViewRuntimeControl",
    "compositeModeToggle",
    "singleModeToggle",
    "EnableAllCompositeModeButton",
    "_single",
    "strSingle",
    "No Single Debug",
    "Vertex Color",
    "Vertex Normal",
    "Vertex Tangent",
    "World Position",
    "Vertex Mirror",
    "Face Side",
    "UV0",
    "UV1",
    "UV Lightmap",
    "Project Depth",
    "Linear Depth",
    "Fragment Normal",
    "Fragment Tangent",
    "Fragment Binormal",
    "Base Color",
    "Diffuse Color",
    "Specular Color",
    "Transparency",
    "Metallic",
    "Roughness",
    "Specular Intensity",
    "IOR",
    "Direct Diffuse",
    "Direct Specular",
    "Direct All",
    "Env Diffuse",
    "Env Specular",
    "Env All",
    "Emissive",
    "Light Map",
    "Shadow",
    "Fresnel",
    "Direct Transmit Diffuse",
    "Direct Transmit Specular",
    "Env Transmit Diffuse",
    "Env Transmit Specular",
    "Transmit All",
    "Direct Internal Specular",
    "Env Internal Specular",
    "Internal All",
    "Fog",
    "strComposite",
    "Normal Map",
    "Tone Mapping",
    "Gamma Correction",
    "Transmit Diffuse",
    "Transmit Specular",
    "Internal Specular",
    "strMisc",
    "CSM Layer Coloration",
    "Lighting With Albedo",
    "compositeModeToggleList",
    "singleModeToggleList",
    "miscModeToggleList",
    "textComponentList",
    "labelComponentList",
    "textContentList",
    "hideButtonLabel",
    "_currentColorIndex",
    "strColor",
    "<color=#ffffff>",
    "<color=#000000>",
    "<color=#ff0000>",
    "<color=#00ff00>",
    "<color=#0000ff>",
    "BLACK",
    "RED",
    "GREEN",
    "BLUE",
    "MiscMode",
    "Buttons",
    "Titles",
    "----------Composite Mode----------",
    "----------Single Mode----------",
    "overflow",
    "getComponentInChildren",
    "TOGGLE",
    "toggleSingleMode",
    "enableAllCompositeMode",
    "changeTextColor",
    "TextColor",
    "hideUI",
    "Hide UI",
    "toggleLightingWithAlbedo",
    "toggleCSMColoration",
    "toggleCompositeMode",
    "debug-view-runtime-control should be child of Canvas",
    "isTextMatched",
    "search",
    "substr",
    "debugView",
    "singleMode",
    "enableCompositeMode",
    "lightingWithAlbedo",
    "csmLayerColoration",
    "Show UI",
    "</color>",
    "chunks:///_virtual/DecadeMilestoneData.ts",
    "8f5f9IqPR9ClLjpf/SojlgR",
    "DecadeMilestoneData",
    "DecadeMilestoneType",
    "Item",
    "Recall",
    "Lottery",
    "Kill",
    "Use",
    "dailyGain",
    "milestoneData",
    "getMilestoneData",
    "setMilestoneData",
    "oid",
    "refreshMilestonData",
    "gain",
    "isShowMilestoneRedDot",
    "hasMilestoneReward",
    "DecadeMilestoneDailyRewardCount",
    "findMilestoneRewardIndex",
    "getMilestoneRewardRemainNum",
    "getMilestoneConfig",
    "getMilestoneOrderIndex",
    "getMilestonMaxLevelData",
    "getMilestoneMaxLevel",
    "getMilestoneDataByLevel",
    "getMilestoneDataByCond",
    "chunks:///_virtual/DecadeMilestoneItem.ts",
    "./DecadeMilestoneData.ts",
    "./DecadeUniteMgr.ts",
    "./DeacdeMilestoneChestInfo.ts",
    "DecadeUniteMgr",
    "97961oYOtJPCYKWh5aiE9MG",
    "DecadeMilestoneItem",
    "UNIT_WAN",
    "UNIT_YI",
    "UNIT_ZHAO",
    "uiOpacity",
    "openAni",
    "progressBar",
    "rewardBtnSpr",
    "rewardBtnNode",
    "rewardNumNode",
    "rewardNumLabel",
    "chestInfo",
    "curProgressLabel",
    "unitNumSpr",
    "targetLabel",
    "netData",
    "maxLevelData",
    "curLevel",
    "curRewardNum",
    "remainRewardNum",
    "clickUnlock",
    "initOpacity",
    "onShow",
    "refreshRewardNum",
    "refreshChestInfo",
    "refreshCurProgress",
    "refreshLevelTarget",
    "refreshUI",
    "hideChestInfo",
    "getItemRewardCount",
    "getRewardWorldPos",
    "loadSprite",
    "refreshRewardSpr",
    "gameUI/TenYears/T-milestone-chest",
    "removeTrailingZeros",
    "getUnitNum",
    "refreshNumUnitSpr",
    "getUnitNumFlag",
    "trim",
    "gameUI/TenYears/T-milestone-num-",
    "已完成",
    "下一级：",
    "getUnit",
    "onBtnObtainRewardClick",
    "每天最多只能领取5个里程碑奖励，请明日再来",
    "sendGainDecadeUniteMilestoneRewardRequestData",
    "unlockClick",
    "onChestInfoBagItemClick",
    "chunks:///_virtual/DecadeMilestoneMirrorChestInfo.ts",
    "bedcawsqYxG/ZCvrvWt1gcp",
    "DecadeMilestoneMirrorChestInfo",
    "goodsNode",
    "bagItemMirrorBtns",
    "onBtnMirrorCallback",
    "itemIndex",
    "initMirrorBtnClick",
    "setGoodsNodeRotate",
    "setRotationFromEuler",
    "onBtnMirrorClick",
    "chunks:///_virtual/DecadeMilestonUpdateItemStatus.ts",
    "CCInteger",
    "446d25b2ENEMp2a+UZo8t2m",
    "DecadeMilestonUpdateItemStatus",
    "itemNode",
    "maxPosZ",
    "minPosZ",
    "lineNodes",
    "elementNodes",
    "UpdateItemStatus",
    "refreshLineNodesStatus",
    "refreshItemNodesStatus",
    "chunks:///_virtual/DecadeUnite.ts",
    "59eeeAoHsVOJauvoxXo4BLp",
    "DecadeUniteInviteValueType",
    "RefreshDay",
    "InviteTimes",
    "DecadeUniteWeekTaskType",
    "Unclaimed",
    "Uncompleted",
    "DecadeUniteWeekAdditType",
    "DecadeUniteSkinEquipIndexType",
    "DecadeUniteSkinEquipType",
    "Claimable",
    "DecadeUniteSkinExchangeType",
    "Exchange",
    "chunks:///_virtual/DecadeUniteDanmaku.ts",
    "bc132BpMrBBNLSyBNrDx19J",
    "DecadeUniteDanmaku",
    "contentLabel",
    "contentLabelTrans",
    "myColor",
    "otherColor",
    "myBg",
    "bgPadding",
    "baseSpeedRandomRange",
    "extraSpeedFactor",
    "extraSpeedStartWidth",
    "finishX",
    "updateRenderData",
    "getNextFloatWithVec2",
    "chunks:///_virtual/DecadeUniteDanmakuMgr.ts",
    "./DecadeUniteDanmaku.ts",
    "0125aL4KWJMU4Je0sSM/ItL",
    "DecadeUniteDanmakuMgr",
    "sendInterval",
    "randomIntervalRange",
    "danmakuParent",
    "danmakuPrefab",
    "otherDanmakuOpacity",
    "myDanmakuOpacity",
    "danmakuList",
    "lastSendTimestamp",
    "activatingDanmakuList",
    "intervals",
    "randomTotalWeight",
    "randomInterval",
    "sendDanmakuCallback",
    "/danmaku/decade_unite_decade-unite-danmaku_random.json?t=",
    "canSendDanmaku",
    "onSendDanmakuSuccess",
    "showDanmaku",
    "getRndInArrayWithWeight",
    "getCountDownLeftTime",
    "getDanmaku",
    "getRandomPosY",
    "getYIntervals",
    "chunks:///_virtual/DecadeUniteData.ts",
    "./DecadeUniteInviteStageData.ts",
    "DecadeUniteInviteStageData",
    "61a1bHmCEdAYomKAz0AXB9j",
    "DecadeUniteData",
    "nickList",
    "danmakuDiamondGained",
    "_danmakuEnable",
    "_inviteNum",
    "_gainInviteState",
    "_decadeUniteInviteDataMap",
    "_skinMap",
    "_skinEndTime",
    "loadInviteData",
    "getInviteConfig",
    "getInviteValue",
    "getInviteStageData",
    "setSkinData",
    "skinId",
    "getSkinData",
    "getSkinDatas",
    "danmakuEnable",
    "inviteNum",
    "gainInviteRewardState",
    "curInviteStage",
    "maxInviteNum",
    "minInviteNum",
    "skinEndTime",
    "chunks:///_virtual/DecadeUniteInfoRequestData.ts",
    "33e0e1f0mxPz5q9PGZ15ECG",
    "DecadeUniteInfoRequestData",
    "UpCmdDecadeUniteInfo",
    "chunks:///_virtual/DecadeUniteInviteBox.ts",
    "./DecadeUniteData.ts",
    "ab8d2DxFl1BoJZmP7+Gc8J5",
    "DecadeUniteInviteBox",
    "lightSprite",
    "boxSprite",
    "_idleAnim",
    "10yInvite-box-idle",
    "_gainAnim",
    "10yInvite-box-activable",
    "gameUI/TenYears/Retrieve-Big-Box-",
    "open-",
    "Gaung",
    "chunks:///_virtual/DecadeUniteInviteRequestData.ts",
    "60bc714amFPG5/Jz6wUUdTY",
    "DecadeUniteInviteRequestData",
    "invitePlatform",
    "inviteTime",
    "inviteUid",
    "UpCmdDecadeUniteInvite",
    "chunks:///_virtual/DecadeUniteInviteStageData.ts",
    "13ddasyZC9I74LTCL3WHV/1",
    "chunks:///_virtual/DecadeUniteMgr.ts",
    "./DecadeUniteSkin.ts",
    "./WeekTaskData.ts",
    "./GainDecadeUniteInviteReward.ts",
    "./DecadeUniteSkinRequestData.ts",
    "./DecadeUnite.ts",
    "./GainDecadeUniteMilestoneRewardRequestData.ts",
    "./GainDecadeUniteDailyTasksTotalRewardRequestData.ts",
    "./GainDecadeUniteDailyTasksRewardRequestData.ts",
    "WeekTaskData",
    "GainDecadeUniteInviteRewardRequestData",
    "DecadeUniteSkinRequestData",
    "GainDecadeUniteMilestoneRewardRequestData",
    "GainDecadeUniteDailyTasksTotalRewardRequestData",
    "GainDecadeUniteDailyTasksRewardRequestData",
    "1a5ecF3GYRF3YXc85xKyxDV",
    "_weekTaskData",
    "_skinId",
    "_skinEquipIndex",
    "_skinGainRewardCallback",
    "_milestoneType",
    "_milestoneId",
    "loadWeekTaskData",
    "loadSkinData",
    "skinDatas",
    "equipInfos",
    "syncServerSkinDatas",
    "syncServerState",
    "activate",
    "syncServerEquipState",
    "checkSkinEquip",
    "checkBagItem",
    "hasSkinReward",
    "sendDecadeUniteSkinRequest",
    "equipIndex",
    "syncServerWeekTaskDatas",
    "syncServerData",
    "refreshWeekTaskItemData",
    "gainDecadeUniteDailyTasksRewardRequestData",
    "taskId",
    "gainDecadeUniteDailyTasksRewardResponse",
    "refreshWeekTaskState",
    "RefreshDecadeUniteWeekTaskItem",
    "gainDecadeUniteDailyTasksTotalRewardRequestData",
    "nodeIndex",
    "gainDecadeUniteDailyTasksTotalRewardResponse",
    "refreshTotalState",
    "RefreshDecadeUniteWeekTaskTotalReward",
    "synServerMilestoneDatas",
    "gainInviteReward",
    "DownCmdGainDecadeUniteInviteReward",
    "invitedNum",
    "RefreshDecadeUniteInvite",
    "DownCmdDecadeUniteSkin",
    "getEquipData",
    "DownCmdGainDecadeUniteDailyTasksReward",
    "DownCmdGainDecadeUniteDailyTasksTotalReward",
    "DownCmdGainDecadeUniteMilestoneReward",
    "RefreshDecadeUniteMilestone",
    "minSkinId",
    "maxSkinId",
    "showSkinId",
    "weekTaskData",
    "chunks:///_virtual/DecadeUnitePlane.ts",
    "easing",
    "456c9ryu+9DNq6u44Eyrqx0",
    "DecadeUnitePlane",
    "myNickLabel",
    "otherNickLabel",
    "cell",
    "cellSize",
    "randomPosZRange",
    "colorLerpPosZRange",
    "colorLerpValueRange",
    "leaveDelayRange",
    "isMe",
    "planeAE",
    "switchCellFinishCallback",
    "randomMoveDurationRange",
    "randomMoveDelayRange",
    "randomPosition",
    "randomMoving",
    "randomRatio",
    "switchCellDelay",
    "switchCellTarget",
    "curPos",
    "isEntering",
    "isLeaving",
    "skinData",
    "cameraNode",
    "leaveDelay",
    "leaveCallback",
    "nickNode",
    "createAE",
    "setSiblingIndex",
    "enter",
    "getRandomPositionInCell",
    "setNickVisible",
    "circOut",
    "randomMove",
    "delayStartRandomMove",
    "moveToCurrentCell",
    "cubicOut",
    "setNick",
    "setGridCell",
    "switchToCell",
    "stopAllActions",
    "unscheduleAllCallbacks",
    "isSwitchingCell",
    "getNextFloat",
    "setupLeave",
    "getPosition",
    "circIn",
    "rotation",
    "inverseLerp",
    "clamp01",
    "lerp",
    "chunks:///_virtual/DecadeUnitePlaneMgr.ts",
    "./DrawGrid.ts",
    "./DecadeUnitePlane.ts",
    "Quat",
    "DrawGrid",
    "2b0a9syzehG0LrDUyg7KBZN",
    "DecadeUnitePlaneMgr",
    "用于展示飞机的摄像机",
    "飞机相对于摄像机的旋转",
    "网格格子大小",
    "初始展示的飞机数量",
    "最小展示的飞机数量",
    "最大展示的飞机数量",
    "用于渲染网格的调试组件",
    "展示飞机的预制体",
    "展示飞机父节点",
    "玩家自己的飞机所在的格子",
    "自己的飞机的缩放",
    "其他的飞机的缩放",
    "自己飞机的Z轴位置随机范围",
    "其他飞机的Z轴位置随机范围",
    "飞机在格子内随机移动系数",
    "随机转移格子的飞机数量",
    "转移格子的间隔随机范围",
    "战机离场随机延迟范围",
    "战机入场随机延迟范围",
    "持续展示名字的飞机数量",
    "planeRotationWithCamera",
    "gridCellSize",
    "initPlaneCount",
    "minPlaneCount",
    "maxPlaneCount",
    "drawGrid",
    "planePrefab",
    "planeParent",
    "myPlaneGrid",
    "myPlaneScale",
    "otherPlaneScale",
    "myPlanePosZRange",
    "otherPlanePosZRange",
    "planeInCellRandomMoveFactor",
    "switchCellPlaneCount",
    "switchCellIntervalRange",
    "enterDelayRange",
    "showNamePlaneCount",
    "allPlanes",
    "idlePlanes",
    "decadeUnitePlaneDataArray",
    "totalWeight",
    "gridSize",
    "freeCells",
    "switchingCellPlaneCount",
    "enterPlaneDelay",
    "leavePlaneDelay",
    "offset",
    "randomSwitchCell",
    "enterPlane",
    "onPlaneLeave",
    "rebuildFreeCells",
    "getWearEngineSkinData",
    "createPlane",
    "[DecadeUnitePlaneMgr] create plane fail: no free cell",
    "getRandomEngineData",
    "onGridCellOccupied",
    "[DecadeUnitePlaneMgr] refresh plane fail: no free cell, destroy old plane",
    "getFreeCell",
    "render",
    "recalculateFreeCells",
    "[DecadeUnitePlaneMgr] randomTransferPlane fail, no free grid",
    "[DecadeUnitePlaneMgr] randomTransferPlane fail, no idle plane",
    "kItemSortEngineSkin",
    "IDENTITY",
    "fromEuler",
    "getMe",
    "chunks:///_virtual/DecadeUniteSendBulletRequestData.ts",
    "341ab9/fSRByaihfp0iNCVf",
    "DecadeUniteSendBulletRequestData",
    "presetMessage",
    "UpCmdDecadeUniteSendBullet",
    "chunks:///_virtual/DecadeUniteSkin.ts",
    "./DecadeUniteSkinEquipData.ts",
    "DecadeUniteSkinEquipData",
    "b8881ey4DdMXrJMjlEMbXcf",
    "skinItem",
    "ticketItem",
    "_skinData",
    "getEngineSkinData",
    "getSkinName",
    "chunks:///_virtual/DecadeUniteSkinEquip.ts",
    "8398dX4xgtMvbwQ4qHwqYB6",
    "DecadeUniteSkinEquip",
    "equip",
    "diamondNode",
    "gainRewardButton",
    "maskNode",
    "lineAnim",
    "_index",
    "_equipInfo",
    "_lineActivateAnim",
    "AM-Skin-Activate-Line",
    "_lineKeepAnim",
    "AM-Skin-Activate-Line-Keep",
    "_onLineActivateAnimFinish",
    "onLineAnimFinished",
    "refreshEquipState",
    "playLineKeepAnim",
    "playLineGainAnim",
    "onBtnGainDiamondClick",
    "gainSkinDiamondRequest",
    "equipInfo",
    "chunks:///_virtual/DecadeUniteSkinEquipData.ts",
    "7fec32ChOdN5Lk8cPwApQ+x",
    "chunks:///_virtual/DecadeUniteSkinExhibition.ts",
    "./PlanePreview.ts",
    "Widget",
    "PlanePreview",
    "440deLGvwJJIrW8LkeGXo/D",
    "DecadeUniteSkinExhibition",
    "planePreview",
    "planePreviewOpacity",
    "planeBgParentNode",
    "planeBgOpacity",
    "isMovePlaneBg",
    "adaptPlanePreview",
    "bottom",
    "updateAlignment",
    "setNodePos",
    "setNodeOpacity",
    "changePlaneAnimation",
    "setItemData",
    "resetView",
    "playTween",
    "chunks:///_virtual/DecadeUniteSkinRequestData.ts",
    "b1187/mXgtFOZY9xJRRrCyk",
    "UpCmdDecadeUniteSkin",
    "chunks:///_virtual/DevPlatform.ts",
    "./Canvas2Image.ts",
    "./NetEnum.ts",
    "Game",
    "PlatformType",
    "d82ab6EDyNMC59ZfUO+tg2X",
    "DevPlatform",
    "_canvas2Image",
    "_canvas",
    "initAppCallBack",
    "initShare",
    "setMessageToFriendQuery",
    "EVENT_HIDE",
    "AppHide",
    "EVENT_SHOW",
    "AppShow",
    "initLauncherOption",
    "login",
    "是否确定清理缓存重新进入游戏？",
    "reload",
    "restartGame",
    "getMenuButtonBoundingClientRect",
    "getSystemInfoSync",
    "android",
    "getUserInfo",
    "createUserInfoButton",
    "setUserCloudStorage",
    "DevPlatform.setUserCloudStorage: ",
    "crossContextDataBusSend",
    "DevPlatform.crossContextDataBusSend: ",
    "rewardedVideoAd",
    "isFromDesktopEnterGame",
    "checkIsAddedToMyMiniProgram",
    "requestPurchase",
    "createGameClubButton",
    "clearCanvas",
    "createImageData",
    "putImageData",
    "saveAsPNG",
    "clearRect",
    "分享成功",
    "setClipboardData",
    "复制成功",
    "clipboard",
    "writeText",
    "Text copied to clipboard successfully!",
    "Failed to copy text: ",
    "Clipboard API not available.",
    "getInviteData",
    "purchaseTrack",
    "chunks:///_virtual/DialogueEnums.ts",
    "812b6J0d1lGvI7XTwpP5VJp",
    "DialogueEnums",
    "DialogueState",
    "Playing",
    "Waiting",
    "Teach",
    "DialoguePosType",
    "Down",
    "chunks:///_virtual/DoubleRewardMgr.ts",
    "./PveDoubleRewardRequestData.ts",
    "PveDoubleRewardRequestData",
    "8e14fIN7rNDMZ51psz6nI8b",
    "DoubleRewardMgr",
    "sendPveDoubleRewardRequestData",
    "DownCmdPveRewardDouble",
    "setCurAddADDoubleRewardNum",
    "adDoubleRewardNum",
    "RefreshPveDoubleReward",
    "chunks:///_virtual/DownCmdAdvance.ts",
    "d4d8eOBx55LKLJP9JdkJZAW",
    "DownCmdAdvance",
    "chunks:///_virtual/DownCmdAidInvitationList.ts",
    "6cc5181wHZB36+33fFuTR1F",
    "DownCmdAidInvitationList",
    "chunks:///_virtual/DownCmdAidRequestList.ts",
    "2e512U3VTtO2pIkdd+zYLy+",
    "DownCmdAidRequestList",
    "chunks:///_virtual/DownCmdAntiData.ts",
    "9ea8eBSqd5AcrBYSInkII/T",
    "DownCmdAntiData",
    "chunks:///_virtual/DownCmdBattleArray.ts",
    "e6ef11OIThKha8uFW+CxxpE",
    "DownCmdBattleArray",
    "chunks:///_virtual/DownCmdBestHistory.ts",
    "58537+tDP1AnKlQ97U1BrAL",
    "DownCmdBestHistory",
    "chunks:///_virtual/DownCmdBossPkData.ts",
    "22229fSzfJK+6Jluu3NCeuG",
    "DownCmdBossPkData",
    "chunks:///_virtual/DownCmdBuy.ts",
    "8a0b5j7AfpB2oYout2DmOhb",
    "DownCmdBuy",
    "chunks:///_virtual/DownCmdBuyFund.ts",
    "2dd4dsbTptNoLtvZT0f4VgY",
    "DownCmdBuyFund",
    "chunks:///_virtual/DownCmdBuyMoonGiftReward.ts",
    "9bb5cuXhoJNMpxVtzBiZAJl",
    "DownCmdBuyMoonGiftReward",
    "chunks:///_virtual/DownCmdBuyPeriodicGiftReward.ts",
    "a1c66+42uFG6qEG+9+EcpvT",
    "DownCmdBuyPeriodicGiftReward",
    "chunks:///_virtual/DownCmdBuyPrivilegeCard.ts",
    "347e6KB82tFQ5/ggMl05zSn",
    "DownCmdBuyPrivilegeCard",
    "chunks:///_virtual/DownCmdBuyStoreFree.ts",
    "8a8502ZMCFJHYgWbcn7ts5a",
    "DownCmdBuyStoreFree",
    "chunks:///_virtual/DownCmdBuyStorePeriod.ts",
    "a20afzL9JNLoIoY4TX58aAi",
    "DownCmdBuyStorePeriod",
    "chunks:///_virtual/DownCmdBuyStoreStage.ts",
    "ec190bZta9Aw7ZqCNNMwBCa",
    "DownCmdBuyStoreStage",
    "chunks:///_virtual/DownCmdCdKey.ts",
    "5a8a0Fq+9dA2L0gnUutdWVC",
    "chunks:///_virtual/DownCmdCheckPVPResult.ts",
    "e79deSHoVxPFLMECGCzojFD",
    "DownCmdCheckPVPResult",
    "chunks:///_virtual/DownCmdDailyBonusInfo.ts",
    "31ceajGr/dKZ6ug9VIrIzqs",
    "DownCmdDailyBonusInfo",
    "chunks:///_virtual/DownCmdDecadeUniteInfo.ts",
    "8fc66AxMDBJ55rybtc19yMO",
    "DownCmdDecadeUniteInfo",
    "chunks:///_virtual/DownCmdDecadeUniteInvite.ts",
    "2b9adO6KixOU6R457Qbeuh2",
    "DownCmdDecadeUniteInvite",
    "chunks:///_virtual/DownCmdDecadeUniteSendBullet.ts",
    "8e7218t6QlF8rsyaL8eh2wd",
    "DownCmdDecadeUniteSendBullet",
    "chunks:///_virtual/DownCmdDecadeUniteSkin.ts",
    "150b3mqitpGF6MFwplVVwjC",
    "chunks:///_virtual/DownCmdEndlessIndividualCupGainReward.ts",
    "f04fcfJNN9Ca6XtUxXGtLnL",
    "DownCmdEndlessIndividualCupGainReward",
    "chunks:///_virtual/DownCmdEndlessIndividualCupInfo.ts",
    "0c0b2/lv4FHlqVbrOyCUWND",
    "DownCmdEndlessIndividualCupInfo",
    "chunks:///_virtual/DownCmdEndlessIndividualCupStart.ts",
    "3cccdaPeJxKi4Jf44ePe5sc",
    "DownCmdEndlessIndividualCupStart",
    "chunks:///_virtual/DownCmdEnergy.ts",
    "71b0ee6tDxCwoGbxtPwEiL4",
    "DownCmdEnergy",
    "chunks:///_virtual/DownCmdEnergySwitch.ts",
    "78eccVNwC5JYqixTMhi3VHY",
    "DownCmdEnergySwitch",
    "chunks:///_virtual/DownCmdEnterError.ts",
    "61477RA3G1IFJ/GEpZ/ise8",
    "DownCmdEnterError",
    "chunks:///_virtual/DownCmdEnterPVPArea.ts",
    "29b24syFZtENKXrqpIqQNol",
    "DownCmdEnterPVPArea",
    "chunks:///_virtual/DownCmdEquip.ts",
    "98f50mhtuxKf5v7aA/D40Yv",
    "DownCmdEquip",
    "chunks:///_virtual/DownCmdEquipSkinActivate.ts",
    "984ac+/dk5BnoLZE1qCGGDU",
    "DownCmdEquipSkinActivate",
    "chunks:///_virtual/DownCmdFeedback.ts",
    "9b36961A5NJaqx9/BZoGIih",
    "DownCmdFeedback",
    "chunks:///_virtual/DownCmdFriendData.ts",
    "5c7f5rQSj1BGbOXh5pCYzTh",
    "DownCmdFriendData",
    "chunks:///_virtual/DownCmdFriendList.ts",
    "c1438P8R6lItZqzUm8h3g9T",
    "DownCmdFriendList",
    "chunks:///_virtual/DownCmdFundInfo.ts",
    "cb11bdTLx1Hr4XVqMg3dEMC",
    "DownCmdFundInfo",
    "chunks:///_virtual/DownCmdGainAidReward.ts",
    "67f0aUhjDtNUIy/jw+ULQTg",
    "DownCmdGainAidReward",
    "chunks:///_virtual/DownCmdGainDailyBonus.ts",
    "d62bfLTLSVD8aOZ7dWLnJpU",
    "DownCmdGainDailyBonus",
    "chunks:///_virtual/DownCmdGainDailyTaskReward.ts",
    "fea57tLbEhIv4ijSqnh7NUr",
    "chunks:///_virtual/DownCmdGainDecadeUniteDailyTasksReward.ts",
    "745e05MnotK6b8EltLpPLna",
    "chunks:///_virtual/DownCmdGainDecadeUniteDailyTasksTotalReward.ts",
    "24d2eHjMV9Hnr8slR+aIe5T",
    "chunks:///_virtual/DownCmdGainDecadeUniteInviteReward.ts",
    "54dc5wEVE9Dh4Lk5zkEzhei",
    "chunks:///_virtual/DownCmdGainFund.ts",
    "d0c98xDWUBBLpxDw5By0Hrm",
    "DownCmdGainFund",
    "chunks:///_virtual/DownCmdGainIdleBonus.ts",
    "d224axzpz5AIK/iV9dT1B0t",
    "DownCmdGainIdleBonus",
    "chunks:///_virtual/DownCmdGainLoginReward.ts",
    "b3e43FEeFVPPJh2ddiCUko9",
    "DownCmdGainLoginReward",
    "chunks:///_virtual/DownCmdGainMoonBonus.ts",
    "cbedbCg+v9OM7VCc3+8IYXj",
    "DownCmdGainMoonBonus",
    "chunks:///_virtual/DownCmdGainNewbieBonus.ts",
    "7243fg1C8xOAoobNiVjiiMA",
    "DownCmdGainNewbieBonus",
    "chunks:///_virtual/DownCmdGainPrivilegeCard.ts",
    "b2d14/NsJ9G7rJX36ByRJof",
    "DownCmdGainPrivilegeCard",
    "chunks:///_virtual/DownCmdGainQuickIdleBonus.ts",
    "a3c37+D8ANNCatPDVXXynO4",
    "DownCmdGainQuickIdleBonus",
    "chunks:///_virtual/DownCmdGainReward.ts",
    "88bd7f7xFRK0oz4b92iJcWr",
    "DownCmdGainReward",
    "chunks:///_virtual/DownCmdGainStoreStage.ts",
    "fd8acPjLzREhavOsV84gW+x",
    "DownCmdGainStoreStage",
    "chunks:///_virtual/DownCmdGainTotalDailyBonus.ts",
    "31ff4Y1qBBD+Ys0443YfG5t",
    "DownCmdGainTotalDailyBonus",
    "chunks:///_virtual/DownCmdGainVIPFirstPrize.ts",
    "50a5erl96NHTZmT5R816aOD",
    "DownCmdGainVIPFirstPrize",
    "chunks:///_virtual/DownCmdGetClientData.ts",
    "4cfe99ygzhH8KD63MB33ZaA",
    "chunks:///_virtual/DownCmdGetClientVars.ts",
    "b8bdfzA0zlB1oU+Im5xJ8Zg",
    "DownCmdGetClientVars",
    "chunks:///_virtual/DownCmdGetFailedOrders.ts",
    "bad42YDK0JJxYQZ7nlLHaaf",
    "DownCmdGetFailedOrders",
    "chunks:///_virtual/DownCmdGetIosPreview.ts",
    "aca22eUXCVKI6wGSODZrWtL",
    "DownCmdGetIosPreview",
    "chunks:///_virtual/DownCmdGetNotice.ts",
    "1b0ebaTSDNAYZcSHCP5cYda",
    "DownCmdGetNotice",
    "chunks:///_virtual/DownCmdGiftEnergy.ts",
    "08e52zT6e5KSbFbCcO6lqHS",
    "DownCmdGiftEnergy",
    "chunks:///_virtual/DownCmdGuide.ts",
    "73acalzvn1Kfb2+3acUYfLG",
    "DownCmdGuide",
    "chunks:///_virtual/DownCmdHead.ts",
    "9f20dFBiuhAuJM6XmDnIaIu",
    "DownCmdHead",
    "chunks:///_virtual/DownCmdHeartbeat.ts",
    "68e36OQ7OxAPqeAA7loV7qF",
    "DownCmdHeartbeat",
    "chunks:///_virtual/DownCmdHeroPkData.ts",
    "43653Wk7cZFMqtt9eXICFML",
    "DownCmdHeroPkData",
    "chunks:///_virtual/DownCmdIdleBonusInfo.ts",
    "e81a1aaLeVLoqS7gUyVBSmJ",
    "DownCmdIdleBonusInfo",
    "chunks:///_virtual/DownCmdIndex.ts",
    "d457dcol9FFbK8x5/PSDJs+",
    "DownCmdIndex",
    "chunks:///_virtual/DownCmdInvite.ts",
    "3ee162tS4lCdqR0T6bgx86x",
    "DownCmdInvite",
    "chunks:///_virtual/DownCmdLogin.ts",
    "c712axO2BNIyJBJW31VRdC2",
    "DownCmdLogin",
    "chunks:///_virtual/DownCmdMarsActivation.ts",
    "d584f9XMnlACIXfixekVrym",
    "DownCmdMarsActivation",
    "chunks:///_virtual/DownCmdMarsDeactivation.ts",
    "19879anhSxG54WUIJdEn/V+",
    "DownCmdMarsDeactivation",
    "chunks:///_virtual/DownCmdMix.ts",
    "dc073hVR15Ft45rC4J/+v2k",
    "DownCmdMix",
    "chunks:///_virtual/DownCmdModule.ts",
    "e1674OR/blP+pmdhBeWSzKo",
    "DownCmdModule",
    "chunks:///_virtual/DownCmdMoonBonusInfo.ts",
    "8b228CxEx9DhKOmdxnaONwv",
    "DownCmdMoonBonusInfo",
    "chunks:///_virtual/DownCmdMoonGiftGainReward.ts",
    "99079hyKpFFCIC6WjFi71gM",
    "DownCmdMoonGiftGainReward",
    "chunks:///_virtual/DownCmdMoonGiftInfo.ts",
    "edc7ebEzSBA8J1ld1eRNjVr",
    "DownCmdMoonGiftInfo",
    "chunks:///_virtual/DownCmdNewbieBonusInfo.ts",
    "41eb39mXbNDD4AGjAvtREeu",
    "DownCmdNewbieBonusInfo",
    "chunks:///_virtual/DownCmdOwnLogin.ts",
    "cece6DbGBFCxrjcHijWCIxj",
    "DownCmdOwnLogin",
    "chunks:///_virtual/DownCmdPeriodicGiftGainReward.ts",
    "7bf26XH+ghDnp8BfPIfbIEx",
    "DownCmdPeriodicGiftGainReward",
    "chunks:///_virtual/DownCmdPeriodicGiftInfo.ts",
    "8c32cYikSlMkK5cIrwg6F9j",
    "DownCmdPeriodicGiftInfo",
    "chunks:///_virtual/DownCmdPeriodPkData.ts",
    "9cfddgL2ABLkZjGCDZBWDOf",
    "DownCmdPeriodPkData",
    "chunks:///_virtual/DownCmdPilotAdvance.ts",
    "e7b3cgeWIVCsJto9C4hn5I/",
    "DownCmdPilotAdvance",
    "chunks:///_virtual/DownCmdPilotMix.ts",
    "e6a3fPo6xZK3p+atQHNAodU",
    "DownCmdPilotMix",
    "chunks:///_virtual/DownCmdPilotReplace.ts",
    "bfe52hp5DdBq4lTtbNtbhBC",
    "DownCmdPilotReplace",
    "chunks:///_virtual/DownCmdPilotUpgrade.ts",
    "ee88cUYvW1AmKa/UPzNeAtd",
    "DownCmdPilotUpgrade",
    "chunks:///_virtual/DownCmdPlaceOrder.ts",
    "cfc36oavkFLLJP/dx+g5Wmu",
    "DownCmdPlaceOrder",
    "chunks:///_virtual/DownCmdPlayerLogout.ts",
    "6c6d2WmkT5Mh4WQFT8jD6YA",
    "DownCmdPlayerLogout",
    "chunks:///_virtual/DownCmdPrivilegeCardInfo.ts",
    "c0395QS0n1GRpRMMILxJbZn",
    "DownCmdPrivilegeCardInfo",
    "chunks:///_virtual/DownCmdPullback.ts",
    "311cfSRz6JFMZWsA0E2G5AH",
    "DownCmdPullback",
    "chunks:///_virtual/DownCmdPveGame1.ts",
    "5e669HJC6lP0rwyY8Mdze2V",
    "DownCmdPveGame1",
    "chunks:///_virtual/DownCmdPveGameEnd.ts",
    "8860fUMBGhF/acCmFQWZBEz",
    "DownCmdPveGameEnd",
    "chunks:///_virtual/DownCmdPveRewardDouble.ts",
    "038fcsxyQlN6a/hCJf4se/R",
    "chunks:///_virtual/DownCmdPVPScoreSync.ts",
    "93c97OhyLhA4J1IuiZOJ4Lh",
    "DownCmdPVPScoreSync",
    "chunks:///_virtual/DownCmdPVPShopBuy.ts",
    "fce301FA+tJCbNhpGC+tbjY",
    "DownCmdPVPShopBuy",
    "chunks:///_virtual/DownCmdPVPShopLastRefreshTime.ts",
    "886c9h/1mpKRaz1um1IxqSp",
    "DownCmdPVPShopLastRefreshTime",
    "chunks:///_virtual/DownCmdPVPShopShow.ts",
    "8c959HosIdC8omlTERmsrs5",
    "DownCmdPVPShopShow",
    "chunks:///_virtual/DownCmdQqGetBalance.ts",
    "3ed1cP0jgRKFIYPC8UOfsue",
    "DownCmdQqGetBalance",
    "chunks:///_virtual/DownCmdQqLogin.ts",
    "e622c9kRT1FyLhjn8fdRaEw",
    "DownCmdQqLogin",
    "chunks:///_virtual/DownCmdQqShare.ts",
    "16407beoqZGO4zFwJvmuiKX",
    "DownCmdQqShare",
    "chunks:///_virtual/DownCmdQueryOrder.ts",
    "5a04a5S26NJcbzAiX4ic8hh",
    "DownCmdQueryOrder",
    "chunks:///_virtual/DownCmdQueryPVPMatch.ts",
    "0cd59rQ2QhBBKX82krVSOkf",
    "DownCmdQueryPVPMatch",
    "chunks:///_virtual/DownCmdRandData.ts",
    "20624YGWAFM0rS7wHJaNB0T",
    "DownCmdRandData",
    "chunks:///_virtual/DownCmdRandomAidFriendList.ts",
    "fdc0aRf9aFEmY7Msu+5J/Lg",
    "DownCmdRandomAidFriendList",
    "chunks:///_virtual/DownCmdRandomSupply.ts",
    "0c652FnZJ1Ao49eoYW5ROF3",
    "DownCmdRandomSupply",
    "chunks:///_virtual/DownCmdRecharge.ts",
    "76cfcQfa3VGGYz6sjI3VzKN",
    "DownCmdRecharge",
    "chunks:///_virtual/DownCmdRechargeBase.ts",
    "a185395RqREgpCJU0fFOfvX",
    "DownCmdRechargeBase",
    "chunks:///_virtual/DownCmdRechargeM2.ts",
    "2be188Yde1AEL82mlIrb/bH",
    "DownCmdRechargeM2",
    "chunks:///_virtual/DownCmdRechargeMoney.ts",
    "fdb9fOffdFFpIg6544TJ7kI",
    "DownCmdRechargeMoney",
    "chunks:///_virtual/DownCmdRegCnt.ts",
    "99b64UGDU9EHYts5evMKHcj",
    "DownCmdRegCnt",
    "chunks:///_virtual/DownCmdRemoveData.ts",
    "0c5ffq7419FYqW6flAWtpkD",
    "DownCmdRemoveData",
    "chunks:///_virtual/DownCmdReportRechargeFail.ts",
    "bfae6tgJBZMIoPVWRvdVFzK",
    "DownCmdReportRechargeFail",
    "chunks:///_virtual/DownCmdRogueBuy.ts",
    "7d46befqU9J+YxMxOgE4r5Q",
    "DownCmdRogueBuy",
    "chunks:///_virtual/DownCmdRogueLastRefreshTime.ts",
    "d290bn49DBNZrKYxO3Locy1",
    "DownCmdRogueLastRefreshTime",
    "chunks:///_virtual/DownCmdRogueShow.ts",
    "940d4GdVs1CcI48JSJcQjJS",
    "DownCmdRogueShow",
    "chunks:///_virtual/DownCmdSecRoundEndCountData.ts",
    "c766e7vwqtBlo9FXg8t6tET",
    "DownCmdSecRoundEndCountData",
    "chunks:///_virtual/DownCmdSecRoundEndData.ts",
    "8c12fFlhJZOZZ74S8XGkDpa",
    "DownCmdSecRoundEndData",
    "chunks:///_virtual/DownCmdSecRoundStartData.ts",
    "1a4f7ZLxcJBP4YgAkF94mjZ",
    "DownCmdSecRoundStartData",
    "chunks:///_virtual/DownCmdSell.ts",
    "363d0PM8B5N06zplrFn/lOH",
    "DownCmdSell",
    "chunks:///_virtual/DownCmdSendEnergy.ts",
    "743cabYxBVN6qKgWwTymfr4",
    "DownCmdSendEnergy",
    "chunks:///_virtual/DownCmdSendGoods.ts",
    "7aab2Sx0NhG5KL4MsraL3pn",
    "DownCmdSendGoods",
    "chunks:///_virtual/DownCmdSetClientData.ts",
    "8c83amb0shEqodGW+JJC6Db",
    "DownCmdSetClientData",
    "chunks:///_virtual/DownCmdSingleGuide.ts",
    "7ae105JdOBDypd0E/B5aZRE",
    "DownCmdSingleGuide",
    "chunks:///_virtual/DownCmdSplit.ts",
    "9e50eCmY8BFdrpJu3sV1JrR",
    "DownCmdSplit",
    "chunks:///_virtual/DownCmdStoreFirstInfo.ts",
    "2515aqpoAtE147m+cNFWHBZ",
    "DownCmdStoreFirstInfo",
    "chunks:///_virtual/DownCmdStorePeriodInfo.ts",
    "4864drVCQhBbaqxv0NEuBhB",
    "DownCmdStorePeriodInfo",
    "chunks:///_virtual/DownCmdSweep.ts",
    "30f08rdyiVLWrWxkpGmrUnt",
    "DownCmdSweep",
    "chunks:///_virtual/DownCmdSysmsgItem.ts",
    "042d5wu1VxI3avQRgU6e6ve",
    "DownCmdSysmsgItem",
    "chunks:///_virtual/DownCmdTest.ts",
    "f4a1fr5F/BIRbsjac1tn62L",
    "DownCmdTest",
    "chunks:///_virtual/DownCmdTopBulletin.ts",
    "bb797uvyLxAJbnfVzvLoLRe",
    "DownCmdTopBulletin",
    "chunks:///_virtual/DownCmdTreasureHunt.ts",
    "ed2a4roPSNMxaBugQsYwH5a",
    "DownCmdTreasureHunt",
    "chunks:///_virtual/DownCmdTurnTableBuy.ts",
    "684c45v0fZPXIfQqHnE6vmR",
    "DownCmdTurnTableBuy",
    "chunks:///_virtual/DownCmdTurnTableLastRefreshTime.ts",
    "9243aVpkANOl4oSfK/okwvi",
    "DownCmdTurnTableLastRefreshTime",
    "chunks:///_virtual/DownCmdTurnTableShow.ts",
    "2e9b3dDbCNPJbs5l3QmqLoc",
    "DownCmdTurnTableShow",
    "chunks:///_virtual/DownCmdUnlockPve.ts",
    "6f4fc08ostA2qK3H0bcvT0y",
    "DownCmdUnlockPve",
    "chunks:///_virtual/DownCmdUnlockPveHero.ts",
    "cd4ecweucVF061kfoQhElin",
    "DownCmdUnlockPveHero",
    "chunks:///_virtual/DownCmdUpgrade.ts",
    "e3a68saJVpCWZ77HAtPv3N6",
    "DownCmdUpgrade",
    "chunks:///_virtual/DownCmdUseItem.ts",
    "8d240668v9NvLXZCK2fR3EA",
    "DownCmdUseItem",
    "chunks:///_virtual/DownCmdUseSupply.ts",
    "fd9d7jjB1pI0aBB5jWdtlhN",
    "DownCmdUseSupply",
    "chunks:///_virtual/DownCmdWxMiniLogin.ts",
    "8669c1YVzhEtaI2zzJ1xF0t",
    "DownCmdWxMiniLogin",
    "chunks:///_virtual/DpsInfo.ts",
    "f3f5by1OWFML55BNlJ08Qwe",
    "DpsInfo",
    "belongType",
    "totalDamage",
    "instantDps",
    "averageDps",
    "maxDps",
    "damageCounts",
    "totalSeconds",
    "damagePercent",
    "dps",
    "elapsed",
    "printLog",
    "类型：",
    "，伤害占比：",
    "%，总伤害：",
    "，平均DPS：",
    "，最大DPS：",
    "，伤害详情：",
    "chunks:///_virtual/DpsMgr.ts",
    "./DpsInfo.ts",
    "b2a921W9xNKRI4HbxZ0b/7B",
    "dpsInfos",
    "[DpsMgr] 伤害统计，总伤害：",
    "showEquipDpsInfo",
    "isBPauseShoot",
    "isPauseShootByPlane",
    "isPauseShootByStage",
    "chunks:///_virtual/DrawGrid.ts",
    "Graphics",
    "f226eq2fs5JQZsBxJyL/vrU",
    "fromHEX",
    "#FFFFFF",
    "moveTo",
    "lineTo",
    "chunks:///_virtual/EA.ts",
    "getOwnPropertyDescriptor",
    "setFloat64",
    "getUint32",
    "setUint32",
    "getFloat64",
    "enumerable",
    "configurable",
    "getUint8",
    "setUint8",
    "getOwnPropertyNames",
    "startsWith",
    "boolean",
    "9e9787tZodF+arZA8wOQqUt",
    "chunks:///_virtual/EndlessCupData.ts",
    "eac19qYmdhGo7xV8QvQ8eWS",
    "ElICupRankInfo",
    "rank",
    "headUrl",
    "isNotInit",
    "selfRank",
    "selfScore",
    "playerInfos",
    "isStart",
    "isNotClaim",
    "isRefreshInfo",
    "isStagePopup",
    "isKnowWheelState",
    "refreshCount",
    "refreshInterval",
    "isLaterPopup",
    "isActiveIcon",
    "setCurrentState",
    "endlessRobotRefresh",
    "saveRefreshCount",
    "getRefreshCount",
    "addRefreshCount",
    "setEndlessData",
    "dtEnd",
    "ranks",
    "getLeftTime",
    "isRefreshRobotData",
    "chunks:///_virtual/EndlessCupMgr.ts",
    "./EndlessIndividualCupGainRewardRequestData.ts",
    "./EndlessIndividualCupInfoRequestData.ts",
    "./EndlessIndividualCupStartRequestData.ts",
    "EndlessIndividualCupGainRewardRequestData",
    "EndlessIndividualCupInfoRequestData",
    "EndlessIndividualCupStartRequestData",
    "f8d7auiZVlNh6j01yiiZ6cO",
    "EndlessCupMgr",
    "sendEndlessCupStartRequestData",
    "sendEndlessCupInfoRequestData",
    "sendEndlessCupGainRequestData",
    "getAutoPopupEndless",
    "getAutoPopupEndlessOver",
    "cup",
    "ranksBaseInfo",
    "endlessCupArray",
    "RefreshEndlessCupMeunIcon",
    "RefreshEndlessCupPopup",
    "RefreshEndlessCupInfo",
    "getAllTreasureItems",
    "endlessRobotInfos",
    "removeItem",
    "response",
    "chunks:///_virtual/EndlessIndividualCupGainRewardRequestData.ts",
    "65043+lt2lC2640/2ZBEm8l",
    "UpCmdEndlessIndividualCupGainReward",
    "chunks:///_virtual/EndlessIndividualCupInfoRequestData.ts",
    "1ef88UjA2BLAK0SD3PWsNjP",
    "UpCmdEndlessIndividualCupInfo",
    "chunks:///_virtual/EndlessIndividualCupStartRequestData.ts",
    "1f38bjldKVN4ZR4gKI0A7Py",
    "UpCmdEndlessIndividualCupStart",
    "chunks:///_virtual/EndlessWorldPvpData.ts",
    "./NFriend.ts",
    "NFriend",
    "d6d14WwEFJK7K1aJGTtEXs2",
    "PvpBattleState",
    "Unknown",
    "Unfinished",
    "Unread",
    "Read",
    "PvpBattleResult",
    "Win",
    "Tie",
    "Lose",
    "REPORT_CHEAT",
    "NPvpBattleInfoData",
    "m_pBattleFieldData",
    "m_pRivalPlayerInfo",
    "myScore",
    "pvpBattleFieldIndex",
    "rivalScore",
    "pvoToken",
    "isNpc",
    "getCopy",
    "getLogDescription",
    "[NPvpBattleInfoData] ID:",
    " state:",
    " battleField:",
    " myScore:",
    " rivalScore:",
    " rivalName:",
    "getPvpBattleResult",
    "getRewardCurrencyValue",
    "getRewardPvpTokenValue",
    "getRivalPlayerInfo",
    "isUnread",
    "stat",
    "vs_score",
    "area_id",
    "starDt",
    "npc",
    "setRivalPlayerInfo",
    "EndlessWorldPvpState",
    "Idle",
    "Matching",
    "EnterBattle",
    "Battle",
    "Finished",
    "m_bClosed",
    "m_bCrossDay",
    "m_nPvpBattleFieldIndex",
    "m_oAvailableEndMoment",
    "2:00",
    "m_oAvailableStartMoment",
    "6:00",
    "m_pNewPvpBattleInfoData",
    "m_pPvpBattleInfoDatas",
    "todayGainPvpTokenCount",
    "rivalData",
    "rivalState",
    "reportCheatMap",
    "_lastPvpTokenReachLimitPopupTime",
    "loadFromIndex",
    "pvpResultList",
    "pvpResultOppInfoList",
    "addPvpBattleInfoData",
    "[EndlessWorldPvpData] 无效的PVP对战信息:",
    "pvpBeginTime",
    "pvpEndTime",
    "getCurTimestamp",
    "getDate",
    "convertStringToTimestamp",
    "dailyPvpPo",
    "pkNum",
    "updateRedDotState",
    "[NPvpData] 开启时间:",
    ") 结束时间:",
    ") 是否跨天:",
    " 日期字符串:",
    "loadFromPveGameStart",
    "setPvpBattleFieldIndex",
    "pvp",
    "pvpAreaId",
    "[NPvpData] 战斗下行 是否是PVP:",
    " 战场索引:",
    "getCurPvpBattleFieldData",
    "removeCurrencyDirectly",
    "[NPvpData] 匹配查询 扣除入场费:",
    "loadFromPveGameEnd",
    "pvpRes",
    "baseInfo",
    "[EndlessWorldPvpData] 新增PVP对战信息:",
    "setNewPvpBattleInfoData",
    "deleteList",
    "removePvpBattleInfoData",
    "[EndlessWorldPvpData] 删除PVP对战信息:",
    "[EndlessWorldPvpData] 删除PVP对战信息失败:",
    "loadFromSync",
    "vsScore",
    "vsState",
    "loadFromHeartBeat",
    "pvpResultChangeList",
    "getPvpBattleInfoData",
    "[NPvpData] 心跳下行 更新对战结果状态:",
    "[NPvpData] 心跳下行 未找到对战结果数据 ID:",
    "loadReportCheat",
    "sendGetClientVarsRequest",
    "[EndlessWorldPvpData] 读取作弊举报数据失败:",
    "DAY",
    "[EndlessWorldPvpData] 过滤掉已经过期的作弊举报数据:",
    "saveReportCheat",
    "reportCheat",
    "[EndlessWorldPvpData] NPC跳过举报作弊",
    "report_pvp_cheat",
    "[EndlessWorldPvpData] 举报作弊:",
    "sendSetClientVarsRequest",
    "isThereAreUnreadPvpBattleInfoData",
    "cleanNewPvpBattleInfoData",
    "getNewPvpBattleInfoData",
    "getNextUnreadPvpBattleInfoData",
    "getPvpBattleFieldIndex",
    "getPvpBattleInfoDatas",
    "getUnreadPvpBattleInfoDatas",
    "[NPvpData] timestamp:",
    " start:",
    " end:",
    " isCrossDay:",
    " isAvailable:",
    "isNeedShowNewPvpBattleInfoData",
    "resetPvpBattleField",
    "getPvpBattleFieldDatas",
    "getNormalPvpBattleFieldDatas",
    "NORMAL_PVP_BATTLE_FIELD_COUNT",
    "getRewardBagItems",
    "getWinRewardCurrencyValue",
    "kCurrencyPvp",
    "getPvpWinGetCurrencyParamByLevel",
    "lastPvpTokenReachLimitPopupTime",
    "lastPvpTokenReachLimitPopupTime_",
    "isPvpTokenReachLimitPopupToday",
    "chunks:///_virtual/EndlessWorldPvpMgr.ts",
    "./UpCmdPVPScoreSync.ts",
    "./CheckPVPResultRequestData.ts",
    "UpCmdPVPScoreSync",
    "ConnectionType",
    "6738749CcZDJK+uYFRkgNVg",
    "getConnection",
    "Front",
    "clearRequestInQueue",
    "EndlessWorldPvpMatchCheckInterval",
    "hasRequestInQueue",
    "sendCheckPvpResult",
    "[EndlessWorldPvpMgr] sendCheckPvpResult id:",
    "chunks:///_virtual/EndlessWorldShopData.ts",
    "1c8b02giZFFKqyC4+Ud/poV",
    "EndlessWorldShopData",
    "shopEffect",
    "pvpCoinRedPointShowKey",
    "WorldPvpCoinRedPointShowKey",
    "refreshShopEffect",
    "getRedPointShow",
    "pvpCoin",
    "pvpCoinRedPointShowInOneDay",
    "setRedPointShowTime",
    "chunks:///_virtual/EndlessWorldShopMgr.ts",
    "./PVPShopBuyRequestData.ts",
    "./PVPShopShowRequestData.ts",
    "./EndlessWorldShopData.ts",
    "PVPShopBuyRequestData",
    "PVPShopShowRequestData",
    "001100paspPLK9cgH5Vc4Qe",
    "shopEffectPosition",
    "shopEffectIndex",
    "weekRefresh",
    "sendPVPShopBuyRequest",
    "weekRefreshPvpShopShow",
    "treasureList",
    "RefreshPvpShopShow",
    "chunks:///_virtual/EnemyAttackPointData.ts",
    "315c1UaE6VGFpofN24xXbqi",
    "chunks:///_virtual/EnemyAttackPointDelegate.ts",
    "81d70xMSMhNAZSu9jt0XglP",
    "EnemyAttackPointDelegate",
    "chunks:///_virtual/EnemyBullet.ts",
    "dc890y+3qdCLpwesWuBtK/t",
    "bulletNode",
    "moveTime",
    "accelerateTime",
    "bCloseToPlane",
    "bLaser",
    "animationIDs",
    "animationTimes",
    "laserAnimationIndex",
    "animationTime",
    "laserAnimationTotalTime",
    "dirHoldTime",
    "curDirDegrees",
    "bSetDirHold",
    "inviewCount",
    "bFollowInit",
    "curFollowPosX",
    "curFollowPosY",
    "bulletAE",
    "EnemyBullet#",
    "showBulletAE",
    "setDirHold",
    "cycleDirHold",
    "cycleFollow",
    "isInView",
    "isRectIntersected",
    "MOVE_RANGE_X",
    "MOVE_RANGE_Y",
    "getOwnerType",
    "setRotate",
    "isHitBlast",
    "getHitBlastType",
    "getEnemyID",
    "isLaser",
    "isCloseToPlane",
    "setCloseToPlane",
    "isBlastDestory",
    "isFollow",
    "setFollowPos",
    "closeToPlaneRange",
    "chunks:///_virtual/EnemyBulletMgr.ts",
    "dc3fbXnl7pNmZorpqA1q1c/",
    "cycleEnemyBulletSet",
    "recycleEnemyBullet",
    "isHurtShiled",
    "clearEnemyBullet",
    "isHurtWingman",
    "isAlpha",
    "getRectIntersected",
    "getLineLong",
    "getRectIntersectedWithEntity",
    "getCurHurt",
    "chunks:///_virtual/EnemyGroupLoot.ts",
    "8a1c6rfaqBKRZLDFPRP1jcP",
    "EnemyGroupLoot",
    "bReward",
    "eGroupID",
    "enemyCount",
    "bEnemyRan",
    "addEnemyCount",
    "isReward",
    "getLootType",
    "setPosX",
    "setPosY",
    "getEnemyGroupID",
    "setEnemyRan",
    "isEnemyRan",
    "addLootType",
    "chunks:///_virtual/EnemyLaser.ts",
    "Mask",
    "Intersection2D",
    "27257HXi9dHRoM6QfBxdIWa",
    "laserMask",
    "laserAE",
    "fatherBaseAE",
    "fatherPlane",
    "motherBaseAE",
    "motherPlane",
    "attackRectPoints",
    "planeCenter",
    "graphics",
    "cachedRect",
    "mask",
    "GizmosLabel",
    "horizontalAlign",
    "HorizontalAlign",
    "LEFT",
    "CYAN",
    "MAGENTA",
    "outOffScreenTop",
    "outOffScreenBottom",
    "cachedPos",
    "rotate",
    "pointInPolygon",
    "getDistance",
    "recycleView",
    "laser-pair",
    "farOutOffScreenBottom",
    "chunks:///_virtual/EnemyMgr.ts",
    "./RedLine.ts",
    "RedLine",
    "51cf6zpE05OMrpdVVkQFuAO",
    "graphic",
    "touchRect",
    "isEnemyPauseShoot",
    "entityParent",
    "isRectIntersectedWithPos",
    "cycleEnemyPlane",
    "cycleRedLine",
    "cycleEnemyLaser",
    "canBeRemove",
    "isSpecialType",
    "getSpecialType",
    "enemyLaserSet",
    "laserMothers",
    "isEnemyGroupLoot",
    "enemyGroupLootSet",
    "isHurtToDie",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "recycleEnemy",
    "isAdjustPosX",
    "setPlaneX",
    "isAdjustPosY",
    "setPlaneY",
    "isTrackOver",
    "isCollideDead",
    "isBlast",
    "setBlastTime",
    "bPauseEnemyCreate",
    "isEnemyWaveNor",
    "allLasersCreated",
    "linkedLaserEntities",
    "isLasersCreated",
    "MAX_CREATE_LASER_COUNT_PER_FRAME",
    "laserIndex",
    "SPECIAL_ROCKET",
    "isRedLine",
    "setRedLine",
    "TYPE_RED_LINE",
    "getRedLineDegree",
    "setEnemy",
    "addRedLine",
    "SPECIAL_BLAST_ROCKET",
    "isTimeBlast",
    "setTimeBLast",
    "getBlastPosX",
    "getBlastPosY",
    "TYPE_TIME_BLAST",
    "redLineSet",
    "recycleRedLine",
    "isHurtFir",
    "setHurtFir",
    "recycleEffect",
    "isBlastAttack",
    "getBlastAttack",
    "isBlastAttackPlane",
    "getBlastAttackPlane",
    "generateEnemyLootWithEnemyPlane",
    "SPECIAL_SHIELD",
    "getLiveTime",
    "SPECIAL_TRANSPORT",
    "isStandBy",
    "getEnemy",
    "chunks:///_virtual/EnemyPlane.ts",
    "./BattleUtils.ts",
    "703d596FGpCVaAKs0Ac4pF8",
    "EnemyPlane",
    "MoveDown",
    "ScaleStraightDownTrackY",
    "ScaleAllTrackY",
    "enemyAE",
    "trackGroupIndex",
    "trackLoop",
    "tracks",
    "trackIndex",
    "trackOffX",
    "trackOffY",
    "trackStayTime",
    "bTrackOver",
    "bTrackOverDie",
    "prePosX",
    "prePosY",
    "enemyType",
    "stoneType",
    "rocketType",
    "enemyNode",
    "shieldAE",
    "hpNode",
    "enemyHpOpacity",
    "hpDark",
    "hpRed",
    "hpSprite",
    "trackAdaptType",
    "trackInitPos",
    "bRemovable",
    "removeCount",
    "removeTime",
    "bShooting",
    "shootTime",
    "shootCount",
    "bHurtToDie",
    "shieldBodyRect",
    "lAttackRect",
    "liveTime",
    "bEnemyLoot",
    "lootArray",
    "bEnemyWaveNor",
    "curFormIndex",
    "bForm",
    "bShowSoundPlay",
    "bRedLine",
    "redLineDegree",
    "bHpShow",
    "extraSpeedCount",
    "bHurtFir",
    "bRocket",
    "adjustPosXCount",
    "planeX",
    "adjustSpeedX",
    "adjustPosYCount",
    "planeY",
    "adjustSpeedY",
    "blastAttackPlane",
    "blastTime",
    "blastPosX",
    "blastPosY",
    "bTimeBlast",
    "EnemyNode",
    "EnemyPlane_",
    "HpDark",
    "enemy/enemyhpdark2",
    "HpRed",
    "enemy/enemyhp2",
    "TYPE_ROCKET_NULL",
    "TYPE_ROCKET_BLUE",
    "TYPE_ROCKET_RED",
    "TYPE_ROCKET_PURPLE",
    "trackColor",
    "getBezier",
    "TRACK_LOOP_FOREVER",
    "showSoundPlay",
    "ACTION_TRACK",
    "cycleNextShoot",
    "ACTION_TRANSFORM",
    "ACTION_SHOOT",
    "cycleShoot",
    "BombHurtEnemyRate",
    "refreshTrackData",
    "isCurFormHpShow",
    "bHpShows",
    "initTrack",
    "FORM_NUM",
    "isBodyRectFarOutOfView",
    "trackOver",
    "gotoNextTrack",
    "setStandByTime",
    "getEnemyLootType",
    "addEnemyLoot",
    "setEnemyGroupID",
    "getShieldBodyRect",
    "setEnemyWaveNor",
    "setExtraSpeedY",
    "isRocket",
    "isShootLoop",
    "getShootLoop",
    "chunks:///_virtual/EnemyType.ts",
    "07139pKjhBLybQGQMb/I/aF",
    "SPECIAL_SELF_EXPL",
    "chunks:///_virtual/EnergyMessageData.ts",
    "./MessageData.ts",
    "MessageData",
    "7a023BP5K9I8KeSlLQKZ91e",
    "EnergyMessageData",
    "chunks:///_virtual/EnergyRequestData.ts",
    "c26b5R1iG5Ncbsy1Ass+g3Y",
    "UpCmdEnergy",
    "chunks:///_virtual/EnergySwitchRequestData.ts",
    "0e709ZFMBNKpbR1QFHyS+pk",
    "EnergySwitchRequestData",
    "energySwitch",
    "UpCmdEnergySwitch",
    "chunks:///_virtual/EngineSkinData.ts",
    "./Equip.ts",
    "./NWareEngineData.ts",
    "EquipSkinState",
    "NWareEngineData",
    "f6006ISA39FVa6bhy3C/Opg",
    "s_pSkinDatas",
    "wearSkinData",
    "getSkinNum",
    "skinItems",
    "isDefaultSkin",
    "Locked",
    "setEngineSkinData",
    "getEngineSkinDataBySkin",
    "Wear",
    "skinChange",
    "equipSkinActivate",
    "equipSkinChange",
    "getEngineSkinDataById",
    "皮肤已更换为：",
    "updateUserCloudStorage",
    "getEngineSkinDataByEngine",
    "isEngineEqual",
    "getWearSkinData",
    "chunks:///_virtual/EngineSkinMgr.ts",
    "./EquipSkinActivateRequestData.ts",
    "./EquipSkinChangeRequestData.ts",
    "EquipSkinActivateRequestData",
    "EquipSkinChangeRequestData",
    "4343bi7eiJPKJTgNvq2Ul4I",
    "EngineSkinMgr",
    "sendEquipSkinActivateRequestData",
    "equipSkinActivateResponse",
    "equipSkin",
    "RefreshEquipSkin",
    "sendEquipSkinChangeRequestData",
    "equipSkinChangeResponse",
    "DownCmdEquipSkinChange",
    "chunks:///_virtual/EnterPVPAreaRequestData.ts",
    "3918av8M/pCP4Rp/B2DZmMH",
    "EnterPVPAreaRequestData",
    "UpCmdEnterPVPArea",
    "chunks:///_virtual/Entity.ts",
    "7ae19iIHKFJ5YB4BGotA1BE",
    "CachedViews",
    "viewStyleId",
    "cachedViews",
    "Method not implemented: isDead",
    "gizmosDrawRect",
    "gizmosDrawRectByValues",
    "ROOT_NODE",
    "rootNode",
    "chunks:///_virtual/EntityMgr.ts",
    "./XShake.ts",
    "XShake",
    "1d577H1D+BIbrDgh2oE1kgy",
    "bossBullets",
    "effectSet",
    "lootItemSet",
    "planeSet",
    "weaponBulletSet",
    "bgParent",
    "entityParentTrans",
    "entityParentPos",
    "layers",
    "lootLayer",
    "lootSubLayers",
    "cachedViewsByType",
    "toReleaseCachedViews",
    "getCachedViewsArray",
    "recycleViewsToCache",
    "releaseViewsCache",
    "EntityParent",
    "canvasTransform",
    "BgParent",
    "zOrder_count",
    "Layer_",
    "Layer_Loot",
    "zOrder_loot",
    "addEnemy",
    "zOrder_enemy_rocket",
    "zOrder_enemy",
    "ClearEnemyPlane",
    "clearEnemyPlaneSet",
    "zOrder_boss",
    "zOrder_blast",
    "clearBlastSet",
    "addLootItem",
    "getZOrder",
    "insertChild",
    "recycleLootItem",
    "clearLootItem",
    "addPlane",
    "zOrder_plane",
    "recyclePlane",
    "addWeaponBullet",
    "zOrder_bullet_plane",
    "recycleWeaponBullet",
    "zOrder_bullet_enemy",
    "zOrder_effect",
    "zOrder_enemyLaser",
    "zOrder_bomb",
    "zOrder_trans",
    "zOrder_effect_plane",
    "chunks:///_virtual/Equip.ts",
    "2fbfdElL3lGm5ANpy8klMV3",
    "EquipState",
    "UnEquipped",
    "Equipped",
    "Unlocked",
    "UIWareSkinResTag",
    "chunks:///_virtual/EquipChooseBag.ts",
    "./PopupBase.ts",
    "./EquipChooseBagItem.ts",
    "./GuideEnums.ts",
    "PopupBase",
    "BagTabLabels",
    "EquipChooseBagItem",
    "GuideAction",
    "a6054fH58tD9I52+gCgW/Px",
    "viewOpacity",
    "advanceTips",
    "toggleLabel",
    "toggleCheckLabel",
    "materialsNode",
    "materilasLabelNode",
    "costMoneyLabel",
    "totalExpLabel",
    "titleLabel",
    "toggleNode",
    "tabs",
    "IsInCheckedBagItems",
    "checkedBagItem",
    "chooseFull",
    "Consume",
    "背 包",
    "材 料",
    "checkCanAdvanceTips",
    "checkItems",
    "checkIsChooseFull",
    "refreshExpAndMoney",
    "refreshList",
    "onPostShow",
    "delayRecoverUIEvent",
    "isTween",
    "getItemsSortId",
    "setChecked",
    "itemLists",
    "setCheckable",
    "getPerConsumeCostMoney",
    "onConfirmClick",
    "onBtnCloseClick",
    "sortByWorthExp",
    "wearEquipPinned",
    "scrollTo",
    "isUpgradableByLevel",
    "isCanGuide",
    "getGuideHighLightNode",
    "GUIDE_ACT_EQUIP_CHOOSE_UPGRADE",
    "checkNodeToggle",
    "chunks:///_virtual/EquipChooseBagItem.ts",
    "./ListItem.ts",
    "./KUpgradeListItemState.ts",
    "ListItem",
    "KUpgradeListItemState",
    "20625yTGBpAlr4I37cAsql2",
    "星级列表",
    "装备名称",
    "攻击描述",
    "动态Label",
    "未激活提示",
    "选择节点",
    "经验节点",
    "装备显示节点",
    "itemIcon",
    "equipNameText",
    "equipLevelLabel",
    "attackLabel",
    "valueLabs",
    "stuntLabel",
    "unactivatedLabel",
    "expNode",
    "expLabel",
    "equipNode",
    "setType",
    "getSkillName",
    "未激活",
    "DisableCheck",
    "isLockEquip",
    "CanCheckAndProtect",
    "setState",
    "DisableMarsUnactivate",
    "DisableUpgradeFullLevel",
    "AvailableUpgrade",
    "DisableMarsCanNotBeConsume",
    "DisableMarsPartCanNotBeConsume",
    "DisableConsumeEquiped",
    "AvailableConsume",
    "DisableAdvanceFullQuality",
    "AvailableAdvance",
    "DisableAdvanceNotEnoughMaterial",
    "DisableAdvanceNotEnoughLevel",
    "DisableMixEquiped",
    "DisableMarsCanNotBeMix",
    "DisableMarsPartCanNotBeMix",
    "AvailableMix",
    "DisableSplitEquiped",
    "DisableMarsPartCanNotBeSplit",
    "AvailableSplit",
    "111",
    "等级已满",
    "品质已满",
    "等级不足",
    "材料不足",
    "战神不可用于合成",
    "可进阶",
    "已保护",
    "onBtnDetailsClick",
    "chunks:///_virtual/EquipRequestData.ts",
    "55fd3KQB8tJjK3i8rtcr6Uz",
    "EquipRequestData",
    "UpCmdEquip",
    "chunks:///_virtual/EquipSkinActivateRequestData.ts",
    "e4286m/x5dOvJwSCY3GDEUN",
    "UpCmdEquipSkinActivate",
    "chunks:///_virtual/EquipSkinChangeRequestData.ts",
    "7f8e0EafjdC+qjqXJZfbWjP",
    "UpCmdEquipSkinChange",
    "chunks:///_virtual/EventMgr.ts",
    "9f91frIUIhH9IgUzmyYVc2Q",
    "listeners",
    "hasListener",
    "listener",
    "chunks:///_virtual/EventType.ts",
    "0feeeI9ihlGL4YhOXgFtUi9",
    "EventItemRefresh",
    "EquipSell",
    "EquipWear",
    "EquipUpgrade",
    "EquipAdvance",
    "EquipMix",
    "EquipSplit",
    "BuyModule",
    "RefreshSweep",
    "RefreshStageLimit",
    "RefreshKey",
    "StageUnlock",
    "SwitchScene",
    "RefreshDailyTask",
    "RefreshStore",
    "RefreshReward",
    "RefreshMessageList",
    "RefreshZone",
    "RefreshVip",
    "RefreshVipFirstGift",
    "WheelInfoShow",
    "WheelRefreshTime",
    "WheelLotteryBuy",
    "RefreshIdleBonusTime",
    "RefreshIdleBonus",
    "RefreshQuickIdleBonus",
    "WheelDownError",
    "BuyTreasureHunt",
    "RefreshStoreFirst",
    "RefreshBuyEnergy",
    "StartBattleLoading",
    "AudioInterruptionBegin",
    "AudioInterruptionEnd",
    "VIPLevelUp",
    "GetKeyTreasureHunt",
    "UIHide",
    "SevenSignRefresh",
    "ContinueSignRefresh",
    "ResetZone",
    "RefreshDecadeUniteInfo",
    "SevenSignDayRefresh",
    "ContinueSignDayRefresh",
    "RefreshIndexDataFinish",
    "RefreshSevenDayMeunIcon",
    "RefreshPeriodicGiftInfo",
    "RefreshPeriodicGift",
    "RefreshPeriodicGiftReward",
    "CostEnergy",
    "StopScroll",
    "CostPvpCoin",
    "MoonSignRefresh",
    "MoonSignGainRefresh",
    "RefreshMoonSignMeunIcon",
    "RefreshMoonGiftInfo",
    "chunks:///_virtual/ExtButton.ts",
    "da9d85jIE1BXp1MQBf/0/Eh",
    "ExtButton",
    "labels",
    "pressedLabelColor",
    "skewY",
    "lastSprite",
    "originalColors",
    "_updateSpriteTransition",
    "moveElement",
    "pressed",
    "chunks:///_virtual/ExtToggle.ts",
    "./ExtToggleContainer.ts",
    "EventHandler",
    "NodeEventType",
    "ExtToggleContainer",
    "746ccvPZNNPdJUDhzyB1w4a",
    "requireComponent",
    "executionOrder",
    "isCheck",
    "defaultMark",
    "checkMark",
    "toggleEvent",
    "toggleContainer",
    "isNode",
    "TOUCH_START",
    "onTouchBegan",
    "notifyToggleCheck",
    "emitEvents",
    "playEffect",
    "setIsClickAndEffect",
    "chunks:///_virtual/ExtToggleContainer.ts",
    "babbfkJ87hD6ZgjYkQ/c+mj",
    "toggleItems",
    "chunks:///_virtual/FadeOutTips.ts",
    "./UIBase.ts",
    "UIBase",
    "e4b66YBuy9JEIS5KlglFVWJ",
    "FadeOutTips",
    "adaptUI",
    "showTips",
    "showTopUI",
    "chunks:///_virtual/FeedbackRequestData.ts",
    "655feYf/blCJJzNhQZHIlCv",
    "FeedbackRequestData",
    "UpCmdFeedback",
    "chunks:///_virtual/FrameData.ts",
    "9621c31lnRNB6it3URwK0DU",
    "FrameData",
    "chunks:///_virtual/FrameRect.ts",
    "baf35nazn9GI5nhBBUNhtQt",
    "FrameRect",
    "chunks:///_virtual/FriendData.ts",
    "78f600qvdhLloCeaBN5v1Ul",
    "endlessAidArray",
    "friendArray",
    "getFriendByID",
    "UID",
    "新增好友：",
    "loadBaseData",
    "defaultName",
    "endlessRankingHighest",
    "endlessValueHighest",
    "endlessRanking",
    "endlessWeekHighScore",
    "getNextByEndlessIndex",
    "endlessRankIndex",
    "sortByEndlessRank",
    "sortByGuildLvAndPowerRank",
    "guild",
    "sortByLastWeekEndlessRank",
    "endlessRankingLastWeek",
    "sortByPowerAndEndlessRank",
    "sortByPowerRank",
    "玩家：",
    "，排名：",
    "sortByPowerAndLastWeekEndlessRank",
    "endlessRankIndexLastWeek",
    "powerRankIndex",
    "，战力排名：",
    "chunks:///_virtual/FriendDataRequestData.ts",
    "974141DcS5DZ4QmPZIyzJtT",
    "FriendDataRequestData",
    "fuid",
    "UpCmdFriendData",
    "chunks:///_virtual/FriendHeadIcon.ts",
    "./UpCmdFriendData.ts",
    "dd938c7n19OGYBBrnISiabI",
    "FriendHeadIcon",
    "头像框",
    "VIP",
    "是否能点击",
    "frameSprite",
    "headSprite",
    "vipSprite",
    "headIconBtn",
    "canClick",
    "clickCallback",
    "loadedHeadUrl",
    "friendData",
    "setColor",
    "loadHeadIcon",
    "vipLv",
    "loadVipIcon",
    "getMinVipLevel",
    "getVipDataByLevel",
    "gameUI/vipUI/",
    "box.png",
    "loadSystemHeadIcon",
    "gameUI/item/128x128-head0",
    "loadDetail",
    "PopupFriendDetailInfo",
    "loadHeadIconWithUrl",
    "loadDefaultHeadIcon",
    "loadRemoteImageAsset",
    "createWithImage",
    "gameUI/item/128x128-head1",
    "chunks:///_virtual/FriendListRequestData.ts",
    "cc431GFu+NGnIqar593lPxz",
    "FriendListRequestData",
    "UpCmdFriendList",
    "chunks:///_virtual/FriendMgr.ts",
    "./PlaneData.ts",
    "./FriendHeadIcon.ts",
    "PlaneData",
    "7cf69rj4eNI/Zt+nn+ZaGqB",
    "bShowEndlessFriend",
    "_friendPlaneTimer",
    "efOnCount",
    "friendBgAE",
    "lastPlaneY",
    "friendIconSp",
    "timerLabel",
    "processMask",
    "friendPlaneTimer",
    "friendNode",
    "friendHeadIcon",
    "friendBtn",
    "showFriendPlane",
    "friendTime",
    "friendMask",
    "updateFriendTimer",
    "leaveFriendPlane",
    "updateSelfFunc",
    "createStars",
    "FriendHelp",
    "delayCallByFrameTime",
    "step1",
    "unUpdateSelfFunc",
    "step4",
    "FriendLeave",
    "ANIM_FRIEND_CLOSE",
    "step3",
    "showPlaneSprintAE",
    "step2",
    "ANIM_FRIEND_LIGHT",
    "ANIM_FRIEND_BG",
    "friendOff",
    "planeUpgradeWeapon",
    "friendLeave",
    "step5",
    "PL_FRIEND",
    "schedule",
    "isShowFriendPlane",
    "createWithCurEquips",
    "engineSkinData",
    "chunks:///_virtual/FullScreenBg.ts",
    "e6995thTNxB361ikZERXAE8",
    "FullScreenBg",
    "widget",
    "transform",
    "doAdapt",
    "left",
    "right",
    "top",
    "chunks:///_virtual/GainActionAwardRequestData.ts",
    "475acOlwGJOMYExRAyCAhkk",
    "UpCmdGainActionAward",
    "chunks:///_virtual/GainAidRewardRequestData.ts",
    "34357fHMGJIWZ/xW6oyS6+c",
    "GainAidRewardRequestData",
    "UpCmdGainAidReward",
    "chunks:///_virtual/GainDailyBonusRequsetData.ts",
    "54969amr/NGG7zAP6UVTF4a",
    "GainDailyBonusRequsetData",
    "days",
    "UpCmdGainDailyBonus",
    "chunks:///_virtual/GainDailyTaskRewardRequestData.ts",
    "811ebGJZXtFLK+4sAJHNp3c",
    "UpCmdGainDailyTaskReward",
    "chunks:///_virtual/GainDecadeUniteDailyTasksRewardRequestData.ts",
    "9dea3PacW5CC5WGq0biiS8K",
    "UpCmdGainDecadeUniteDailyTasksReward",
    "chunks:///_virtual/GainDecadeUniteDailyTasksTotalRewardRequestData.ts",
    "b76f9qPkupHNaUwFaiGeWod",
    "UpCmdGainDecadeUniteDailyTasksTotalReward",
    "chunks:///_virtual/GainDecadeUniteInviteReward.ts",
    "d0c1fJq4fFKQ58qiY4QkHao",
    "GainDecadeUniteInviteReward",
    "UpCmdGainDecadeUniteInviteReward",
    "chunks:///_virtual/GainDecadeUniteMilestoneRewardRequestData.ts",
    "0cdbacRggVKNLw+z4JLipYO",
    "UpCmdGainDecadeUniteMilestoneReward",
    "chunks:///_virtual/GainFundRequestData.ts",
    "a978b2Zl+xMcYVoxptYDbCA",
    "GainFundRequestData",
    "UpCmdGainFund",
    "chunks:///_virtual/GainIdleBonusRequestData.ts",
    "e410fRzawlMBqEYT8QiR4bU",
    "GainIdleBonusRequestData",
    "UpCmdGainIdleBonus",
    "chunks:///_virtual/GainLoginRewardRequestData.ts",
    "722c54jmnVLv514yyRYVXI7",
    "GainLoginRewardRequestData",
    "UpCmdGainLoginReward",
    "chunks:///_virtual/GainMoonBonusRequsetData.ts",
    "b881a+s0PZMd4x6PFTNzwNS",
    "GainMoonBonusRequsetData",
    "UpCmdGainMoonBonus",
    "chunks:///_virtual/GainPrivilegeCardRequestData.ts",
    "92f40BjmZNEeoU8qdzPMGMc",
    "GainPrivilegeCardRequestData",
    "dailyCnt",
    "UpCmdGainPrivilegeCard",
    "chunks:///_virtual/GainQuickIdleBonusRequestData.ts",
    "17445Ykxi9PJaR7wEfII28+",
    "GainQuickIdleBonusRequestData",
    "UpCmdGainQuickIdleBonus",
    "chunks:///_virtual/GainRewardRequestData.ts",
    "f1ee7s35kpOU6IrFDC4W+ga",
    "GainRewardRequestData",
    "rewardIndex",
    "UpCmdGainReward",
    "chunks:///_virtual/GainStoreFirstRequestData.ts",
    "39d8ahoSuBHn6JmRNXCsTrO",
    "GainStoreFirstRequestData",
    "UpCmdGainStoreFirst",
    "chunks:///_virtual/GainStoreStageRequestData.ts",
    "419b8Jld25Fn5mCnlmtAE6P",
    "GainStoreStageRequestData",
    "UpCmdGainStoreStage",
    "chunks:///_virtual/GainTotalDailyBonusRequsetData.ts",
    "d6c18WW5ZVNx55RewhWYqUs",
    "GainTotalDailyBonusRequsetData",
    "day",
    "UpCmdGainTotalDailyBonus",
    "chunks:///_virtual/GainVIPFirstPrizeRequestData.ts",
    "4e50ddmfndAg4FPp+Jj4HGq",
    "GainVIPFirstPrizeRequestData",
    "UpCmdGainVIPFirstPrize",
    "chunks:///_virtual/GameClubButton.ts",
    "./MiniGameBtn.ts",
    "MiniGameBtn",
    "1125f+H2PhBqLOR72uWWGFN",
    "GameClubButton",
    "iconName",
    "createMiniGameBtn",
    "miniGameBtn",
    "miniGameBtnVisible",
    "checkMiniGameBtnVisible",
    "icon-gameclub.png",
    "chunks:///_virtual/GetClientDataRequestData.ts",
    "c094c+HrcVGqrnCj2EndVjc",
    "chunks:///_virtual/GetClientVarsRequestData.ts",
    "adeddJKJh5IRI57esTHTUu3",
    "UpCmdGetClientVars",
    "chunks:///_virtual/GetFailedOrdersRequestData.ts",
    "9bdea0LG8pLNZR1PkJHNzRS",
    "GetFailedOrdersRequestData",
    "UpCmdGetFailedOrders",
    "chunks:///_virtual/GetIosPreviewRequestData.ts",
    "a8b3eprZOVHbZoPiok9ux1G",
    "GetIosPreviewRequestData",
    "UpCmdGetIosPreview",
    "chunks:///_virtual/GetNoticeRequestData.ts",
    "ede38VS9rBBc6SvqtF/HHdN",
    "GetNoticeRequestData",
    "UpCmdGetNotice",
    "chunks:///_virtual/GiftEnergyRequestData.ts",
    "341856JqZhP2LMcUqzBs26C",
    "GiftEnergyRequestData",
    "UpCmdGiftEnergy",
    "chunks:///_virtual/Global.ts",
    "8ae5bwf2KJB5pvw9ZFVpOEh",
    "bullet/",
    "PATH_CONFIG",
    "cfg/",
    "effect/",
    "enemy/",
    "item/",
    "map/",
    "PATH_MEDIA",
    "media/",
    "plane/",
    "SEX_FEMAIL",
    "SEX_MAIL",
    "SEX_UNKNOW",
    "chunks:///_virtual/Gravity.ts",
    "8656cH9QoBILqvzcr6z/dne",
    "Gravity",
    "lmeBaVyphzUnkbsvD5YQ87G1WbZytozh",
    "m_GravityAPI",
    "setupAndStart",
    "initialize",
    "registerEvent",
    "loginEvent",
    "getDistinctId",
    "bindTAThirdPlatform",
    "payEvent",
    "CNY",
    "wChat",
    "adShowEvent",
    "chunks:///_virtual/gravityengine.mg.cocoscreator.min.js",
    "getOwnPropertySymbols",
    "getOwnPropertyDescriptors",
    "defineProperties",
    "Cannot call a class as a function",
    "writable",
    "toPrimitive",
    "@@toPrimitive must return a primitive value.",
    "4.8.10",
    "https://backend.gravity-engine.com/event_center/api/v1",
    "GravityEngine",
    "GravityEngine_mg",
    "getConfig",
    "getStorage",
    "isJSONString",
    "setStorage",
    "_setSystemProxy",
    "_sysCallback",
    "getSystemInfo",
    "web",
    "_getOs",
    "screen",
    "language",
    "extend",
    "userAgent",
    "Windows Phone",
    "Windows",
    "iOS",
    "BlackBerry",
    "MacOS",
    "Linux",
    "ChromeOS",
    "getNetworkType",
    "onNetworkStatusChange",
    "header",
    "setRequestHeader",
    "onreadystatechange",
    "readyState",
    "statusCode",
    "responseText",
    "errMsg",
    "network error",
    "fail",
    "ontimeout",
    "timeout",
    "send",
    "initAutoTrackInstance",
    "autoTrack",
    "onpagehide",
    "onPageHide",
    "onbeforeunload",
    "onPageShow",
    "appHide",
    "timeEvent",
    "ta_page_hide",
    "onvisibilitychange",
    "hidden",
    "setGlobal",
    "getAppOptions",
    "showToast",
    "appShow",
    "properties",
    "isFunction",
    "_internalTrack",
    "$WebPageView",
    "$WebPageHide",
    "taInstance",
    "referrer",
    "Directly open",
    "isPlugin",
    "App",
    "Page",
    "_initAppExtention",
    "_initPageExtension",
    "onShareAppMessage",
    "onPageShare",
    "onLaunch",
    "onHide",
    "onAppLaunch",
    "onAppShow",
    "onAppHide",
    "_setAutoTrackProperties",
    "isUndefined",
    "appLaunch",
    "$url_query",
    "setQuery",
    "$scene",
    "$MPLaunch",
    "$MPHide",
    "$url_path",
    "_getPath",
    "$MPShow",
    "_getCurrentPath",
    "Not to get",
    "route",
    "Abnormal values",
    "pageShare",
    "$MPShare",
    "转发消息卡片",
    "isObject",
    "pageShow",
    "getLaunchOptionsSync",
    "Ge error:AutoTrackBridge getLaunchOptionsSync error:",
    "_onShow",
    "startTracked",
    "api",
    "_config",
    "dd_mp",
    "getStorageSync",
    "getStorage faild",
    "_getPlatform",
    "mpPlatform",
    "mp_platform",
    "wechat",
    "ali_mp",
    "headers",
    "errorMessage",
    "httpRequest",
    "is_plugin",
    "GravityAnalytics: we do not set global name for GE instance when you do not enable auto track.",
    "ali_mg",
    "Ge error: Cannot get launch options.",
    "Cannot register onShow callback.",
    "_createInstance",
    "R_CURRENT_PLATFORM",
    "wechat_mp",
    "GravityEngine_wechat",
    "wechat_mg",
    "GravityEngine_wechat_game",
    "qq_mp",
    "GravityEngine_qq",
    "qq_mg",
    "GravityEngine_qq_game",
    "baidu_mp",
    "GravityEngine_swan",
    "host",
    "baidu_mg",
    "GravityEngine_swan_game",
    "tt_mg",
    "GravityEngine_tt_game",
    "appName",
    "tt_mp",
    "GravityEngine_tt",
    "GravityEngine_ali",
    "app",
    "GravityEngine_ali_game",
    "GravityEngine_dd",
    "dingding",
    "bl_mg",
    "bilibili",
    "kuaishou_mp",
    "GravityEngine_kuaishou_program",
    "kuaishou",
    "kuaishou_mg",
    "GravityEngine_kuaishou_game",
    "kuaishou_game",
    "qh360_mg",
    "GravityEngine_qh360",
    "qh360",
    "tb_mp",
    "GravityEngine_tb",
    "jd_mp",
    "GravityEngine_jd",
    "qh360_mp",
    "WEB",
    "gravityengine",
    "gravityengine_qg_vivo_game",
    "osType",
    "osVersionName",
    "brand",
    "manufacturer",
    "system",
    "vivo_qg",
    "getQuickDevice",
    "EMUI",
    "MIUI",
    "ColorOS",
    "FuntouchOS",
    "Flyme",
    "android_version",
    "api_version",
    "platformVersionCode",
    "rom_version",
    "COREVersion",
    "phone_brand",
    "phone_model",
    "model",
    "getOAID",
    "oaid",
    "android_id",
    "imei",
    "networkType",
    "subscribeNetworkStatus",
    "getDeviceId",
    "deviceId",
    "oppo",
    "gravityengine_qg_oppo_game",
    "oppo_qg",
    "huawei",
    "gravityengine_qg_huawei_game",
    "huawei_qg",
    "gravityengine_qg_mz_game",
    "xiaomi",
    "gravityengine_qg",
    "freeze",
    "BAIDU_MINI_GAME",
    "XIAOMI_QUICK_GAME",
    "OPPO_MINI_GAME",
    "VIVO_MINI_GAME",
    "HUAWEI_QUICK_GAME",
    "BYTEDANCE_MINI_GAME",
    "QTT_MINI_GAME",
    "LINKSURE_MINI_GAME",
    "ALIPAY_MINI_GAME",
    "WECHAT_MINI_GAME",
    "BAIDU_GAME",
    "BAIDU_MIN_GAME",
    "VIVO_GAME",
    "QQ_PLAY",
    "OPPO_GAME",
    "HUAWEI_GAME",
    "XIAOMI_GAME",
    "ALIPAY_GAME",
    "BYTEDANCE_GAME",
    "osVersion",
    "NetworkType",
    "LAN",
    "WIFI",
    "WWAN",
    "NONE",
    "_getCurrentPlatform",
    "currentPlatform",
    "showDebugToast",
    "decodeURIComponent",
    "isFinite",
    "each",
    "sleep",
    "extend2Layers",
    "[object Array]",
    "isPromise",
    "[object Promise]",
    "[object Object]",
    "isEmptyObject",
    "isString",
    "[object String]",
    "isDate",
    "[object Date]",
    "isBoolean",
    "[object Boolean]",
    "[object Number]",
    "encodeURIComponent",
    "utf8Encode",
    "charCodeAt",
    "base64Encode",
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
    "encodeDates",
    "formatDate",
    "getFullYear",
    "getMonth",
    "getHours",
    "getMinutes",
    "getSeconds",
    "getMilliseconds",
    "searchObjDate",
    "UUID",
    "getTime",
    "UUIDv4",
    "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx",
    "setMpPlatform",
    "getMpPlatform",
    "createExtraHeaders",
    "checkAppId",
    "checkUrl",
    "basic",
    "tld?",
    "location",
    "protocol",
    "mailto",
    "email",
    "hash",
    "/$1",
    "/-1",
    "file",
    "filename",
    "fileext",
    "port",
    "auth",
    "user",
    "hostname",
    "tld",
    "domain",
    "sub",
    "https",
    "443",
    "http",
    "://",
    "createString",
    "createAesKey",
    "persistenceNameOld",
    "includes",
    "generateEncryptyData",
    "publicKey",
    "undefined",
    "enc",
    "Utf8",
    "pad",
    "Pkcs7",
    "PKCS7",
    "AES",
    "encrypt",
    "mode",
    "ECB",
    "setPublicKey",
    "私钥加密失败，返回原数据",
    "数据加密失败，返回原数据: ",
    "stripProperties",
    "Your data -",
    "- format does not meet requirements and may not be stored correctly. Attribute values only support String, Number, Date, Boolean, Array, Object",
    "_checkPropertiesKey",
    "Invalid KEY: ",
    "event",
    "Check the parameter format. The eventName must start with an English letter and contain no more than 50 characters including letters, digits, and underscores: ",
    "propertyName",
    "Check the parameter format. PropertyName must start with a letter and contain letters, digits, and underscores (_). The value is a string of no more than 50 characters: ",
    "Check the parameter format. The properties key must start with a letter, contain digits, letters, and underscores (_), and contain a maximum of 50 characters",
    "properties can be none, but it must be an object",
    "propertiesMust",
    "properties must be an object with a value",
    "userId",
    "The user ID must be a string of less than 64 characters and cannot be null",
    "userAddProperties",
    "The attributes of userAdd need to be Number",
    "userAppendProperties",
    "The attribute of userAppend must be Array",
    "serverUrl",
    "debugMode",
    "tryCount",
    "permissionTryCount",
    "taClassName",
    "HttpTask",
    "run",
    "content-type",
    "application/json",
    "Turbo-Debug-Mode",
    "POST",
    "onSuccess",
    "onFailed",
    "abort",
    "Data Verified",
    "errors",
    "isRunning",
    "showDebug",
    "enqueue",
    "maxRetries",
    "sendTimeout",
    "_runNext",
    "code ",
    " and msg is ",
    "_dequeue",
    "event_list",
    "$flush_time",
    "cocoscreator",
    "$network_type",
    "screenWidth",
    "screenHeight",
    "enablePersistence",
    "isChildInstance",
    "persistenceName",
    "nameOld",
    "asyncPersistence",
    "_state",
    "_init",
    "_save",
    "setDistinctId",
    "_setDeviceId",
    "initComplete",
    "current_first_scene_date",
    "current_first_scene",
    "toLocaleDateString",
    "$today_first_scene",
    "_set",
    "_get",
    "setEventTimer",
    "event_timers",
    "removeEventTimer",
    "device_id",
    "cannot modify the device id.",
    "distinct_id",
    "getAccountId",
    "account_id",
    "setAccountId",
    "getSuperProperties",
    "props",
    "setSuperProperties",
    "appId",
    "clientId",
    "accessToken",
    "GravityAnalytics: accessToken must be required",
    "/event/collect/?access_token=",
    "server_url",
    "serverDebugUrl",
    "configUrl",
    "/config",
    "autoTrackProperties",
    "_queue",
    "syncBatchSize",
    "syncInterval",
    "instances",
    "_updateState",
    "store",
    "persistenceComplete",
    "ge_enabled",
    "isOptOut",
    "ge_isOptOut",
    "getQuery",
    "updateConfig",
    "initInstance",
    "initInstance() failed due to the name is invalid: ",
    "initInstance() cannot be called on child instance",
    "lightInstance",
    "_isReady",
    "_onStateChange",
    "_hasDisabled",
    "GravityEngine is Pause or Stop!",
    "_sendRequest",
    "disableEventList",
    "eventName",
    "disabled Event : ",
    "getSendProperties",
    "$event_duration",
    "client_id",
    "enableEncrypt",
    "append",
    "client",
    "appid",
    "sendBeacon",
    "onComplete",
    "_isObjectParams",
    "strict",
    "invalid parameters",
    "userSet",
    "profile",
    "profile_set",
    "calling userSet failed due to invalid arguments",
    "userSetOnce",
    "profile_set_once",
    "calling userSetOnce failed due to invalid arguments",
    "userAdd",
    "profile_increment",
    "calling userAdd failed due to invalid arguments",
    "userNumberMax",
    "The key ",
    " must be type of number",
    "profile_number_max",
    "calling userNumberMax failed due to invalid arguments",
    "userNumberMin",
    "profile_number_min",
    "calling userNumberMin failed due to invalid arguments",
    "userDel",
    "profile_delete",
    "calling userDel failed due to invalid arguments",
    "userAppend",
    "profile_append",
    "calling userAppend failed due to invalid arguments",
    "userUniqAppend",
    "profile_uniq_append",
    "userUnset",
    "profile_unset",
    "calling userUnset failed due to invalid arguments",
    "uploadQuickAppDeviceInfo",
    "mac",
    "osVersionCode",
    "vendorOsName",
    "vendorOsVersion",
    "/user/device_info/?access_token=",
    "&client_id=",
    "sendNetWork",
    "uploadQuickGameDeviceInfo",
    "logoutEvent",
    "$MPLogout",
    "$MPLogin",
    "GravityEngine_quick_mp",
    "$AppRegister",
    "$MPRegister",
    "pay_amount must be a number",
    "pay_type must be a string",
    "order_id must be a string",
    "pay_reason must be a string",
    "pay_method must be a string",
    "$PayEvent",
    "taAccountId or taDistinctId must be required",
    "taAccountId must be a string",
    "taDistinctId must be a string",
    "$BindThirdPlatform",
    "alipay",
    "ad_type must be a string",
    "ad_unit_id must be a string",
    "assign",
    "$AdShow",
    "_errorPromise",
    "reject",
    "initializeWithHistoryUserInfo",
    "is_ge_registered",
    "history_info must be type: Object",
    "company",
    "history_info.company must be type: String",
    "create_time",
    "history_info.create_time must be type: Number",
    "history_info.create_time must be required",
    "history_info.company must be required",
    "version must be type: Number",
    "version must be required",
    "name must be required",
    "initialize must be called after setupAndStart",
    "base_channel",
    "openid",
    "wx_openid",
    "wx_unionid",
    "promoted_object_id",
    "enable_sync_attribution",
    "history_info",
    "/user/initialize/?access_token=",
    "$manufacturer",
    "$model",
    "$brand",
    "$os",
    "gravity_referee_openid",
    "queryUserInfo",
    "queryUserInfo must be called after setupAndStart",
    "/user/get/?access_token=",
    "GET",
    "authorizeOpenID",
    "identify",
    "logout",
    "setSuperProperties parameter must be a valid property value",
    "registerApp",
    "clearSuperProperties",
    "unsetSuperProperty",
    "dynamicProperties",
    "getPresetProperties",
    "$system_language",
    "system_language",
    "$screen_width",
    "$screen_height",
    "deviceModel",
    "$os_version",
    "getTimezoneOffset",
    "zoneOffset",
    "toEventPresetProperties",
    "setDynamicSuperProperties",
    "A dynamic public property must return a valid property value",
    "setDynamicSuperProperties parameter must be a function type",
    "calling timeEvent failed due to invalid eventName: ",
    "$device_id",
    "enableTracking",
    "ta_enabled",
    "optOutTracking",
    "optOutTrackingAndDeleteUser",
    "user_del",
    "optInTracking",
    "setTrackStatus",
    "PAUSE",
    "eventSaveOnly",
    "STOP",
    "GravityAnalytics: clientId must be required",
    "_isNativePlatform",
    "_isIOS",
    "_isAndroid",
    "enableNative",
    "isNative",
    "/data_debug",
    "initInstanceForNative",
    "_readStorage",
    "geJs",
    "identifyForNative",
    "loginForNative",
    "__autoTrackCallback",
    "startGravityAnalyticsForNative",
    "trackForNative",
    "userSetForNative",
    "userSetOnceForNative",
    "userUnsetForNative",
    "userDelForNative",
    "userAddForNative",
    "userAppendForNative",
    "userUniqAppendForNative",
    "getDistinctIdForNative",
    "getAccountIdForNative",
    "logoutForNative",
    "setSuperPropertiesForNative",
    "clearSuperPropertiesForNative",
    "unsetSuperPropertyForNative",
    "getSuperPropertiesForNative",
    "getPresetPropertiesForNative",
    "$device_model",
    "__dynamicPropertiesForNative",
    "__dynamicPropertiesForNative: native msg: ",
    "setDynamicSuperPropertiesForNative",
    "timeEventForNative",
    "getDeviceIdForNative",
    "enableTrackingForNative",
    "optOutTrackingForNative",
    "optOutTrackingAndDeleteUserForNative",
    "optInTrackingForNative",
    "setTrackStatusForNative",
    "reflection",
    "callStaticMethod",
    "com/cocos/game/CocosCreatorProxyApi",
    "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
    "CocosCreatorProxyApi",
    "track:properties:time:appId:",
    "(Ljava/lang/String;Ljava/lang/String;)V",
    "timeEvent:appId:",
    "login:appId:",
    "(Ljava/lang/String;)V",
    "logout:",
    "setSuperProperties:appId:",
    "getSuperProperties:",
    "unsetSuperProperty:appId:",
    "clearSuperProperties:",
    "userSet:appId:",
    "userSetOnce:appId:",
    "userAppend:appId:",
    "userUniqAppend:appId:",
    "userAdd:appId:",
    "userUnset:appId:",
    "userDel:",
    "authorizeOpenIDForNative",
    "authorizeOpenID:appId:",
    "identify:appId:",
    "setCustomerLibInfo",
    "initInstanceAppId",
    "initInstanceConfig",
    "setCustomerLibInfoWithLibName:libVersion:",
    "initInstance:appId:",
    "initInstance:config:",
    "lightInstanceForNative",
    "lightInstance:appId:",
    "startGravityAnalytics",
    "startGravityAnalytics:",
    "setDynamicSuperProperties:appId:",
    "(Ljava/lang/String;)Ljava/lang/String;",
    "getDeviceId:",
    "getDistinctId:",
    "getAccountId:",
    "getPresetProperties:",
    "enableTracking:appId:",
    "optOutTracking:",
    "optOutTrackingAndDeleteUser:",
    "optInTracking:",
    "setTrackStatus:appId:",
    "GravityAnalyticsAPI",
    "GravityAnalyticsAPIForJS",
    "chunks:///_virtual/gravityengine.mg.cocoscreator.min.mjs_cjs=&original=.js",
    "./gravityengine.mg.cocoscreator.min.js",
    "chunks:///_virtual/GuideArrow.ts",
    "./GuideComponentBase.ts",
    "GuideComponentBase",
    "40c02gyXYZMAqtXLJ0s6D0i",
    "GuideArrow",
    "arrowPos",
    "setTarget",
    "getNodeWorldTransformInfos",
    "center",
    "setWorldPosition",
    "chunks:///_virtual/GuideComponentBase.ts",
    "6c33eaxvNhJLL6CRmc/otIM",
    "refreshCallback",
    "eventOnTarget",
    "lastWorldPosition",
    "lastWorldScale",
    "TRANSFORM_CHANGED",
    "getWorldScale",
    "runOpenAnim",
    "makeNodeMatchTargetPosAndSize",
    "anchorX",
    "chunks:///_virtual/GuideData.ts",
    "1b4c7vT7PBEl59OIYGYRi7G",
    "GuideData",
    "guideStepDict",
    "triggerGuideDic",
    "triggerGuideID",
    "triggerFinishIndex",
    "curGuideData",
    "isTrigger",
    "localGuideID",
    "serviceGuideID",
    "loadLocalGuideData",
    "printGuideData",
    "_guide",
    "saveLocalGuideData",
    "checkGuideID",
    "getGuideStep",
    "getGuideTrigger",
    "isGuideDataTrigger",
    "引导ID：",
    "，下一个引导ID：",
    "，步骤ID：",
    "，关卡区间：",
    "，文本高度：",
    "，文本内容：",
    "，是否完成：",
    "，显示Size：",
    "，触摸Size：",
    "触发引导ID：",
    "，触发式引导触发界面index：",
    "，当前版本是否触发：",
    "，触发的引导序列：",
    "chunks:///_virtual/GuideDialogue.ts",
    "4b23baLcOpNq7RhSW7h6GpU",
    "GuideDialogue",
    "01-begin",
    "03-begin",
    "dialogBg",
    "dialogLab",
    "guideLisaAnim",
    "lastGuideData",
    "01-keep",
    "03-keep",
    "getGuideAnimTargetPos",
    "openGuideMan",
    "guideAnimOpenFinish",
    "updateAnimation",
    "paused",
    "closeGuideMan",
    "guideAnimCloseFinish",
    "chunks:///_virtual/GuideEnums.ts",
    "f635dy3TMFHr67ZI1OXafLX",
    "GuideEnums",
    "GuideTriggerState",
    "NotTriggered",
    "GuideSkipType",
    "OverMaxStage",
    "NoUpgradeMaterial",
    "NoExtraWingman",
    "PilotAlreadyUnlocked",
    "GUIDE_ACT_INIT",
    "GUIDE_ACT_NONE",
    "GUIDE_ACT_NEXT",
    "GUIDE_ACT_ENDLESS_MODE",
    "GUIDE_ACT_PLAY_ENDLESS",
    "GUIDE_ACT_STORY_MODE",
    "GUIDE_ACT_TOP_STAGE",
    "GUIDE_ACT_TOP_SUB_STAGE",
    "GUIDE_ACT_PLAY_STORY",
    "GUIDE_ACT_HOME",
    "GUIDE_ACT_ENDLESS_RANK",
    "GUIDE_ACT_ENDLESS_FRIEND",
    "GUIDE_ACT_INVITE_FRIEND",
    "GUIDE_ACT_UPGRADE",
    "GUIDE_ACT_CHOOSE_UPGRADE",
    "GUIDE_ACT_CHOOSE_CONSUME",
    "GUIDE_ACT_EQUIP_CHOOSE_CONSUME",
    "GUIDE_ACT_CONSUME_CONFIRM",
    "GUIDE_ACT_AUTO_SELECT_UPGRADE_MATERIAL",
    "GUIDE_ACT_PLAY_UPGRADE",
    "GUIDE_ACT_BAG",
    "GUIDE_ACT_CHOOSE_ENGINE",
    "GUIDE_ACT_CHOOSE_ARMOR",
    "GUIDE_ACT_CHOOSE_WEAPON",
    "GUIDE_ACT_CHOOSE_WINGMAN",
    "GUIDE_ACT_REPLACE_WINGMAN",
    "GUIDE_ACT_SKIN",
    "GUIDE_ACT_CHOOSE_SKIN",
    "GUIDE_ACT_WARE_WEAPON",
    "GUIDE_ACT_WARE_WINGMAN",
    "GUIDE_ACT_ADVANCE_IN_UPGRADE",
    "GUIDE_ACT_CHOOSE_ADVANCE",
    "GUIDE_ACT_EQUIP_CHOOSE_ADVANCE",
    "GUIDE_ACT_PLAY_ADVANCE",
    "GUIDE_ACT_REWARD",
    "GUIDE_ACT_GAIN_TOP_REWARD",
    "GUIDE_ACT_TASK_REWARD",
    "GUIDE_ACT_GAIN_MARS_REWARD",
    "GUIDE_ACT_TAB_ACHIEVEMENT",
    "GUIDE_ACT_TAB_ACTIVITY",
    "GUIDE_ACT_TAB_TASK",
    "GUIDE_ACT_TAB_DAILY",
    "GUIDE_ACT_SHOP",
    "GUIDE_ACT_FRIEND_TREASURE_ONCE",
    "GUIDE_ACT_RMB_TREASURE_ONCE",
    "GUIDE_ACT_TAB_SHOP",
    "GUIDE_ACT_TAB_RECHARGE",
    "GUIDE_ACT_TAB_TREASURE",
    "GUIDE_ACT_OPEN_ENERGY_MED",
    "GUIDE_ACT_BUY_ENERGY",
    "GUIDE_ACT_LOGIN_REWARD",
    "GUIDE_ACT_STORY_RESULT_GOON",
    "GUIDE_ACT_REFORM",
    "GUIDE_ACT_REFORM_SHOW_MIX_CHOOSE",
    "GUIDE_ACT_REFORM_SHOW_MIX_BTN",
    "GUIDE_ACT_REFORM_SPLIT",
    "GUIDE_ACT_REFORM_SHOW_SPLIT_CHOOSE",
    "GUIDE_ACT_REFORM_SHOW_SPLIT_BTN",
    "GUIDE_ACT_PILOT",
    "GUIDE_ACT_UNLOCK_PILOT",
    "GUIDE_ACT_MAIN_PILOT_LIST",
    "GUIDE_ACT_UP_PILOT",
    "GUIDE_ACT_SHOW_TRAIN",
    "GUIDE_ACT_SHOW_DEPUTY_SEAT",
    "GUIDE_ACT_PERIOD",
    "GUIDE_ACT_SHOW_PERIOD1",
    "GUIDE_ACT_SHOW_PERIOD2",
    "GUIDE_ACT_SHOW_PERIOD3",
    "GUIDE_ACT_SHOW_STAGE_PERIOD1",
    "GUIDE_ACT_MARS",
    "GUIDE_ACT_CLOSE_REWARD_JUMP_TO_MARS",
    "GUIDE_ACT_MARS_ACTIVATE",
    "GUIDE_ACT_HERO_MODE",
    "GUIDE_ACT_SHOW_MARS",
    "GUIDE_ACT_PVP",
    "GUIDE_ACT_PVP_BATTLE_FIELD",
    "GUIDE_ACT_PVP_BATTLE_INFO",
    "GUIDE_ACT_PVP_SHOP",
    "GUIDE_ACT_BOSS_MODE",
    "GuideStep",
    "chunks:///_virtual/GuideHighLightArea.ts",
    "052b52DalRBI6IaoszPkJmV",
    "GuideHighLightArea",
    "expand",
    "frameWidget",
    "frame",
    "btnClickCallback",
    "widgets",
    "chunks:///_virtual/GuideHighLightParams.ts",
    "ef8e9I7hm9EcqwWHhUzjm/l",
    "GuideHighLightParams",
    "chunks:///_virtual/GuideMgr.ts",
    "./GuideData.ts",
    "./GuideRequestData.ts",
    "input",
    "KeyCode",
    "GuideRequestData",
    "b66f7MeXqtByLVwQ7yYY9SL",
    "registerBefore10050",
    "_isCanGuide",
    "_isGuiding",
    "popupGuide",
    "KEY_UP",
    "keyCode",
    "KEY_G",
    "新手引导已关闭",
    "新手引导已开启",
    "setGuideID",
    "[GuideMgr] 服务端引导ID：",
    "shouldSkipGuide",
    "[GuideMgr] 客户端引导ID：",
    "[GuideMgr] 跳过引导：",
    " (跳过类型：",
    ")，下一个引导：",
    "addNextGuideRequest",
    "getSubStageNum",
    "[GuideMgr] 因超过最大关卡数量而跳过引导：",
    " 关卡：",
    "[GuideMgr] 因没有强化材料而跳过引导：",
    "getWingmanSet",
    "[GuideMgr] 因没有额外僚机而跳过引导：",
    "[GuideMgr] 因已经解锁驾驶员而跳过引导：",
    "setGuideTrigger",
    "[GuideMgr] 服务端触发式引导ID：",
    "，状态：",
    "setGuideTriggerByClientData",
    "[GuideMgr] 触发式引导Index：",
    " 已完成",
    "[GuideMgr] 跳过触发式引导：",
    "isGuiding",
    "[GuideMgr] 通知服务器已经完成了顺序引导【ID：",
    "】，下一个引导是：【",
    "step",
    "guide",
    "addFinishTriggerGuideRequest",
    "[GuideMgr] 通知服务器已经完成了触发式引导【ID：",
    "】 index:",
    "checkAndShowNewGuide",
    "canTriggerNewGuide",
    "isCurrentGuideMeetRequirement",
    "showPopupGuide",
    "isCurrentTriggerGuideMeetRequirement",
    "PopupGuide",
    "getNext",
    "引导：",
    " (是否是触发式引导：",
    ") 尝试获取下一步引导数据",
    " 的第 ",
    " 步引导数据获取成功",
    " 的所有步骤完成",
    "checkTriggerGuideIdByGameStateIndex",
    "checkTriggerGuideByCurrentUI",
    "isGuideStepMeetRequirement",
    "[GuideMgr] 找到合适的触发式引导ID：",
    "[GuideMgr] guideStep meet requirement!",
    "closeGuide",
    "chunks:///_virtual/GuideRequestData.ts",
    "6710cdrDGZDOL/5pVzU2wYC",
    "UpCmdGuide",
    "chunks:///_virtual/HeadDataBase.ts",
    "4fb0a8X6ENPIqqR6iSXf8o1",
    "HeadDataBase",
    "HeadData",
    "cmdDataSplitLength",
    "cmdLength",
    "cmdSequence",
    "cmdVersion",
    "headVersion",
    "crcVerify",
    "reconnect",
    "sid",
    "chunks:///_virtual/HeartbeatRequestData.ts",
    "db6b47+ny1GYKHGjANgmmKe",
    "HeartbeatRequestData",
    "maxSysNoticeId",
    "maxGiftMsgId",
    "maxSysMsgId",
    "lastBulletinId",
    "UpCmdHeartbeat",
    "chunks:///_virtual/HelpMessageData.ts",
    "c258bJGekNDco6lHIcnESCI",
    "HelpMessageData",
    "helpCoin",
    "checkData",
    "chunks:///_virtual/HeroPkDataRequestData.ts",
    "48a84MaU6FCSpkuaOT68WVe",
    "HeroPkDataRequestData",
    "UpCmdHeroPkData",
    "chunks:///_virtual/IconAD.ts",
    "1911fSRV6FIZ4TjHl7LOQ3f",
    "IconAD",
    "adSprite",
    "normalSpFr",
    "privilegeSpFr",
    "chunks:///_virtual/IdleBonus.ts",
    "44f0c/ex41CjJNUGXkFWLZF",
    "IdleBonusType",
    "Quick",
    "IdleBonusValueType",
    "FirstBonus",
    "CoolDownTime",
    "AdCount",
    "QuickBonusTime",
    "RefreshNormalBonusTime",
    "FreeCount",
    "IdleBonusState",
    "Full",
    "GainIdleBonusType",
    "Free",
    "chunks:///_virtual/IdleBonusInfoRequestData.ts",
    "a18d1zpGnxP2p/0XS7VPZ90",
    "IdleBonusInfoRequestData",
    "UpCmdIdleBonusInfo",
    "chunks:///_virtual/IdleBonusMgr.ts",
    "./IdleBonus.ts",
    "./GainIdleBonusRequestData.ts",
    "./GainQuickIdleBonusRequestData.ts",
    "802d2wsfj1FIqvCDarxYXTJ",
    "IdleBonusMgr",
    "_idleBonusValuesMap",
    "_idleBonusDataMap",
    "_lastGainTime",
    "_totalQuickCount",
    "_freeCount",
    "_adCount",
    "_refreshTime",
    "_expireTimes",
    "_systemUnlock",
    "_curGainQuickType",
    "loadIdleBonusValue",
    "getIdleBonusValue",
    "setServerIdleBonusData",
    "refreshSystemUnlock",
    "refreshNormalBonusHeart",
    "inCoolDown",
    "lastGainTime",
    "sendIdleBonusInfoRequest",
    "refreshIdleBonusRedDot",
    "getIdleBonusData",
    "freeCount",
    "freeTimes",
    "adCount",
    "adTimes",
    "sendGainIdleBonusRequestData",
    "sendGainQuickIdleBonusRequestData",
    "getShowIdleBonusUnlock",
    "idleBonusUnlock",
    "totalQuickCount",
    "quickBonus",
    "idleBonusFreeTimesAddNum",
    "idleBonusCoinNumPerHour",
    "idleBonusCoinAddNumPerHour",
    "idleBonusCoinAdd",
    "totalIdleBonusSeconds",
    "idleBonusFull",
    "chunks:///_virtual/ImageRect.ts",
    "b7a71VGSatJpITGiUkIt+mg",
    "ImageRect",
    "chunks:///_virtual/ImageRectFile.ts",
    "c26adyE3sNJjZdCmEewFipr",
    "ImageRectFile",
    "chunks:///_virtual/IndexRequestData.ts",
    "48dadCnjA5Ca6mGEuekLna5",
    "IndexRequestData",
    "UpCmdIndex",
    "chunks:///_virtual/InputMgr.ts",
    "EventTarget",
    "a0957tkEbtKDZkhn8ez/Oxz",
    "_touchWorldVec3",
    "_touchWorldVec2",
    "_touchBattleVec3",
    "_touchBattleVec2",
    "_keyCode",
    "eventTarget",
    "firstTouchId",
    "validTouches",
    "screenHeightWidthRatio",
    "touchScale",
    "touchReceiver",
    "onTouchStart",
    "onTouchMove",
    "TOUCH_END",
    "onTouchEnd",
    "TOUCH_CANCEL",
    "onTouchCancel",
    "KEY_DOWN",
    "onKeyDown",
    "onKeyUp",
    "[InputMgr] init, visibleSize: ",
    ", ratio:",
    ", touchScale:",
    "[InputMgr] onKeyDown:",
    "emit",
    "keydown",
    "[InputMgr] onKeyUp:",
    "keyup",
    "preventSwallow",
    "getValidTouches",
    "getID",
    "handleTouch",
    "[InputMgr] onTouchStart, worldPos: ",
    ", battlePos: ",
    "touchstart",
    "[InputMgr] onTouchStart, skip because touch is not the first one, valid touch count: ",
    " !== ",
    "[InputMgr] onTouchStart, touch[",
    "]: ",
    ", touch:",
    "[InputMgr] onTouchMove, worldPos: ",
    "touchmove",
    "[InputMgr] onTouchMove, skip because touch is not the first one, ",
    "[InputMgr] onTouchEnd, worldPos: ",
    "touchend",
    "[InputMgr] onTouchEnd, skip because touch is not the first one, ",
    "[InputMgr] onTouchCancel, worldPos: ",
    "[InputMgr] onTouchCancel, skip because touch is not the first one, ",
    "getUILocation",
    "[InputMgr] handleTouch, worldPos: ",
    " | battlePos: ",
    "[InputMgr] handleTouch failed, entityParentTrans is null.",
    "addTouchMoveListener",
    "addTouchEndListener",
    "addKeyUpListener",
    "addKeyDownListener",
    "dispatchKeyDown",
    "touchWorldVec3",
    "touchWorldVec2",
    "touchBattleVec3",
    "chunks:///_virtual/InviteRequestData.ts",
    "8ae36u/GhJNuoKFHfeIynzP",
    "InviteRequestData",
    "snsType",
    "UpCmdInvite",
    "chunks:///_virtual/IPlatform.ts",
    "6b1e29OdbFHsJ01EbG+0H+h",
    "IPlatform",
    "chunks:///_virtual/IRedDotMonitor.ts",
    "9d55flWC3NA4J0ffRAGWx+x",
    "IRedDotMonitor",
    "chunks:///_virtual/ItemBossStage.ts",
    "./Stage.ts",
    "StageBossBGAE",
    "1a599HBVU1CEYgW9hl4oRM7",
    "ItemBossStage",
    "BossStageIdleAnim",
    "byPosition",
    "aeParent",
    "btnAEParent",
    "bgAEAnimName",
    "bgAEImageName",
    "stageBgDelayTime",
    "bgStartPositionX",
    "bgBasePositionX",
    "btnStartPositionY",
    "btnBasePositionY",
    "stageIdleAnim",
    "_stageBgAE",
    "_stageNormalAE",
    "_stageNormalBlendAE",
    "_stageIdleAE",
    "_stageIdleBlendAE",
    "_stageBtnAE",
    "_btnTimeMin",
    "_btnTimeMax",
    "_btnTime",
    "initStageBgAE",
    "initStageBtnAE",
    "initBtnTime",
    "createStageAEAndPlayAnimation",
    "NormalBlend",
    "IdleBlend",
    "quadIn",
    "stageBgAction",
    "gameUI/bossUI/button-base-effect",
    "playStageBtnAction",
    "getStageAE",
    "stageBtnAction",
    "onBtnBossStageDetailClick",
    "runCloseAction",
    "showDetail",
    "curBossStageId",
    "UIStageBossDetail",
    "chunks:///_virtual/ItemContinueSignMenuBtn.ts",
    "./ItemMenuBtn.ts",
    "./SignData.ts",
    "ItemMenuBtn",
    "SignData",
    "33e5e9pvWhAF4yBfbvST5M8",
    "ItemContinueSignMenuBtn",
    "refreshActive",
    "continueCurrentSignDay",
    "onMenuBtnClick",
    "PopupContinueSign",
    "chunks:///_virtual/ItemDailyBonusMenuBtn.ts",
    "1ff14N5vaJCn6kwYxM6pzf0",
    "ItemDailyBonusMenuBtn",
    "getMenuIconDisplay",
    "PopupSevenSign",
    "chunks:///_virtual/ItemDailyTask.ts",
    "e7723vtgz9IP5AzSdnZ4Yu1",
    "ItemDailyTask",
    "goBtn",
    "progressNumLabel",
    "barSp",
    "barSpFrNormal",
    "barSpFrFinish",
    "valueLabel",
    "goNode",
    "completeNode",
    "whiteColor",
    "yellowColor",
    "blueColor",
    "_value",
    "_progress",
    "refreshProgress",
    "refreshName",
    "refreshValue",
    "refreshBtn",
    "onBtnGoClick",
    "chunks:///_virtual/ItemDailyTaskStage.ts",
    "078dfAkQKZE/LcTrMdSLq0l",
    "stageSelectLightNode",
    "stageUnFinishNode",
    "stageFinishedNode",
    "_stage",
    "onBtnStageClick",
    "chunks:///_virtual/ItemDecadeUniteInvite.ts",
    "86553UfaoxO2bGPanTVzuUE",
    "ItemDecadeUniteInvite",
    "numLabel",
    "numLabelNormalColor",
    "numLabelSelectColor",
    "selectNode",
    "levelSprite",
    "_normalBoxSpFr",
    "_selectBoxSpFr",
    "_normalLevelSpFr",
    "_selectLevelSpFr",
    "gameUI/TenYears/Retrieve-Box-",
    "-default",
    "-Select",
    "gameUI/TenYears/Retrieve-SmallBox-grade-a",
    "gameUI/TenYears/Retrieve-SmallBox-grade-b",
    "onBtnBoxClick",
    "showBoxReward",
    "chunks:///_virtual/ItemDecadeUniteInviteEmptyProgress.ts",
    "bc188wfQWFH1JcY3S607WjG",
    "ItemDecadeUniteInviteEmptyProgress",
    "headFrame",
    "repeatFrame",
    "setEnd",
    "chunks:///_virtual/ItemDecadeUniteInviteProgress.ts",
    "86cafwaYj9MbrrAlv39FaWo",
    "ItemDecadeUniteInviteProgress",
    "chunks:///_virtual/ItemDecadeUniteMenuBtn.ts",
    "d7d2brMGUxC4Y61NC3NMvA+",
    "ItemDecadeUniteMenuBtn",
    "isSystemShow",
    "chunks:///_virtual/ItemDecadeUniteSendDanmaku.ts",
    "ddb0063mmFMiK9Xv8jahb68",
    "ItemDecadeUniteSendDanmaku",
    "sendLabel",
    "sendButton",
    "countDownLabel",
    "mgr",
    "isCountDown",
    "countDownLeftTime",
    "checkCountDown",
    "onBtnSendClick",
    "chunks:///_virtual/ItemDialogue.ts",
    "caa0a64sDFBUL/eVQab4o2n",
    "ItemDialogue",
    "nextContentLabel",
    "bgAE",
    "headAE",
    "arrowNode",
    "playingLabel",
    "displayLength",
    "getHeadStr",
    "gameUI/effect/head-01",
    "gameUI/effect/head-02",
    "gameUI/effect/head-03",
    "gameUI/effect/head-04",
    "gameUI/effect/head-05",
    "gameUI/effect/head-",
    "DIALOGUE_OPEN",
    "DIALOGUE_HEAD_SHOW",
    "typeWritingDialog",
    "refreshDialogueContent",
    "runCloseAnim",
    "switchContent",
    "gameUI/effect/story-chart",
    "DIALOGUE_SHOW",
    "getAppearPosX",
    "getStayPosX",
    "runTypeWritingTween",
    "onTypeWritingFinish",
    "parseRichText",
    "getCharCount",
    "buildRichText",
    "replaceRichTextMarks",
    "chunks:///_virtual/ItemEndlessAid.ts",
    "./ItemFriendBase.ts",
    "Font",
    "ItemFriendBase",
    "fb02098zNND4Les7cHPlLy1",
    "ItemEndlessAid",
    "未选中时的背景",
    "选中时的背景",
    "选中时的边框",
    "消耗布局",
    "消耗货币",
    "消耗货币值",
    "加分布局",
    "加分标题",
    "加分基础值",
    "加分百分号",
    "加分加号",
    "加分加值",
    "unCheckBg",
    "checkBg",
    "checkFrame",
    "costLayout",
    "currencySprite",
    "costValueLabel",
    "coinSpriteFrame",
    "diamondSpriteFrame",
    "addScoreLayout",
    "addScoreTitle",
    "addScoreBaseValue",
    "addScoreBasePercent",
    "addScorePlus",
    "addScoreValue",
    "addScorePercent",
    "greenFont",
    "yellowFont",
    "greenPlus",
    "greenPercent",
    "yellowPlus",
    "yellowPercent",
    "costCoin",
    "costDiamond",
    "font",
    "ANIM_CLOSE",
    "ANIM_SHOW",
    "PR_NONE",
    "PR_MONEY",
    "PR_RMB",
    "VL_NONE",
    "VL_FX",
    "VL_VALUE",
    "chunks:///_virtual/ItemEndlessBase.ts",
    "PrizeType",
    "59c8d3vgHVN5qdB7oXHsPCE",
    "ItemEndlessBase",
    "ItemWithPrize",
    "checkPrize",
    "reduceCoin",
    "reduceDiamond",
    "isEnough",
    "chunks:///_virtual/ItemEndlessBuyReady.ts",
    "./ReadyRandomRequestData.ts",
    "./ItemEndlessBase.ts",
    "ReadyRandomRequestData",
    "ShopIndexType",
    "6eac03QiPJPY7xGlsZSYTlK",
    "ItemEndlessBuyReady",
    "物品图标",
    "物品数量背景",
    "物品数量",
    "物品描述",
    "货币布局",
    "货币图标",
    "货币图标列表",
    "货币数量",
    "itemCountBg",
    "itemCountLabel",
    "itemNameLabel",
    "itemDescLabel",
    "currencyLayout",
    "currencyIconSprite",
    "currencyIconSpriteFrames",
    "currencyCountLabel",
    "randomEffectBtnAnim",
    "readyData",
    "propData",
    "isRandom",
    "kItemSortReady",
    "kItemSortProp",
    "updateLayout",
    "refreshItemCountLabel",
    "effect/suijidaojugoumai",
    "randomSupply",
    "playRandomEffectAnim",
    "BuySupply",
    "chunks:///_virtual/ItemEndlessCupInfo.ts",
    "c7c46oqpwpPFrgaXGhNy4K4",
    "ItemEndlessCupInfo",
    "treasureIcon",
    "rankBg",
    "glow",
    "rankNum",
    "playerName",
    "playerScore",
    "headIcon",
    "boxAni",
    "bgSpriteFrame",
    "selfBgSpriteFrame",
    "bagItems",
    "isSelf",
    "LoadImg",
    "gameUI/homeUI/",
    "setHead",
    "fff600",
    "...",
    "onBtnRewardInfoClick",
    "chunks:///_virtual/ItemEndlessCupMenuBtn.ts",
    "./EndlessCupMgr.ts",
    "b9e82PTvdhBA51h4egmNX2u",
    "ItemEndlessCupMenuBtn",
    "leftTime",
    "rankNode",
    "nameNode",
    "leftSecond",
    "timer",
    "setRefreshTime",
    "EndlessCupJoinPage",
    "EndlessCupRankPage",
    "chunks:///_virtual/ItemEndlessWorldBattleResult.ts",
    "8b9edX1IaNL252gQm/MevgZ",
    "ItemEndlessWorldBattleResult",
    "myHeadIcon",
    "myNameLabel",
    "myScoreLabel",
    "rivalHeadIcon",
    "rivalNameLabel",
    "rivalScoreLabel",
    "chunks:///_virtual/ItemEndlessWorldPvp.ts",
    "7672cM/ViFM3691LXWlvq8E",
    "ItemEndlessWorldPvp",
    "挑战币图标",
    "胜利奖励货币图标",
    "入场花费货币布局",
    "入场花费货币图标",
    "入场花费货币图标列表",
    "入场花费货币数量",
    "今日剩余次数",
    "pvpTokenBagItemIcon",
    "winRewardBagItemIcon",
    "todayLeftCountLabel",
    "battleFieldData",
    "costBagItem",
    "todayLeftCount",
    "Invalid currency type: ",
    "今日剩余次数：",
    "#BD9BDD",
    "#fc535e",
    "chunks:///_virtual/ItemEndlessWorldPvpBattleInfo.ts",
    "a7266WVzyVH0asd+YWo2XWH",
    "ItemEndlessWorldPvpBattleInfo",
    "未读标记",
    "对手信息",
    "对手名字",
    "对手分数",
    "对手分数节点",
    "对手未完成节点",
    "我方分数",
    "奖励未完成节点",
    "奖励节点",
    "金币图标",
    "钻石图标",
    "获得货币数量",
    "挑战币数量",
    "对局时间",
    "unreadNode",
    "rivalFriendHeadIcon",
    "rivalScoreNode",
    "rivalUnfinishedNode",
    "rewardUnfinishedNode",
    "rewardFinishedNode",
    "goldIcon",
    "diamondIcon",
    "pvpTokenCountLabel",
    "resultSprites",
    "timeLabel",
    "battleInfoData",
    "个人得分  <size=22><color=#ffffff>",
    "</color></size>",
    "对局时间 ",
    "formatTimestampToYYYYMMDDHHMM",
    "对方得分  <size=22><color=#ffffff>",
    "chunks:///_virtual/ItemEndlessWorldShop.ts",
    "ParticleSystem2D",
    "920aad1w0ZB3qbll/O2Qpuf",
    "ItemEndlessWorldShop",
    "itemOpacity",
    "btnBuySpr",
    "btnBuyOpacity",
    "priceLayout",
    "pvpCoinNode",
    "soldOutNode",
    "baseAEs",
    "particles",
    "baseAE",
    "particle",
    "isClick",
    "isSoldOut",
    "setData",
    "initEffects",
    "refreshBagItem",
    "refreshBtnBuy",
    "refreshPrice",
    "playOpenAni",
    "refreshData",
    "ITEM_ANI_SHOW",
    "treasureGoods",
    "123C81",
    "5C370C",
    "grayscale",
    "moneyValue",
    "ITEM_ANI_START",
    "refreshBaseAE",
    "onBuySuccess",
    "onBtnExchangeClick",
    "是否花费<color=FFCD0B>",
    "</color>挑战币购买<color=",
    "</colot>？ ",
    "removePvpCoinMethods",
    "ITEM_ANI_LOOP",
    "chunks:///_virtual/ItemEnum.ts",
    "047a5ajoedANL5GUXLUXLeu",
    "ItemEnum",
    "PVPCoin",
    "Prop",
    "Gift",
    "Extra",
    "Drug",
    "Box",
    "Key",
    "STAR_GRAY",
    "STAR_WHITE",
    "STAR_GREEN",
    "STAR_BLUE",
    "STAR_ORANGE",
    "STAR_YELLOW",
    "kCurrencyUnknown",
    "chunks:///_virtual/ItemFirstRechargeMenuBtn.ts",
    "./StoresData.ts",
    "StoresData",
    "5acfaJZt5NChpxke5vuz+qU",
    "ItemFirstRechargeMenuBtn",
    "getStoreFirstStatus",
    "PopupFirstRecharge",
    "chunks:///_virtual/ItemFriendBase.ts",
    "1c6aeI/K+hCaae2EveV+0P2",
    "玩家名称",
    "无尽分数",
    "战斗力",
    "驾驶员",
    "endlessScoreLabel",
    "powerLabel",
    "pilotSprite",
    "planeSprite",
    "pilotId",
    "getPilotListImagePath",
    "planeStyle",
    "onBtnBgClick",
    "chunks:///_virtual/ItemFundMenuBtn.ts",
    "e9af1Gk5uJGPbgX2QpHbjgn",
    "ItemFundMenuBtn",
    "chunks:///_virtual/ItemGameClubMenuBtn.ts",
    "./GameClubButton.ts",
    "9e03dY9tu9MNIsla3Bn5h1l",
    "ItemGameClubMenuBtn",
    "gameClubButton",
    "chunks:///_virtual/ItemGameGroupMenuItem.ts",
    "bfcc43ybZJF27p2y7R5+30J",
    "ItemGameGroupMenuItem",
    "PopupActionAward",
    "chunks:///_virtual/ItemHandbook.ts",
    "2224dUZCahCLbdmzE0it8zV",
    "ItemHandbook",
    "stars",
    "isBtn",
    "PopupHandbookInfo",
    "chunks:///_virtual/ItemHelp.ts",
    "afce0jM1LlFF660CA/B1vvd",
    "ItemHelp",
    "textLabel",
    "chunks:///_virtual/ItemIdleBonusMenuBtn.ts",
    "./IdleBonusMgr.ts",
    "9cc01n84OtJOKQFnOCplP5l",
    "ItemIdleBonusMenuBtn",
    "btnUnlockAnim",
    "btnAnim",
    "_expireTime",
    "_btnIdleUnlockAnim",
    "AM-Btn-IdleBonus-Appear",
    "_btnIdleAnim",
    "AM-Btn-IdleBonus-Explore",
    "_btnFullAnim",
    "AM-Btn-IdleBonus-Full",
    "onUnlockAnimFinish",
    "refreshState",
    "PopupIdleBonus",
    "chunks:///_virtual/ItemMenuBtn.ts",
    "d4215JxMNJADq4amOfIVKUw",
    "chunks:///_virtual/ItemMessage.ts",
    "./SystemMessageData.ts",
    "./Message.ts",
    "./EnergyMessageData.ts",
    "./HelpMessageData.ts",
    "SystemMessageData",
    "SystemMsgState",
    "SystemMsgType",
    "a55a3/aU5NIH5pTDh0YamYt",
    "ItemMessage",
    "bgSp",
    "nameRichText",
    "nameColor",
    "messageLabel",
    "messageColor",
    "timeColor",
    "iconOpacity",
    "refreshHead",
    "refreshMessage",
    "refreshSystemMessage",
    "HasNotGain",
    "fontColor",
    "CanGain",
    "chunks:///_virtual/ItemMgr.ts",
    "./AdvanceRequestData.ts",
    "./EquipRequestData.ts",
    "./MixRequestData.ts",
    "./ModuleRequestData.ts",
    "./SellRequestData.ts",
    "./SplitRequestData.ts",
    "./UpgradeRequestData.ts",
    "./NItemMix.ts",
    "./NItemMixRequire.ts",
    "./NItemSplit.ts",
    "./NAdvanceConsume.ts",
    "./NArmorData.ts",
    "./NEngineData.ts",
    "./NEngineSkinData.ts",
    "./NUpgradeFormula.ts",
    "./NWeaponData.ts",
    "./NWingmanData.ts",
    "./NBoxData.ts",
    "./NDrugData.ts",
    "./NExpandData.ts",
    "./NExtraData.ts",
    "./NGiftData.ts",
    "./NKeyData.ts",
    "./NLootData.ts",
    "./NMaterialData.ts",
    "./NMoneyData.ts",
    "./NPilotChip.ts",
    "./NPropData.ts",
    "./NReadyData.ts",
    "./NWheelEffectData.ts",
    "./NMarsData.ts",
    "MixRequestData",
    "ModuleRequestData",
    "SellRequestData",
    "SplitRequestData",
    "UpgradeRequestData",
    "NEngineSkinData",
    "b0b8cXUD0hGApLff+9JEA0R",
    "loadConfigUpgradeFormula",
    "loadConfigAdvanceFormula",
    "loadMarsData",
    "loadItemData",
    "loadItemSplit",
    "loadItemMix",
    "s_pItemSplit",
    "s_pItemMixRequire",
    "s_pItemMix",
    "s_pItemDatas",
    "ITEM_SORT_NUM",
    "capitalizeFirstLetter",
    "Data",
    "s_pMarsDatas",
    "s_pItemAdvance",
    "s_pItemUpgrade",
    "STAR_MAX_NUM",
    "expNeed",
    "nextUpgradeData",
    "lastUpgradeData",
    "expMax",
    "kItemSortGift",
    "kItemSortExtra",
    "kItemSortWheelEffect",
    "kItemSortDrug",
    "kItemSortExpand",
    "kItemSortBox",
    "kItemSortMoney",
    "kItemSortMaterial",
    "kItemSortPilot",
    "toUpperCase",
    "sendSellRequestData",
    "sendEquipRequestData",
    "sendUpgradeRequestData",
    "sendAdvanceRequestData",
    "sendModuleRequestData",
    "luckyType",
    "chunks:///_virtual/ItemMoonBonusMenuBtn.ts",
    "6cb7fCczJlKoLnQ8bbXgaYw",
    "ItemMoonBonusMenuBtn",
    "getMoonMenuIconDisplay",
    "PopupMoonSign",
    "chunks:///_virtual/ItemMoonGift.ts",
    "./MoonGiftReward.ts",
    "dfabb0KyytFlbKh1msgivAw",
    "ItemMoonGift",
    "bgSprite",
    "bgSpriteFrameList",
    "moonGiftRewardList",
    "blackNode",
    "redDot",
    "normalRedPos",
    "curRedPos",
    "_popup",
    "_rewardData",
    "rewardRewardBagItems",
    "bgIndex",
    "setPath",
    "optionRewardDataMap",
    "initWithOptionData",
    "initWithBagItem",
    "resetRedDot",
    "refreshOptionNode",
    "currentRewardIndex",
    "setBlack",
    "onBtnBlackClick",
    "onItemBlackClick",
    "setBlackOpacityProgress",
    "chunks:///_virtual/ItemMoonGiftMenuBtn.ts",
    "./MoonGiftMgr.ts",
    "MoonGiftMgr",
    "2a1d5tZTdlHjL3Rd1znyT8j",
    "ItemMoonGiftMenuBtn",
    "getCurMoonGiftActivityData",
    "PopupMoonGift",
    "chunks:///_virtual/ItemNotice.ts",
    "e3b89W9mhlCBKMdEQ2cOBhH",
    "ItemNotice",
    "?t=",
    "ItemNotice 加载远程图片失败：",
    "chunks:///_virtual/ItemPeriodicGift.ts",
    "./UIPlaneOrientation.ts",
    "UIPlaneOrientation",
    "f8b27OTMx5OHo2qLxHQOgau",
    "ItemPeriodicGift",
    "titleRichText",
    "itemRewardList",
    "giftAnimation",
    "maskAnimation",
    "_giftId",
    "_maskBeginAnimation",
    "AM-PeriodicGiftScreen-FXbegin",
    "_maskKeepAnimation",
    "AM-PeriodicGiftScreen-FXKeep",
    "_giftComeInAnimation",
    "AM-PeriodicGiftScreen-comein",
    "_giftGoOutLeftAnimation",
    "AM-PeriodicGiftScreen-GoOut-toL",
    "_giftGoOutRightAnimation",
    "AM-PeriodicGiftScreen-GoOut-toR",
    "_giftAnimationFinishCb",
    "onGiftAnimationFinish",
    "onMaskAnimationFinish",
    "gameUI/periodic_gift/",
    "giftBagItemList",
    "runComeInAnimation",
    "runMaskOpenAnimation",
    "runGoOutAnimation",
    "chunks:///_virtual/ItemPeriodicGiftMenuBtn.ts",
    "./PeriodicGiftMgr.ts",
    "PeriodicGiftMgr",
    "c82504cOCdG1Z2ZNQqTJRCd",
    "ItemPeriodicGiftMenuBtn",
    "getCurPeriodicGiftActivityData",
    "PopupPeriodicGift",
    "chunks:///_virtual/ItemPeriodicGiftReward.ts",
    "./PeriodicGift.ts",
    "./RedDotMonitor.ts",
    "PeriodicGiftRewardUIType",
    "PeriodicGiftRewardStateType",
    "RedDotMonitor",
    "d68adNBJkJF1LfyUXrpnvyT",
    "ItemPeriodicGiftReward",
    "bgNormalSpriteFrame",
    "bgPaySpriteFrame",
    "itemReward",
    "lockNode",
    "unlockNode",
    "conditionNode",
    "conditionLabel",
    "payNode",
    "payLabel",
    "gainNode",
    "canGainNode",
    "unFinishNode",
    "lineEmptyNode",
    "lineNode",
    "lineAnimation",
    "redDotMonitor",
    "_curGiftIndex",
    "_isCurGiftLock",
    "curItemState",
    "Lock",
    "_lineLinkAnim",
    "curGiftIndex",
    "isCurGiftLock",
    "refreshBg",
    "refreshLockNode",
    "refreshConditionNode",
    "refreshPayLabel",
    "refreshLine",
    "refreshRedDotPath",
    "rewardBagItemList",
    "Gain",
    "NotGain",
    "curActivityData",
    "conditionValue",
    "curGiftData",
    "onBtnGainRewardClick",
    "gainGiftReward",
    "playLineLinkAnim",
    "chunks:///_virtual/ItemPeriodStage.ts",
    "ToggleContainer",
    "c2b1eBQgClDopSqal59yW3X",
    "ItemPeriodStage",
    "stageBGSp",
    "stageBGSpFr",
    "titleParent",
    "titlePrefabList",
    "subStageToggleContainer",
    "leftTimeLabel",
    "leftTimeNumNode",
    "leftTimeNumLabel",
    "powerLessLabel",
    "energyLabel",
    "dayLabel",
    "openNode",
    "closeNode",
    "lootParent",
    "bagIconItem",
    "stageBtn",
    "stageBtnLabel",
    "switchAnim",
    "_stageId",
    "_subStageId",
    "_open",
    "_lock",
    "_leftTime",
    "_dayNum",
    "_stageInfoData",
    "_curStageInfoData",
    "_unlockStr",
    "_power",
    "_energyCost",
    "_unlockStage",
    "_lootItems",
    "_switchAnimName",
    "AM-Period-Stage-Switch",
    "initBG",
    "initTitle",
    "initUnlockStr",
    "initLootItem",
    "getPeriodSubStageIdByStageId",
    "getPeriodData",
    "refreshToggle",
    "refreshLimit",
    "refreshDay",
    "refreshOpen",
    "onSwitchSubStage",
    "今日剩余",
    "无限制",
    "getPeriodStageDayStr",
    "refreshInfo",
    "refreshCurData",
    "refreshUnlock",
    "refreshPower",
    "refreshEnergy",
    "refreshLoot",
    "getFriendStageNum",
    "????",
    "getPower",
    "onBtnFightClick",
    "完成闯关模式",
    "关后开启",
    "体力不足，",
    "onFight",
    "startPeriodModeGame",
    "chunks:///_virtual/ItemPopupRoot.ts",
    "a0c97Q+LH5CMbN1zmRLuA56",
    "ItemPopupRoot",
    "chunks:///_virtual/ItemPrivilegeCardBtn.ts",
    "f3092Z7Fb5Lc6pmEJYaI1yA",
    "ItemPrivilegeCardBtn",
    "chunks:///_virtual/ItemProbInfo.ts",
    "cc32aQylpdElaRrqEk/p7zk",
    "ItemProbInfo",
    "Name",
    "Prob",
    "Init",
    "chunks:///_virtual/ItemReward.ts",
    "5e8a18VNDRJtqhkSlbLhpkt",
    "light",
    "lightWheel",
    "flash",
    "numLab",
    "gameUI/prefab/common/P-Item-Reward",
    "setColorAndName",
    "setWheelLight",
    "chunks:///_virtual/ItemSendDecadeUniteDanmakuManual.ts",
    "./ItemDecadeUniteSendDanmaku.ts",
    "EditBox",
    "b619aQPDkBKlLfUeg1UmWlN",
    "ItemSendDecadeUniteDanmakuManual",
    "inputEditBox",
    "请输入弹幕内容",
    "chunks:///_virtual/ItemStage.ts",
    "StageState",
    "StageMode",
    "StarType",
    "ef016BLub1NwrrerNgOvny6",
    "ItemStage",
    "normalStageNode",
    "normalStageNumLabel",
    "normalPointNode",
    "normalStarParentNode",
    "hardStageNode",
    "hardStageNumLabel",
    "hardPointNode",
    "hardStarParentNode",
    "bossStageNode",
    "bossPointNode",
    "bossPointNormalSpriteFrame",
    "bossPointHeroSpriteFrame",
    "bossIconNode",
    "bossStageNumLabel",
    "bossStarParentNode",
    "lockStageNode",
    "lockBossStageNode",
    "lockBossSprite",
    "lockBossNormalSpriteFrame",
    "lockBossHeroSpriteFrame",
    "starSpriteFrame",
    "topAENode",
    "bottomAENode",
    "playerHeadNode",
    "playerHeadMainNode",
    "playerAEParent",
    "playerHeadSp",
    "_uiStage",
    "_mode",
    "_stageIndex",
    "_curStageNode",
    "_curStagePointNode",
    "_curStageLockNode",
    "_curStageLNNode",
    "_curStageStarParentNode",
    "_animationElementList",
    "_curSubStageOutAE",
    "_curSubStageParAE",
    "_newStageAE",
    "_tempNode",
    "_unlockAE",
    "_canClick",
    "_playerAE",
    "Unlock",
    "initUI",
    "Hard",
    "refreshStage",
    "refreshStageStar",
    "getStarNum",
    "Light",
    "showLastStageAnim",
    "refreshPlayerHead",
    "playerHeadAnim",
    "gameUI/stageUI/new/progresseffects001",
    "showCurStageAnim",
    "clearAnimationElementList",
    "playRotationAnim",
    "initSubStageAnim",
    "playSubStageNoneAE",
    "initNewStageAnim",
    "createNewStageAE",
    "playNewStageAnim",
    "initUnlockStageAnim",
    "playUnlockStageAnim",
    "showPopupStageFightDetails",
    "PopupUnlockStage",
    "sendUnlockStageData",
    "PopupStageFightDetails",
    "subStageId",
    "chunks:///_virtual/ItemStagePoint.ts",
    "7dd07MBuqJJvpiAHOg9X/YR",
    "ItemStagePoint",
    "stagePointSp",
    "stagePointSpFrame",
    "chunks:///_virtual/ItemStoreMenuBtn.ts",
    "36934NNoUBJWrNFZWMOqhiZ",
    "ItemStoreMenuBtn",
    "chunks:///_virtual/ItemSurveyRewardMenuBtn.ts",
    "5c8ebfdZsVPsZfjykHEmvAd",
    "ItemSurveyRewardMenuBtn",
    "PopupSurvey",
    "chunks:///_virtual/ItemTaskReward.ts",
    "./RewardMgr.ts",
    "RewardMgr",
    "ae5f9ztAp9Jk7wJiDtNxCSs",
    "ItemTaskReward",
    "defaultIconSprite",
    "defaultIconSpriteFrame",
    "rewardName",
    "rewardDesc",
    "gainBtn",
    "_curNum",
    "_maxNum",
    "refreshVip",
    "refreshIcon",
    "gameUI/homeUI/task_",
    "rewardList",
    "进度 ",
    "chooseRewardId",
    "rewardChooseNum",
    "getRewardItemArray",
    "PopupChooseReward",
    "chunks:///_virtual/ItemTouchDelegate.ts",
    "d7540KEUOBEuqzIBdXyvNRQ",
    "ItemTouchDelegate",
    "chunks:///_virtual/ItemUIRoot.ts",
    "fea1eBnPydIuKNYkDbLT04W",
    "ItemUIRoot",
    "chunks:///_virtual/ItemVipRight.ts",
    "d2b668sXmlGib8a909SMuF3",
    "ItemVipRight",
    "chunks:///_virtual/Jump.ts",
    "e5aa6EpG+ZLbYj4Crt874/u",
    "Jump",
    "Sign",
    "GameMode",
    "GameBossDetail",
    "EndlessWorldPvpResult",
    "ItemBag",
    "Other",
    "WeekResult",
    "HelpShare",
    "GuildCreate",
    "GuildList",
    "Guild",
    "GuildSetting",
    "GuildAlyList",
    "chunks:///_virtual/kItemSort.ts",
    "eda3317PwZKioDWV1rGMf33",
    "Assets",
    "战 机",
    "装 甲",
    "副武器",
    "僚 机",
    "装 备",
    "资 源",
    "kAttrAttack",
    "kAttrDefence",
    "kAttrHp",
    "kAttrDodge",
    "kAttrCritRate",
    "kAttrHitRate",
    "kAttrParryRate",
    "kAttrEngineAtk",
    "kAttrArmorHp",
    "kAttrWeaponAtk",
    "kAttrWingAtk",
    "kAttrSkill",
    "kAttrLevel",
    "kAttrActivateRate",
    "kEquipPart",
    "kEquipPartNull",
    "kEquipPartEngine",
    "kEquipPartArmor",
    "kEquipPartWingman",
    "kEquipPartAssistantWeapon",
    "kItemType",
    "kItemError",
    "kItemEquip",
    "kItemExtra",
    "chunks:///_virtual/KUpgradeListItemState.ts",
    "03cfeoZmmRMy4stygH86XDP",
    "AvailableSale",
    "AvailablePutOn",
    "DisableSaleEquiped",
    "DisablePutonEquiped",
    "DisableMarsCanNotBeSell",
    "DisableMarsPartCanNotBeSell",
    "HasEquipedTag",
    "HasActionEquip",
    "MarsPartUnactivateTip",
    "KBagListItemState",
    "AvailableUse",
    "DisableCannottUse",
    "DisableCannottSale",
    "chunks:///_virtual/Launcher.ts",
    "./ns.ts",
    "./ScreenBoxing.ts",
    "./EngineSkinMgr.ts",
    "macro",
    "BufferAsset",
    "initSync",
    "ScreenBoxing",
    "bbcb4jF2xJBEafhK8cWrJD/",
    "Launcher",
    "ANDROID",
    "SUPPORT_TEXTURE_FORMATS",
    ".jpg",
    ".png",
    "screenBoxing",
    "netWasm",
    "startCallback",
    "stateChangeCallback",
    "ns/ns.wasm",
    "初始化",
    "trackFirst",
    "regist",
    "shouldShowScreenBoxing",
    "[Launcher] no need screen boxing, destroy it.",
    "getCacheFileCount",
    "KEY_LAST_CLIENT_VERSION",
    "[Launcher] new version installed:",
    " -> ",
    ", cached file count:",
    "[Launcher] no version updated, cached file count:",
    " clean:",
    "[Launcher] new client installed, cached file count:",
    "清理缓存",
    "clearLRU",
    "[Launcher] after clearLRU file count:",
    "[Launcher] before clearLRU file count:",
    "cacheManager",
    "cachedFiles",
    "加载资源",
    "loadMaterial",
    "material_library/M_Sprite",
    "[Common init] loadMaterial M_Sprite failed: ",
    "material_library/M_Sprite_Add",
    "[Common init] loadMaterial M_Sprite_Add failed: ",
    "material_library/M_Sprite_DstColor",
    "[Common init] loadMaterial M_Sprite_DstColor failed: ",
    "material_library/M_Sprite_Overlay",
    "[Common init] loadMaterial M_Sprite_Overlay failed: ",
    "material_library/M_Sprite_Overlay-new",
    "last_client_version",
    "chunks:///_virtual/List.ts",
    "8f186NKXCtCAIGCDa+bsB/P",
    "NODE",
    "PREFAB",
    "模板类型",
    "列表项",
    "templateType",
    "排列方式",
    "网格布局中的方向",
    "item的宽度",
    "item的高度",
    "列表项X间隔",
    "列表项Y间隔",
    "上间距",
    "下间距",
    "左间距",
    "右间距",
    "itemPrefab",
    "startAxis",
    "itemWidth",
    "itemHeight",
    "spaceX",
    "spaceY",
    "padding_top",
    "padding_buttom",
    "padding_left",
    "padding_right",
    "contentUt",
    "viewUt",
    "scrollViewUt",
    "itemDataList",
    "spawnCount",
    "itemPool",
    "halfScrollView",
    "lastContentPosX",
    "lastContentPosY",
    "gridRow",
    "gridCol",
    "updateTimer",
    "bScrolling",
    "updateFun",
    "scrolling",
    "setItemTemplate",
    "countListParam",
    "horizontal",
    "vertical",
    "updateV",
    "udpateH",
    "padding_left或padding_right过大",
    "updateGrid_V",
    "padding_top或padding_buttom过大",
    "updateGrid_H",
    "createList",
    "scrollToPercentVertical",
    "getItemPos",
    "getPositionInView",
    "getListData",
    "deleteItem",
    "updateContent",
    "changeItem",
    "stopAutoScroll",
    "chunks:///_virtual/ListItem.ts",
    "3f065fsbMxKhJA+AO1sQDQm",
    "chunks:///_virtual/LoginRequestData.ts",
    "92ffcc1vvlOb7NVpKz/KIRs",
    "LoginRequestData",
    "openId",
    "UpCmdLogin",
    "chunks:///_virtual/LoopItemBase.ts",
    "d67a9LepEFOU6WzYR3ir/TP",
    "LoopItemBase",
    "onItemRender",
    "onCenterItemRender",
    "onUpdateTransform",
    "chunks:///_virtual/LoopPageItem.ts",
    "c5a74GnxwtAybV64agf0gw3",
    "LoopPageItem",
    "dataIndex",
    "chunks:///_virtual/LoopPageView.ts",
    "./LoopPageItem.ts",
    "a8821d5rMVFYI02jEnjF1+d",
    "LoopPageView",
    "pageNode",
    "pageItems",
    "dotNodes",
    "posArr",
    "interval",
    "aniTime",
    "itemCount",
    "moveRunning",
    "loopTween",
    "loopRunning",
    "refreshDot",
    "playLoopTween",
    "moveNext",
    "movePre",
    "getDeltaX",
    "chunks:///_virtual/LoopScrollView.ts",
    "./LoopItemBase.ts",
    "4f8c8U3/X9PVLnCjw9K6RGj",
    "LoopScrollView",
    "scrollType",
    "space",
    "adhere",
    "_isInit",
    "_loopItems",
    "_dataArr",
    "_lastContentPos",
    "_offsetPos",
    "_curItem",
    "_moveTween",
    "_isTweenMoveing",
    "fixIndex",
    "SCROLL_BEGAN",
    "onScrollBegan",
    "SCROLL_ENDED",
    "onScrollEnded",
    "updateLoopItem",
    "updateTransform",
    "toNextItem",
    "itemWidthOrHeight",
    "toPreItem",
    "scollToItem",
    "REPEAT_FOREVER",
    "dataArr",
    "onRenderItem",
    "onRenderCenterItem",
    "checkCenterItem",
    "offsetItemCount",
    "swapItem",
    "attachAdhere",
    "stopScroll",
    "getBoundingBoxToWorld",
    "contains",
    "loopItems",
    "chunks:///_virtual/LootItem.ts",
    "LootType",
    "b1cccK8IDJJLa5qLkjMY8d0",
    "LootItem",
    "cryType",
    "lootNode",
    "lootAE",
    "lootItemBgAE",
    "radians",
    "bAttractable",
    "bAttracted",
    "lootAttractRange",
    "attractTime",
    "bInView",
    "bControl",
    "controlCount",
    "controlTime",
    "controlSpeed",
    "zOrder",
    "needBgAE",
    "LootItem#",
    "TYPE_CRYSTAL_ALL",
    "TYPE_SCORE_ALL",
    "TYPE_CRYSTAL",
    "TYPE_SCORE",
    "TYPE_BOSS_REWARD",
    "TYPE_PIRATE",
    "TYPE_PIRATE_CRYSTAL",
    "setControl",
    "setMoveParam",
    "setOffX",
    "getLootData",
    "setMoveA",
    "asin",
    "cycleControl",
    "vMax",
    "setAttracted",
    "isAttracted",
    "isAttractable",
    "getAttractRange",
    "setStandbyTime",
    "s_pCache",
    "chunks:///_virtual/LootMgr.ts",
    "./LootItem.ts",
    "a685dLXFLlF1pjKr/4FqKKu",
    "lootSoundCount",
    "cycleLootItem",
    "cycleEnemyGroupLoot",
    "origin",
    "planeGetLootItem",
    "addEnemyGroupLoot",
    "generateEnemyLootWithEnemyGroupLoot",
    "isCrystalHp",
    "getCrystalHp",
    "TYPE_WEAPON",
    "TYPE_CHARGE",
    "setEnergySpeed",
    "TYPE_TRANS",
    "shieldOn",
    "getShieldExtraTime",
    "showUpgrade",
    "TYPE_HP",
    "getAddHpRate",
    "boss_reward",
    "pirate",
    "isLootCrystal",
    "getLootNum",
    "generateLoot",
    "[LootMgr] generatePlaneLoot lootID:",
    " not found",
    "[LootMgr] generateLootByBoss lootID:",
    "generateBossLootWithLootID",
    "[LootMgr] generateLootByEnemyGroupLoot lootID:",
    "Loot_",
    "attractAll",
    "chunks:///_virtual/LootType.ts",
    "5c35a3C+OtGta1jdAQYvcC4",
    "chunks:///_virtual/main",
    "./debug-view-runtime-control.ts",
    "./Classic.ts",
    "./Gravity.ts",
    "./gravityengine.mg.cocoscreator.min.mjs_cjs=&original=.js",
    "./tdanalytics.mg.cocoscreator.min.mjs_cjs=&original=.js",
    "./BigInteger.mjs_cjs=&original=.js",
    "./MoonGiftMainData.ts",
    "./NoticeData.ts",
    "./OperateActivityData.ts",
    "./PeriodicGiftMainData.ts",
    "./TreasureHuntData.ts",
    "./ActionAward.ts",
    "./MoonGift.ts",
    "./Pay.ts",
    "./Platform.ts",
    "./PrivilegeCard.ts",
    "./Reward.ts",
    "./Share.ts",
    "./SystemUnlock.ts",
    "./TipPopup.ts",
    "./Tips.ts",
    "./CacheableData.ts",
    "./NetClient.ts",
    "./NetConnection.ts",
    "./NetConnectionHttp.ts",
    "./NetConstant.ts",
    "./NetError.ts",
    "./NetErrorCode.ts",
    "./NetErrorHandleData.ts",
    "./NetHandler.ts",
    "./NetPackage.ts",
    "./NetRequest.ts",
    "./NetResponse.ts",
    "./NetUtils.ts",
    "./NetZone.ts",
    "./StreamHelper.ts",
    "./StreamReader.ts",
    "./StreamWriter.ts",
    "./AttackAble.ts",
    "./Scissor.ts",
    "./XActionEvent.ts",
    "./XActionListener.ts",
    "./EnemyAttackPointDelegate.ts",
    "./EnemyPlane.ts",
    "./EnemyGroupLoot.ts",
    "./BgMap.ts",
    "./PlaneAttackPoint.ts",
    "./PlaneAttackPointDelegate.ts",
    "./ShieldDelegate.ts",
    "./WeaponBullet.ts",
    "./WeaponBulletAnim.ts",
    "./Wingman.ts",
    "./NGuild.ts",
    "./NMarsShow.ts",
    "./NUtiGoods.ts",
    "./WeekTaskDayData.ts",
    "./WeekTaskItemData.ts",
    "./NoticeMessageData.ts",
    "./WorldMessageData.ts",
    "./CaptureMgr.ts",
    "./CdKeyMgr.ts",
    "./DoubleRewardMgr.ts",
    "./PayMgr.ts",
    "./ShareMgr.ts",
    "./SignMgr.ts",
    "./TipPopupMgr.ts",
    "./MoonGiftActivityData.ts",
    "./MoonGiftOptionRewardData.ts",
    "./MoonGiftRewardData.ts",
    "./PayData.ts",
    "./MoonGiftRewardPayData.ts",
    "./PeriodicGiftRewardPayData.ts",
    "./PrivilegeCardPayData.ts",
    "./RechargeRMBPayData.ts",
    "./StoreFirstPayData.ts",
    "./StoreFundPayData.ts",
    "./StoreMallStagePayData.ts",
    "./StorePeriodPayData.ts",
    "./PeriodicGiftActivityData.ts",
    "./PeriodicGiftData.ts",
    "./PeriodicGiftRewardData.ts",
    "./NPilotAttribute.ts",
    "./NPilotBase.ts",
    "./NPilotUnlock.ts",
    "./RewardAchievementData.ts",
    "./RewardActivityData.ts",
    "./RewardData.ts",
    "./RewardMarsData.ts",
    "./RewardTaskData.ts",
    "./ShopBoxData.ts",
    "./ShopData.ts",
    "./ShopEffectData.ts",
    "./ShopModuleData.ts",
    "./NSkinData.ts",
    "./NVipData.ts",
    "./AnimationData.ts",
    "./AnimationDelegate.ts",
    "./AnimationFile.ts",
    "./AnimationFrame.ts",
    "./FrameData.ts",
    "./FrameRect.ts",
    "./ImageRect.ts",
    "./ImageRectFile.ts",
    "./NetConnectionCloverFront.ts",
    "./NetConnectionCloverHttp.ts",
    "./NetConnectionCloverLogin.ts",
    "./NetReduceGoods.ts",
    "./NetRequestClover.ts",
    "./NetResponseClover.ts",
    "./HeadDataBase.ts",
    "./AidInvitationListRequestData.ts",
    "./AidRequestListRequestData.ts",
    "./AntiDataRequestData.ts",
    "./BattleArrayRequestData.ts",
    "./BestHistoryRequestData.ts",
    "./BossPkDataRequestData.ts",
    "./BuyFundRequestData.ts",
    "./BuyMoonGiftRewardRequestData.ts",
    "./BuyPeriodicGiftRewardRequestData.ts",
    "./BuyPrivilegeCardRequestData.ts",
    "./BuyRequestData.ts",
    "./BuyStoreFirstRequestData.ts",
    "./BuyStoreFreeRequestData.ts",
    "./BuyStorePeriodRequestData.ts",
    "./BuyStoreStageRequestData.ts",
    "./DailyBonusInfoRequsetData.ts",
    "./DecadeUniteInfoRequestData.ts",
    "./DecadeUniteInviteRequestData.ts",
    "./DecadeUniteSendBulletRequestData.ts",
    "./EnergySwitchRequestData.ts",
    "./EnterPVPAreaRequestData.ts",
    "./FeedbackRequestData.ts",
    "./FriendDataRequestData.ts",
    "./FriendListRequestData.ts",
    "./GainAidRewardRequestData.ts",
    "./GainDailyBonusRequsetData.ts",
    "./GainFundRequestData.ts",
    "./GainLoginRewardRequestData.ts",
    "./GainMoonBonusRequsetData.ts",
    "./GainPrivilegeCardRequestData.ts",
    "./GainRewardRequestData.ts",
    "./GainStoreFirstRequestData.ts",
    "./GainStoreStageRequestData.ts",
    "./GainTotalDailyBonusRequsetData.ts",
    "./GainVIPFirstPrizeRequestData.ts",
    "./GetFailedOrdersRequestData.ts",
    "./GetIosPreviewRequestData.ts",
    "./GetNoticeRequestData.ts",
    "./GiftEnergyRequestData.ts",
    "./HeartbeatRequestData.ts",
    "./HeroPkDataRequestData.ts",
    "./IdleBonusInfoRequestData.ts",
    "./IndexRequestData.ts",
    "./InviteRequestData.ts",
    "./LoginRequestData.ts",
    "./MarsActivationRequestData.ts",
    "./MarsDeactivationRequestData.ts",
    "./MoonBonusInfoRequsetData.ts",
    "./MoonGiftGainRewardRequestData.ts",
    "./MoonGiftInfoRequestData.ts",
    "./NewbieBonusInfoRequsetData.ts",
    "./NewbieGainBonusRequsetData.ts",
    "./OwnLoginRequestData.ts",
    "./PVPShopLastRefreshTimeRequestData.ts",
    "./PeriodPkDataRequestData.ts",
    "./PeriodicGiftGainRewardRequestData.ts",
    "./PeriodicGiftInfoRequestData.ts",
    "./PilotAdvanceRequestData.ts",
    "./PilotMixRequestData.ts",
    "./PilotReplaceRequestData.ts",
    "./PilotUpgradeRequestData.ts",
    "./PlaceOrderRequestData.ts",
    "./PlayerLogoutRequestData.ts",
    "./PostLoginRequestData.ts",
    "./PrivilegeCardInfoRequestData.ts",
    "./PullbackRequestData.ts",
    "./PveGame1RequestData.ts",
    "./PveGameEndRequestData.ts",
    "./QqGetBalanceRequestData.ts",
    "./QqLoginRequestData.ts",
    "./QqShareRequestData.ts",
    "./QueryOrderRequestData.ts",
    "./QueryPVPMatchRequestData.ts",
    "./RandDataRequestData.ts",
    "./RandomAidFriendListRequestData.ts",
    "./RandomSupplyRequestData.ts",
    "./RechargeM2RequestData.ts",
    "./RechargeMoneyRequestData.ts",
    "./RechargeRequestData.ts",
    "./RegCntRequestData.ts",
    "./RemovePlayerRequestData.ts",
    "./ReportRechargeFailRequestData.ts",
    "./RogueBuyRequestData.ts",
    "./RogueLastRefreshTimeRequestData.ts",
    "./RogueShowRequestData.ts",
    "./SecRoundEndCountDataRequestData.ts",
    "./SecRoundEndDataRequestData.ts",
    "./SecRoundStartDataRequestData.ts",
    "./SendEnergyRequestData.ts",
    "./SendGoodsRequestData.ts",
    "./SetInfoRequestData.ts",
    "./SingleGuideRequestData.ts",
    "./StoreFirstInfoRequestData.ts",
    "./StorePeriodInfoRequestData.ts",
    "./SweepRequestData.ts",
    "./SysmsgItemRequestData.ts",
    "./TestRequestData.ts",
    "./TopBulletinRequestData.ts",
    "./TurnTableBuyRequestData.ts",
    "./TurnTableLastRefreshTimeRequestData.ts",
    "./TurnTableShowRequestData.ts",
    "./UnlockPveHeroRequestData.ts",
    "./UnlockPveRequestData.ts",
    "./UpCmdFundInfoRequestData.ts",
    "./UpCmdTreasureHuntRequesetData.ts",
    "./UseSupplyRequestData.ts",
    "./WxMiniLoginRequestData.ts",
    "./CmdRealHead.ts",
    "./DownCmdHead.ts",
    "./UpCmdHead.ts",
    "./DownCmdAdvance.ts",
    "./DownCmdAidInvitationList.ts",
    "./DownCmdAidRequestList.ts",
    "./DownCmdAntiData.ts",
    "./DownCmdBattleArray.ts",
    "./DownCmdBestHistory.ts",
    "./DownCmdBossPkData.ts",
    "./DownCmdBuy.ts",
    "./DownCmdBuyFund.ts",
    "./DownCmdBuyMoonGiftReward.ts",
    "./DownCmdBuyPeriodicGiftReward.ts",
    "./DownCmdBuyPrivilegeCard.ts",
    "./DownCmdBuyStoreFree.ts",
    "./DownCmdBuyStorePeriod.ts",
    "./DownCmdBuyStoreStage.ts",
    "./DownCmdCdKey.ts",
    "./DownCmdCheckPVPResult.ts",
    "./DownCmdDailyBonusInfo.ts",
    "./DownCmdDecadeUniteInfo.ts",
    "./DownCmdDecadeUniteInvite.ts",
    "./DownCmdDecadeUniteSendBullet.ts",
    "./DownCmdDecadeUniteSkin.ts",
    "./DownCmdEndlessIndividualCupGainReward.ts",
    "./DownCmdEndlessIndividualCupInfo.ts",
    "./DownCmdEndlessIndividualCupStart.ts",
    "./DownCmdEnergy.ts",
    "./DownCmdEnergySwitch.ts",
    "./DownCmdEnterError.ts",
    "./DownCmdEnterPVPArea.ts",
    "./DownCmdEquip.ts",
    "./DownCmdEquipSkinActivate.ts",
    "./DownCmdFeedback.ts",
    "./DownCmdFriendData.ts",
    "./DownCmdFriendList.ts",
    "./DownCmdFundInfo.ts",
    "./DownCmdGainAidReward.ts",
    "./DownCmdGainDailyBonus.ts",
    "./DownCmdGainDailyTaskReward.ts",
    "./DownCmdGainDecadeUniteDailyTasksReward.ts",
    "./DownCmdGainDecadeUniteDailyTasksTotalReward.ts",
    "./DownCmdGainDecadeUniteInviteReward.ts",
    "./DownCmdGainFund.ts",
    "./DownCmdGainIdleBonus.ts",
    "./DownCmdGainLoginReward.ts",
    "./DownCmdGainMoonBonus.ts",
    "./DownCmdGainNewbieBonus.ts",
    "./DownCmdGainPrivilegeCard.ts",
    "./DownCmdGainQuickIdleBonus.ts",
    "./DownCmdGainReward.ts",
    "./DownCmdGainStoreStage.ts",
    "./DownCmdGainTotalDailyBonus.ts",
    "./DownCmdGainVIPFirstPrize.ts",
    "./DownCmdGetClientData.ts",
    "./DownCmdGetClientVars.ts",
    "./DownCmdGetFailedOrders.ts",
    "./DownCmdGetIosPreview.ts",
    "./DownCmdGetNotice.ts",
    "./DownCmdGiftEnergy.ts",
    "./DownCmdGuide.ts",
    "./DownCmdHeartbeat.ts",
    "./DownCmdHeroPkData.ts",
    "./DownCmdIdleBonusInfo.ts",
    "./DownCmdIndex.ts",
    "./DownCmdInvite.ts",
    "./DownCmdLogin.ts",
    "./DownCmdMarsActivation.ts",
    "./DownCmdMarsDeactivation.ts",
    "./DownCmdMix.ts",
    "./DownCmdModule.ts",
    "./DownCmdMoonBonusInfo.ts",
    "./DownCmdMoonGiftGainReward.ts",
    "./DownCmdMoonGiftInfo.ts",
    "./DownCmdNewbieBonusInfo.ts",
    "./DownCmdOwnLogin.ts",
    "./DownCmdPVPScoreSync.ts",
    "./DownCmdPVPShopBuy.ts",
    "./DownCmdPVPShopLastRefreshTime.ts",
    "./DownCmdPVPShopShow.ts",
    "./DownCmdPeriodPkData.ts",
    "./DownCmdPeriodicGiftGainReward.ts",
    "./DownCmdPeriodicGiftInfo.ts",
    "./DownCmdPilotAdvance.ts",
    "./DownCmdPilotMix.ts",
    "./DownCmdPilotReplace.ts",
    "./DownCmdPilotUpgrade.ts",
    "./DownCmdPlaceOrder.ts",
    "./DownCmdPlayerLogout.ts",
    "./DownCmdPrivilegeCardInfo.ts",
    "./DownCmdPullback.ts",
    "./DownCmdPveGame1.ts",
    "./DownCmdPveGameEnd.ts",
    "./DownCmdPveRewardDouble.ts",
    "./DownCmdQqGetBalance.ts",
    "./DownCmdQqLogin.ts",
    "./DownCmdQqShare.ts",
    "./DownCmdQueryOrder.ts",
    "./DownCmdQueryPVPMatch.ts",
    "./DownCmdRandData.ts",
    "./DownCmdRandomAidFriendList.ts",
    "./DownCmdRandomSupply.ts",
    "./DownCmdRecharge.ts",
    "./DownCmdRechargeBase.ts",
    "./DownCmdRechargeM2.ts",
    "./DownCmdRechargeMoney.ts",
    "./DownCmdRegCnt.ts",
    "./DownCmdRemoveData.ts",
    "./DownCmdReportRechargeFail.ts",
    "./DownCmdRogueBuy.ts",
    "./DownCmdRogueLastRefreshTime.ts",
    "./DownCmdRogueShow.ts",
    "./DownCmdSecRoundEndCountData.ts",
    "./DownCmdSecRoundEndData.ts",
    "./DownCmdSecRoundStartData.ts",
    "./DownCmdSell.ts",
    "./DownCmdSendEnergy.ts",
    "./DownCmdSendGoods.ts",
    "./DownCmdSetClientData.ts",
    "./DownCmdSingleGuide.ts",
    "./DownCmdSplit.ts",
    "./DownCmdStoreFirstInfo.ts",
    "./DownCmdStorePeriodInfo.ts",
    "./DownCmdSweep.ts",
    "./DownCmdSysmsgItem.ts",
    "./DownCmdTest.ts",
    "./DownCmdTopBulletin.ts",
    "./DownCmdTreasureHunt.ts",
    "./DownCmdTurnTableBuy.ts",
    "./DownCmdTurnTableLastRefreshTime.ts",
    "./DownCmdTurnTableShow.ts",
    "./DownCmdUnlockPve.ts",
    "./DownCmdUnlockPveHero.ts",
    "./DownCmdUpgrade.ts",
    "./DownCmdUseItem.ts",
    "./DownCmdUseSupply.ts",
    "./DownCmdWxMiniLogin.ts",
    "./PlayerScorePo.ts",
    "./UpCmdAdvance.ts",
    "./UpCmdAidInvitationList.ts",
    "./UpCmdAidRequestList.ts",
    "./UpCmdAntiData.ts",
    "./UpCmdBattleArray.ts",
    "./UpCmdBestHistory.ts",
    "./UpCmdBossPkData.ts",
    "./UpCmdBuy.ts",
    "./UpCmdBuyFund.ts",
    "./UpCmdBuyMoonGiftReward.ts",
    "./UpCmdBuyPeriodicGiftReward.ts",
    "./UpCmdBuyPrivilegeCard.ts",
    "./UpCmdBuyStoreFirst.ts",
    "./UpCmdBuyStoreFree.ts",
    "./UpCmdBuyStorePeriod.ts",
    "./UpCmdBuyStoreStage.ts",
    "./UpCmdCdKey.ts",
    "./UpCmdCheckPVPResult.ts",
    "./UpCmdDailyBonusInfo.ts",
    "./UpCmdDecadeUniteInfo.ts",
    "./UpCmdDecadeUniteInvite.ts",
    "./UpCmdDecadeUniteSendBullet.ts",
    "./UpCmdDecadeUniteSkin.ts",
    "./UpCmdEndlessIndividualCupGainReward.ts",
    "./UpCmdEndlessIndividualCupInfo.ts",
    "./UpCmdEndlessIndividualCupStart.ts",
    "./UpCmdEnergy.ts",
    "./UpCmdEnergySwitch.ts",
    "./UpCmdEnterPVPArea.ts",
    "./UpCmdEquip.ts",
    "./UpCmdEquipSkinActivate.ts",
    "./UpCmdEquipSkinChange.ts",
    "./UpCmdFeedback.ts",
    "./UpCmdFriendList.ts",
    "./UpCmdFundInfo.ts",
    "./UpCmdGainActionAward.ts",
    "./UpCmdGainAidReward.ts",
    "./UpCmdGainDailyBonus.ts",
    "./UpCmdGainDailyTaskReward.ts",
    "./UpCmdGainDecadeUniteDailyTasksReward.ts",
    "./UpCmdGainDecadeUniteDailyTasksTotalReward.ts",
    "./UpCmdGainDecadeUniteInviteReward.ts",
    "./UpCmdGainDecadeUniteMilestoneReward.ts",
    "./UpCmdGainFund.ts",
    "./UpCmdGainIdleBonus.ts",
    "./UpCmdGainLoginReward.ts",
    "./UpCmdGainMoonBonus.ts",
    "./UpCmdGainNewbieBonus.ts",
    "./UpCmdGainPrivilegeCard.ts",
    "./UpCmdGainQuickIdleBonus.ts",
    "./UpCmdGainReward.ts",
    "./UpCmdGainStoreFirst.ts",
    "./UpCmdGainStoreStage.ts",
    "./UpCmdGainTotalDailyBonus.ts",
    "./UpCmdGainVIPFirstPrize.ts",
    "./UpCmdGetClientData.ts",
    "./UpCmdGetClientVars.ts",
    "./UpCmdGetFailedOrders.ts",
    "./UpCmdGetIosPreview.ts",
    "./UpCmdGetNotice.ts",
    "./UpCmdGiftEnergy.ts",
    "./UpCmdGuide.ts",
    "./UpCmdHeartbeat.ts",
    "./UpCmdHeroPkData.ts",
    "./UpCmdIdleBonusInfo.ts",
    "./UpCmdIndex.ts",
    "./UpCmdInvite.ts",
    "./UpCmdLogin.ts",
    "./UpCmdMarsActivation.ts",
    "./UpCmdMarsDeactivation.ts",
    "./UpCmdMix.ts",
    "./UpCmdModule.ts",
    "./UpCmdMoonBonusInfo.ts",
    "./UpCmdMoonGiftGainReward.ts",
    "./UpCmdMoonGiftInfo.ts",
    "./UpCmdNewbieBonusInfo.ts",
    "./UpCmdOwnLogin.ts",
    "./UpCmdPVPShopBuy.ts",
    "./UpCmdPVPShopLastRefreshTime.ts",
    "./UpCmdPVPShopShow.ts",
    "./UpCmdPeriodPkData.ts",
    "./UpCmdPeriodicGiftGainReward.ts",
    "./UpCmdPeriodicGiftInfo.ts",
    "./UpCmdPilotAdvance.ts",
    "./UpCmdPilotMix.ts",
    "./UpCmdPilotReplace.ts",
    "./UpCmdPilotUpgrade.ts",
    "./UpCmdPlaceOrder.ts",
    "./UpCmdPlayerLogout.ts",
    "./UpCmdPrivilegeCardInfo.ts",
    "./UpCmdPullback.ts",
    "./UpCmdPveGame1.ts",
    "./UpCmdPveGameEnd.ts",
    "./UpCmdPveRewardDouble.ts",
    "./UpCmdQqGetBalance.ts",
    "./UpCmdQqLogin.ts",
    "./UpCmdQqShare.ts",
    "./UpCmdQueryOrder.ts",
    "./UpCmdQueryPVPMatch.ts",
    "./UpCmdRandData.ts",
    "./UpCmdRandomSupply.ts",
    "./UpCmdRecharge.ts",
    "./UpCmdRechargeM2.ts",
    "./UpCmdRechargeMoney.ts",
    "./UpCmdRegCnt.ts",
    "./UpCmdRemovePlayer.ts",
    "./UpCmdReportRechargeFail.ts",
    "./UpCmdRogueBuy.ts",
    "./UpCmdRogueLastRefreshTime.ts",
    "./UpCmdRogueShow.ts",
    "./UpCmdSecRoundEndCountData.ts",
    "./UpCmdSecRoundEndData.ts",
    "./UpCmdSecRoundStartData.ts",
    "./UpCmdSell.ts",
    "./UpCmdSendEnergy.ts",
    "./UpCmdSendGoods.ts",
    "./UpCmdSetClientData.ts",
    "./UpCmdSetClientVars.ts",
    "./UpCmdSetInfo.ts",
    "./UpCmdSingleGuide.ts",
    "./UpCmdSplit.ts",
    "./UpCmdStoreFirstInfo.ts",
    "./UpCmdStorePeriodInfo.ts",
    "./UpCmdSweep.ts",
    "./UpCmdSysmsgItem.ts",
    "./UpCmdTest.ts",
    "./UpCmdTopBulletin.ts",
    "./UpCmdTreasureHunt.ts",
    "./UpCmdTurnTableBuy.ts",
    "./UpCmdTurnTableLastRefreshTime.ts",
    "./UpCmdTurnTableShow.ts",
    "./UpCmdUnlockPve.ts",
    "./UpCmdUnlockPveHero.ts",
    "./UpCmdUpgrade.ts",
    "./UpCmdUseItem.ts",
    "./UpCmdUseSupply.ts",
    "./UpCmdWxMiniLogin.ts",
    "./ConfigZoneData.ts",
    "./CloudUserInfoKeys.ts",
    "./DevPlatform.ts",
    "./IPlatform.ts",
    "./PlatformEnums.ts",
    "./PlatformSystemInfo.ts",
    "./WxPlatform.ts",
    "./ResInfo.ts",
    "./ItemPopupRoot.ts",
    "./ItemUIRoot.ts",
    "./PrefabPaths.ts",
    "./SceneBase.ts",
    "./CountDown.ts",
    "./PopupBattleGuide.ts",
    "./PopupBossWarning.ts",
    "./PopupBossWarningPirate.ts",
    "./PopupPause.ts",
    "./PopupReborn.ts",
    "./SceneBattle.ts",
    "./ButtonMgr.ts",
    "./BottomAnimation.ts",
    "./ChestInfo.ts",
    "./IconAD.ts",
    "./PagePoint.ts",
    "./PopupGiftInfo.ts",
    "./PopupRewardInfo.ts",
    "./UITouch.ts",
    "./UserInfoButton.ts",
    "./ExtButton.ts",
    "./FullScreenBg.ts",
    "./ItemTouchDelegate.ts",
    "./UIAdapter.ts",
    "./DataDriverLabel.ts",
    "./DataDriverLabelSwitch.ts",
    "./DataDriverSprite.ts",
    "./DataEventMonitor.ts",
    "./DecadeUniteInviteBox.ts",
    "./ItemDecadeUniteInvite.ts",
    "./ItemDecadeUniteInviteEmptyProgress.ts",
    "./ItemDecadeUniteInviteProgress.ts",
    "./UIDecadeUniteInvite.ts",
    "./DecadeUniteDanmakuMgr.ts",
    "./DecadeUnitePlaneMgr.ts",
    "./ItemSendDecadeUniteDanmakuManual.ts",
    "./PopupDecadeUniteSendDanmaku.ts",
    "./UIDecadeUniteMainPage.ts",
    "./DecadeMilestonUpdateItemStatus.ts",
    "./DecadeMilestoneItem.ts",
    "./DecadeMilestoneMirrorChestInfo.ts",
    "./LoopScrollView.ts",
    "./MilestoneItem.ts",
    "./UIDecadeMilestonePanel.ts",
    "./DecadeUniteSkinEquip.ts",
    "./DecadeUniteSkinExhibition.ts",
    "./PopupDecadeUniteSkinPreview.ts",
    "./PopupSkinActivate.ts",
    "./PopupSkinTicket.ts",
    "./UIDecadeUniteSkin.ts",
    "./LoopPageView.ts",
    "./PopupDecadeThunderStory.ts",
    "./ThunderStoryShareBtn.ts",
    "./UIWeekDayItem.ts",
    "./UIWeekTask.ts",
    "./UIWeekTaskItem.ts",
    "./WeekTaskTotalProgress.ts",
    "./ItemDialogue.ts",
    "./PopupFriendDetailInfo.ts",
    "./GuideArrow.ts",
    "./GuideDialogue.ts",
    "./GuideHighLightArea.ts",
    "./GuideHighLightParams.ts",
    "./PopupGuide.ts",
    "./UICG.ts",
    "./Launcher.ts",
    "./SceneLaunch.ts",
    "./UILogo.ts",
    "./PopupLoading.ts",
    "./PopupLoadingAnim.ts",
    "./PopupLoadingBase.ts",
    "./PopupLoadingEnums.ts",
    "./PopupLoadingMainPage.ts",
    "./PopupLoginLimit.ts",
    "./SceneLogin.ts",
    "./UILogin.ts",
    "./SceneMain.ts",
    "./UIMainPageTop.ts",
    "./UIMenu.ts",
    "./BossDetailCircle.ts",
    "./BossDetailSwitchBtn.ts",
    "./ItemBossStage.ts",
    "./UIStageBoss.ts",
    "./UIStageBossDetail.ts",
    "./DailyTaskStage.ts",
    "./ItemDailyTask.ts",
    "./UIDailyTask.ts",
    "./ItemEndlessAid.ts",
    "./ItemEndlessBuyReady.ts",
    "./ItemEndlessWorldBattleResult.ts",
    "./ItemEndlessWorldPvp.ts",
    "./ItemEndlessWorldPvpBattleInfo.ts",
    "./ItemEndlessWorldShop.ts",
    "./PopupEndlessWorldPvpBattleResult.ts",
    "./PopupEndlessWorldPvpTokenReachDailyLimit.ts",
    "./PopupEndlessWorldPvpTokenWillReachDailyLimit.ts",
    "./UIEndlessAid.ts",
    "./UIEndlessBase.ts",
    "./UIEndlessBuyReady.ts",
    "./UIEndlessWorldPvp.ts",
    "./UIEndlessWorldPvpBattleInfo.ts",
    "./UIEndlessWorldShop.ts",
    "./MenuBtnControl.ts",
    "./PopupGameGroup.ts",
    "./ItemContinueSignMenuBtn.ts",
    "./ItemDailyBonusMenuBtn.ts",
    "./ItemDecadeUniteMenuBtn.ts",
    "./ItemEndlessCupMenuBtn.ts",
    "./ItemFirstRechargeMenuBtn.ts",
    "./ItemFundMenuBtn.ts",
    "./ItemGameClubMenuBtn.ts",
    "./ItemGameGroupMenuItem.ts",
    "./ItemIdleBonusMenuBtn.ts",
    "./ItemMoonBonusMenuBtn.ts",
    "./ItemMoonGiftMenuBtn.ts",
    "./ItemPeriodicGiftMenuBtn.ts",
    "./ItemPrivilegeCardBtn.ts",
    "./ItemStoreMenuBtn.ts",
    "./ItemSurveyRewardMenuBtn.ts",
    "./ItemPeriodStage.ts",
    "./ItemTaskReward.ts",
    "./PopupChooseReward.ts",
    "./PopupReward.ts",
    "./ItemHelp.ts",
    "./ItemNotice.ts",
    "./PopupCdKey.ts",
    "./PopupHelp.ts",
    "./PopupNotice.ts",
    "./PopupSetting.ts",
    "./UIAbout.ts",
    "./ItemStage.ts",
    "./ItemStagePoint.ts",
    "./ItemVipRight.ts",
    "./PopupVip.ts",
    "./ItemMessage.ts",
    "./PopupMessage.ts",
    "./ItemMoonGift.ts",
    "./MoonGiftOptionReward.ts",
    "./PopupMoonGift.ts",
    "./PopupMoonGiftSelectOptionReward.ts",
    "./ItemPeriodicGift.ts",
    "./ItemPeriodicGiftReward.ts",
    "./PeriodicGiftChest.ts",
    "./PopupPeriodicGift.ts",
    "./PopupPeriodicGiftInfo.ts",
    "./PilotIcon.ts",
    "./PilotRedDot.ts",
    "./PilotSeatComponent.ts",
    "./UIPilot.ts",
    "./PopupContinueSign.ts",
    "./PopupMoonSign.ts",
    "./PopupSevenSign.ts",
    "./SignItem.ts",
    "./TreasureSignItem.ts",
    "./ComponentAddedDesktop.ts",
    "./ComponentAddedMiniProgram.ts",
    "./PopupActionAward.ts",
    "./PopupBagFull.ts",
    "./PopupBagShortcutSale.ts",
    "./PopupNBag.ts",
    "./PopupNBagItem.ts",
    "./PopupNBagResItem.ts",
    "./PopupWareMaterials.ts",
    "./PopupWareMaterialsItem.ts",
    "./PopupPowerLess.ts",
    "./PopupSweepInfo.ts",
    "./TipShow.ts",
    "./PopupBuyWithDiamond.ts",
    "./PopupBuyWithPvpCoin.ts",
    "./PopupMessageBossTicket.ts",
    "./PopupMessageBox.ts",
    "./ItemEndlessCupInfo.ts",
    "./PopupEndlessCupJoin.ts",
    "./PopupEndlessCupRank.ts",
    "./PopupBuyEnergy.ts",
    "./PopupFirstRecharge.ts",
    "./PopupIdleBonus.ts",
    "./PopupQuickIdleBonus.ts",
    "./PopupPilotChooseItem.ts",
    "./PopupPilotChooseList.ts",
    "./PopupPilotDetails.ts",
    "./PopupPilotExplain.ts",
    "./PopupPilotPreview.ts",
    "./PopupPrivilegeCard.ts",
    "./PopupStageFightDetails.ts",
    "./PopupUnlockStage.ts",
    "./PopupDiamondRecharge.ts",
    "./PopupFundRecharge.ts",
    "./PopupSurvey.ts",
    "./PopupGainWareSkinInfo.ts",
    "./PopupMixLuckyExplain.ts",
    "./PopupWareDetails.ts",
    "./WareDetailShortcutItem.ts",
    "./ItemHandbook.ts",
    "./PopupHandbookInfo.ts",
    "./ItemProbInfo.ts",
    "./NTreasureHunt.ts",
    "./NWheel.ts",
    "./NWheelItem.ts",
    "./PopupTreasureProbInfo.ts",
    "./PopupWheelProbInfo.ts",
    "./UITreasureWheel.ts",
    "./WheelRefreshInfo.ts",
    "./UIStore.ts",
    "./ComponentStoreFund.ts",
    "./ComponentStoreGiftBag.ts",
    "./StoreGiftBagItem.ts",
    "./ComponentStoreMall.ts",
    "./StoreMallFreeItem.ts",
    "./StoreMallMoneyItem.ts",
    "./StoreMallSale.ts",
    "./StoreMallStageItem.ts",
    "./ComponentStoreRecharge.ts",
    "./StoreRechargeItem.ts",
    "./TestData.ts",
    "./FadeOutTips.ts",
    "./RewardTips.ts",
    "./PopupTreasureInfo.ts",
    "./ComponentUpgradeAdvanceTips.ts",
    "./ComponentWareAdvance.ts",
    "./ComponentWareMix.ts",
    "./ComponentWareSplit.ts",
    "./ComponentWareUpgrade.ts",
    "./PopupRemouldExplain.ts",
    "./UIWareEnhance.ts",
    "./UIWareHouse.ts",
    "./UIWareSkin.ts",
    "./UIWareSkinItem.ts",
    "./WareSkinBgExhibition.ts",
    "./WareSkinRedDot.ts",
    "./CancelButtonPress.ts",
    "./IRedDotMonitor.ts",
    "./PerformanceDebug.ts",
    "./TimeStringType.ts",
    "./TypeScriptTool.ts",
    "./Weighted.ts",
    "chunks:///_virtual/MapMgr.ts",
    "d608djpkCZP3ZbqYXIo4WFv",
    "chunks:///_virtual/MarsActivationRequestData.ts",
    "50e09ugeihNw4a8z/X0HpvN",
    "MarsActivationRequestData",
    "UpCmdMarsActivation",
    "chunks:///_virtual/MarsDeactivationRequestData.ts",
    "e6875zG6vZJCbYtdlIX/IsI",
    "MarsDeactivationRequestData",
    "UpCmdMarsDeactivation",
    "chunks:///_virtual/MenuBtnControl.ts",
    "ac8b2WsAR9LP4ei9J3f5z5m",
    "MenuBtnControl",
    "itemMenuBtns",
    "chunks:///_virtual/Message.ts",
    "269edG98pNFLrxAJbXU2ywm",
    "MessageType",
    "Notice",
    "World",
    "Length",
    "MessageTapType",
    "CannotGain",
    "HasGain",
    "WorldMessageType",
    "TopMsg",
    "NormalMsg",
    "chunks:///_virtual/MessageBox.ts",
    "31757vzYf5DaopELyptZTa/",
    "MessageBox",
    "UnableToClose",
    "CloseX",
    "chunks:///_virtual/MessageData.ts",
    "7bc9chnSJ9CK6rXPN6CJMHq",
    "chunks:///_virtual/MessageMgr.ts",
    "NoticeMessageData",
    "WorldMessageData",
    "SysmsgItemRequestData",
    "e1500QXOBRMUKRCCNi69OoG",
    "_messageMap",
    "_messageTapMap",
    "_lastNoticeMessageId",
    "_lastEnergyMessageId",
    "_lastSystemMessageId",
    "_lastWorldMessageId",
    "_curSystemMessageIdList",
    "_energyDotBasePath",
    "_helpDotBasePath",
    "_systemDotBasePath",
    "_showMessage",
    "clearTree",
    "lastNoticeMessageId",
    "lastEnergyMessageId",
    "lastSystemMessageId",
    "lastWorldMessageId",
    "addNoticeMessages",
    "addEnergyMessages",
    "DailySendEnergyNum",
    "fnick",
    "addSystemMessages",
    "sysname",
    "addWorldMessages",
    "beginTime",
    "setHelpMessages",
    "雷霆玩家",
    "gainM1",
    "helpGoldHasGainToday",
    "helpGoldMaxGainToday",
    "getMessageListByMessageTapType",
    "getMessageList",
    "showPopupMessage",
    "sendAidInvitationListRequest",
    "sendSysmsgItemRequestData",
    "sendGainAidRewardRequest",
    "checkAllRewardMessageNum",
    "checkRewardMessageNumByType",
    "helpGoldHasGainThisTime",
    "getAddCoin",
    "invitations",
    "chunks:///_virtual/MgrBase.ts",
    "4f92a2mAXVFPIiz2X+4ef+U",
    "schedules",
    "unschedule",
    "unUpdateAllSelfFunc",
    "delayCallByRealTime",
    "chunks:///_virtual/MilestoneItem.ts",
    "a7d33cDMmxPdJfaTF5cCkO7",
    "MilestoneItem",
    "spr",
    "onItemTurn",
    "chunks:///_virtual/MiniGameBtn.ts",
    "f8ee9cYdXtE+IrrgdPV8Nwd",
    "popupCount",
    "checkMiniGameButtonVisible",
    "isShowLoading",
    "getVisiblePopupCount",
    "chunks:///_virtual/MixRequestData.ts",
    "2133dCmPDhNRa7kmUqZukv/",
    "UpCmdMix",
    "chunks:///_virtual/ModuleRequestData.ts",
    "f2064Sx9OVNXrJqOHN1Xl+x",
    "UpCmdModule",
    "chunks:///_virtual/MoonBonusInfoRequsetData.ts",
    "71d6djV0rhMoJM86Y/Q+6c8",
    "MoonBonusInfoRequsetData",
    "isRefresh",
    "UpCmdMoonBonusInfo",
    "chunks:///_virtual/MoonGift.ts",
    "dcf69jQDaFPqKpvkmj3RBS5",
    "MoonGiftRewardStateType",
    "chunks:///_virtual/MoonGiftActivityData.ts",
    "MoonGiftRewardData",
    "4e62fP+sp1EXo6LxIh+a+0p",
    "MoonGiftActivityData",
    "rewardDataMap",
    "curRewardId",
    "getRewardData",
    "getNextRewardData",
    "getNextRewardDataId",
    "getAllRewardData",
    "setServerData",
    "minRewardIndex",
    "maxRewardIndex",
    "curRewardIndex",
    "curShowMaxRewardIndex",
    "chunks:///_virtual/MoonGiftGainRewardRequestData.ts",
    "4a7fe6WXahNnaN/Yq9rGoou",
    "MoonGiftGainRewardRequestData",
    "rewardId",
    "UpCmdMoonGiftGainReward",
    "chunks:///_virtual/MoonGiftInfoRequestData.ts",
    "2ffcfw7b19PgaqyxfRvRGc+",
    "MoonGiftInfoRequestData",
    "UpCmdMoonGiftInfo",
    "chunks:///_virtual/MoonGiftMainData.ts",
    "b283dBrnD9Cf4ocRb9RFEES",
    "MoonGiftMainData",
    "_dataMap",
    "getAllData",
    "getActivityData",
    "chunks:///_virtual/MoonGiftMgr.ts",
    "PayMgr",
    "3fba8kQhJJBsLPEsRX52UHe",
    "_curGainActivityId",
    "_curGainRewardId",
    "_gainRewardCallback",
    "onCostEnergy",
    "refreshRedPoint",
    "selectIndex",
    "gainReward",
    "pay",
    "getMoonOptionRewards",
    "getPayData",
    "moonGiftActivityId",
    "moonGiftRewardId",
    "curShowRewardId",
    "chunks:///_virtual/MoonGiftOptionReward.ts",
    "4d81fGKENdC6pG+k7dFLT6h",
    "MoonGiftOptionReward",
    "clickNode",
    "touchTime",
    "onBtnSelectClick",
    "onOptionRewardClick",
    "chunks:///_virtual/MoonGiftOptionRewardData.ts",
    "58942LCagtDXrKMoeSqUnYj",
    "MoonGiftOptionRewardData",
    "chunks:///_virtual/MoonGiftReward.ts",
    "0d91cHt37NL3oh8fML7YwBs",
    "optionNode",
    "optionNotSelectNode",
    "optionSelectedNode",
    "_itemMoonGift",
    "_optionData",
    "refreshOptionReward",
    "onBtnOptionRewardClick",
    "PopupMoonGiftSelectOptionReward",
    "chunks:///_virtual/MoonGiftRewardData.ts",
    "2bec80/N5NA4512feWkdLdr",
    "chunks:///_virtual/MoonGiftRewardPayData.ts",
    "c187cUkF6VN9p7yqgeZxsTP",
    "MoonGiftRewardPayData",
    "setMoonGiftRewardId",
    "setMoonGiftActivityId",
    "getPurchaseData",
    "chunks:///_virtual/NAdvanceConsume.ts",
    "985adVqrwRIpLy+e7fOcG9c",
    "NAdvanceConsume",
    "specialConsume",
    "levelFinish",
    "consumeMoney",
    "consumeRmb",
    "advanceBaseConsumesArray",
    "create item attr fail!",
    "getItemsWithDiviser",
    "chunks:///_virtual/NArmorData.ts",
    "a9e16hx0/ZOfqRtBFAMeB+n",
    "NArmorData",
    "dodgeRate",
    "criticalRate",
    "hitRate",
    "ParryRate",
    "skillStr",
    "advanceConsumes",
    "health",
    "healthAddPercent",
    "defense",
    "defenseAddPercent",
    "armorSkillIDs",
    "scoreBonusAdd",
    "goldBonus",
    "goldBonusAdd",
    "advanceSpecialConsumesArray",
    "setMarsID",
    "getMainAddsValue",
    "getAddGoldBonus",
    "getHealthValue",
    "getRarity",
    "SKILL_LESS_HURT",
    "SKILL_UNREDUCE_UPGRADE",
    "SKILL_ADDHP_MORE",
    "SKILL_DONT_HURT_TO_DIE",
    "SKILL_CTP",
    "SKILL_ADDHP_ALL_THE_TIME",
    "SKILL_EXTRA_SHIELD_TIME",
    "SKILL_HP_FOR_ATTACK",
    "SKILL_ENERGY_TRANS",
    "SKILL_CRYSTAL_HP",
    "chunks:///_virtual/NBag.ts",
    "GuildDonateType",
    "7301dZkx79JCavYu0KLtpvD",
    "NBag",
    "sets",
    "getWeaponSet",
    "getArmorSet",
    "getPropSet",
    "getGiftSet",
    "getWheelEffectSet",
    "getDrugSet",
    "getExpandSet",
    "getLootSet",
    "getReadySet",
    "getBoxSet",
    "getMoneySet",
    "getKeySet",
    "getMaterialSet",
    "getPilotChipSet",
    "getItemSet",
    "getBagSet",
    "getResourceSet",
    "getResourceBaseDatas",
    "getItemBaseData",
    "getMatericalBaseDatas",
    "getGuildDonateSet",
    "kGuildDonate_money",
    "kGuildDonate_equip",
    "donateNum",
    "getAdvanceMaxStarByStarID",
    "kGuildDonate_brilliance",
    "kGuildDonate_key",
    "kGuildDonate_material",
    "getItemBaseDatas",
    "getEquipItemIndex",
    "[BagItem] error! can't find item, indexInBag:",
    "getItemCount",
    "getKeyItem",
    "getBestItem",
    "itemID : ",
    ", sortID : ",
    ", starID : ",
    ", level : ",
    ", num : ",
    "getRewardStrNum",
    "获得道具[武器：",
    "]，道具ID：",
    "，品质ID：",
    "，经验：",
    "，唯一标识：",
    "获得道具[机体：",
    "获得道具[僚机：",
    "获得道具[装甲：",
    "获得道具[道具：",
    "获得道具[礼包：",
    "获得道具[经验：",
    "获得道具[喇叭：",
    "获得道具[药品：",
    "获得道具[格子：",
    "获得道具[掉落：",
    "获得道具[补给：",
    "获得道具[扭蛋：",
    "获得道具[货币：",
    "获得道具[钥匙：",
    "获得道具[进阶材料：",
    "获得道具[驾驶员碎片：",
    "addItemBagItem",
    "getItemAttr",
    "removeItems",
    "removeReadys",
    "removeItemItemID",
    "remove item:",
    " leftNum:",
    "removeItemByItem",
    "isAccumulativeBySortID",
    "已满级",
    "战神没激活",
    "材料不够",
    "不可升级",
    "等级不满",
    "钱不够",
    "进阶等级不够",
    "不可进化",
    "sortByQuality",
    "sortByLevel",
    "sortByWorthMoney",
    "getWorthMoney",
    "sortByItemID",
    "sortBySortID",
    "sortByItemIDAndSortID",
    "getAutoSelectUpgradeConsumeBagItems",
    "aux",
    " sum:",
    " val:",
    "isOwnEquip",
    "getShortcutSaleExtraItems",
    "isQuickSale",
    "isCanShortcutSaleExtra",
    "chunks:///_virtual/NBoxData.ts",
    "18a8c5qA15LJp4Zo490dEHb",
    "NBoxData",
    "chunks:///_virtual/NDrugData.ts",
    "893afH2LdVN8YBymx5ILRqN",
    "NDrugData",
    "saleMoney",
    "useType",
    "parameter",
    "chunks:///_virtual/NEngineData.ts",
    "9e38cgFmYJMeZ0FrP9X1nFa",
    "NEngineData",
    "attackAddPercent",
    "crazyID",
    "amFileName",
    "imageFileName",
    "shootAmStr",
    "shootImageStrs",
    "shootDX",
    "shootDY",
    "destoryBlastType",
    "energyMoveSpeed",
    "imageFilePath",
    "getAttackValue",
    "chunks:///_virtual/NEngineSkinData.ts",
    "279b6yvWIJPJLwTuGlGCbva",
    "chunks:///_virtual/NetAddGoods.ts",
    "05f69uKj7FGGZyK7Lsx+D44",
    "chunks:///_virtual/NetClient.ts",
    "NetProtocolType",
    "NetErrorType",
    "NetError",
    "NetConstant",
    "2cdc7rpp1RNDaZuky5SH0jg",
    "NetClient",
    "zone",
    "handlers",
    "isInit",
    "connections",
    "initConnections",
    "You should override DoInit function and create connections",
    "clearHandler",
    "setZone",
    "setPaused",
    "clearAllConnections",
    "connectionType",
    "sendLogin",
    "Login",
    "Direct",
    "NetClient.Send Error! Cannot Find Connection Of Type:",
    "createWithProtocol",
    "Can not find connection of type ",
    "NetClientError",
    "createRequest",
    "isShowConnect",
    "onAuthSuccess",
    "net_error",
    "WChat",
    "isShowLog",
    "NetClient.handleNetError:",
    "chunks:///_virtual/NetClientClover.ts",
    "NetConnectionCloverFront",
    "NetConnectionCloverLogin",
    "11475352AZFU5ECW3gM8WXF",
    "chunks:///_virtual/NetCmdEnum.ts",
    "68a8e5rnqdADb4J+JmrnOSX",
    "UpCmdNone",
    "DownCmdNone",
    "UpCmdTest",
    "UpCmdOwnLogin",
    "UpCmdUpgrade",
    "UpCmdSell",
    "UpCmdSendGoods",
    "UpCmdUseItem",
    "UpCmdPveGameEnd",
    "UpCmdSysmsgItem",
    "UpCmdSendEnergy",
    "UpCmdUnlockPve",
    "UpCmdRandData",
    "UpCmdQqLogin",
    "UpCmdQqShare",
    "UpCmdQqGetBalance",
    "UpCmdRecharge",
    "UpCmdRandomSupply",
    "UpCmdPlayerLogout",
    "UpCmdReportRechargeFail",
    "UpCmdUseSupply",
    "UpCmdSecRoundStartData",
    "UpCmdSecRoundEndData",
    "UpCmdSecRoundEndCountData",
    "UpCmdRechargeMoney",
    "UpCmdPveGame1",
    "UpCmdTopBulletin",
    "UpCmdSplit",
    "UpCmdSingleGuide",
    "UpCmdPullback",
    "UpCmdTurnTableShow",
    "UpCmdTurnTableBuy",
    "UpCmdPilotMix",
    "UpCmdPilotUpgrade",
    "UpCmdPilotAdvance",
    "UpCmdPilotReplace",
    "UpCmdTurnTableLastRefreshTime",
    "UpCmdRogueShow",
    "UpCmdRogueBuy",
    "UpCmdRogueLastRefreshTime",
    "UpCmdPeriodPkData",
    "UpCmdUnlockPveHero",
    "UpCmdSweep",
    "UpCmdQueryPVPMatch",
    "UpCmdPVPShopShow",
    "UpCmdPVPShopBuy",
    "UpCmdPVPShopLastRefreshTime",
    "UpCmdNewbieBonusInfo",
    "UpCmdGainNewbieBonus",
    "UpCmdRandomAidFriendList",
    "DowCmdBuyStoreStage",
    "UpCmdPlaceOrder",
    "UpCmdRechargeM2",
    "UpCmdSetClientData",
    "UpCmdSetInfo",
    "DownCmdSetInfo",
    "DownCmdBuyStoreFirst",
    "DownCmdGainStoreFirst",
    "UpCmdStoreFirstInfo",
    "UpCmdFundInfo",
    "UpCmdTreasureHunt",
    "UpCmdPrivilegeCardInfo",
    "UpCmdStorePeriodInfo",
    "UpCmdWxMiniLogin",
    "UpCmdPveRewardDouble",
    "UpCmdSetClientVars",
    "DownCmdSetClientVars",
    "UpCmdPeriodicGiftInfo",
    "UpCmdPeriodicGiftGainReward",
    "UpCmdPostLogin",
    "DownCmdPostLogin",
    "UpCmdQueryOrder",
    "UpCmdRemovePlayer",
    "S_DELETE_INFO_RET",
    "UpCmdRegCnt",
    "chunks:///_virtual/NetConnection.ts",
    "ConnectionState",
    "NetErrorHandleType",
    "SendState",
    "ConnectionImplType",
    "fdf5faarAFLxK2VrjNXlW6K",
    "NetConnection",
    "requestSequence",
    "connectionSequence",
    "connectTimeout",
    "DEFAULT_CONNECT_TIMEOUT",
    "implType",
    "_connectionType",
    "connectionState",
    "Closed",
    "connectCallback",
    "staticConnectCallback",
    "disconnectCallback",
    "sendRequestCallback",
    "sendState",
    "requests",
    "curRequest",
    "loginUpData",
    "address",
    "backupAddress",
    "isUsingBackupUrl",
    "timeoutElapsed",
    "isDoHeartbeat",
    "heartbeatInterval",
    "heartbeatSendTimestamp",
    "heartbeatSendSequence",
    "heartbeatRecvSequence",
    "heartbeatTimeoutThreshold",
    "_isAutoReconnect",
    "isReconnecting",
    "reconnectLeftTime",
    "reconnectRetryTime",
    "reconnectFailFlag",
    "reconnectSequence",
    "reconnectTips",
    "isPaused",
    "_isStrictMode",
    "ping",
    "getRequests",
    "isStrictMode",
    "setReconnectTips",
    "resetSequence",
    "setAddress",
    "setUrl",
    " SetAddress:",
    "setNetStateEnabled",
    "isNetStateEnabled",
    "recordTransferData",
    "setConnectionState",
    " SetConnectionState ",
    "resetReconnect",
    "Connecting",
    "connectInternal",
    "sendLoginRequest",
    "Connected",
    "Reconnecting",
    "Disconnecting",
    " connectionSequence:",
    "disconnectInternal",
    "updateConnectionState",
    "protocolType",
    "isReconnect",
    " connect because of request in the queue:",
    "无法与服务器取得联系",
    "ConnectionAttemptFail",
    "handleType",
    "Reconnect",
    "getNetError",
    "LOGIN_TIMEOUT",
    " 因心跳超时而断开连接",
    "createWithRequest",
    "连接超时，请稍后再试~",
    "HeartBeatTimeout",
    "setHandleType",
    "sendHeartBeatRequest",
    "sendQueueInternal",
    "RECONNECT_INTERVAL",
    "isConnected",
    "setStaticConnectCallback",
    "setSendRequestCallback",
    "connect",
    "AddressInvalid",
    "ShowMsg",
    "服务器地址错误",
    " call connect while connectionState is {this.connectionState}",
    "onConnectFinish",
    " call OnConnectFinish while connectionState is ",
    "onDisconnectFinish",
    " call Disconnect while connectionState is ",
    "clearFirstReconnectDataRequest",
    "decreaseRequestSequence",
    "Heartbeat",
    "setDoHeartbeat",
    "createRequestInternal",
    "createLoginRequest",
    "processRequestSyncProperty",
    "sendInternal",
    "recvLoginResponse",
    "onLoginFinish",
    "createHeartBeatRequest",
    "isSync",
    "recvHeartbeatResponse",
    "getHeartbeatSequence",
    "isSyncRequest",
    "You should not send Login request by calling 'Send' function, they would be handled by NetConnection.",
    "setSendState",
    "matchProtocol",
    "Busy",
    " Send:",
    "sendInternalImpl",
    "handleRawResponse",
    ".HandleResponse with diff connectionSequence, responseConSeq:",
    "\n                    , conSeq:",
    ", response:\n",
    "isSyncResponse",
    "recv",
    ".HandleNetError with diff connectionSequence, requestConSeq:",
    ", error:\n",
    "\nrequest:",
    "isMatchHandleType",
    "Resend",
    "\\[(-?\\d+)-(\\d+)\\]$",
    "exec",
    "addHandleType",
    "Disconnect",
    "KickToLogin",
    " Recv:",
    "setHeartbeatParam",
    "setIsAutoReconnect",
    "isShowReconnectDetailTip",
    "switchToBackupUrl",
    "NetConnection ",
    " fail sending data to url:",
    ", switch to backupUrl:",
    "recordAffectedRequest",
    "requestProtocol",
    "AutoReconnect",
    "\n尝试重新连接...",
    "NetConnection.getNetError HeartBeat:",
    "isAutoReconnect",
    "reconnect failed, drop request:",
    "toStringWithoutColor",
    "hasShowConnectRequest",
    "ShowFloatMsg",
    "HideNetLoading",
    "手动重连中...",
    "重连中",
    "连接断开，重连中...",
    "DropRequest",
    "dropRequest",
    "getTimestampOffset",
    "dropRequest:",
    " at ",
    "chunks:///_virtual/NetConnectionCloverFront.ts",
    "PtType",
    "NetConnectionCloverHttp",
    "8e045DDJZVEjr0V08ZsXZwg",
    "WeiXin",
    "getOpenId",
    "serverId",
    "wxOpenId",
    "registered",
    "FRONT_HEART_INTERNAL_SECS",
    "FRONT_HEART_TIMEOUT_SECS",
    "chunks:///_virtual/NetConnectionCloverHttp.ts",
    "NetConnectionHttp",
    "NetRequestClover",
    "NetResponseClover",
    "b7180fO9txCIaGK49w9+sYM",
    "createResponse",
    "chunks:///_virtual/NetConnectionCloverLogin.ts",
    "da0e7UxLMJLM6gWbZCi69OD",
    "chunks:///_virtual/NetConnectionHttp.ts",
    "NetEncodeType",
    "NetUtils",
    "7f749Zex4BCibFV94rtLbz7",
    "curWebRequest",
    "Http",
    "http://",
    "Abort Request, curRequest:",
    "HTTP_TIMEOUT_SECS",
    "fullUrl",
    " onreadystatechange with another tag:",
    "  this.tag:",
    "encodeType",
    "Json",
    "isEncrypt",
    "数据解析错误: ",
    "，请点击确定后修复并重启游戏",
    "handleRawData",
    " http invalid status:",
    " statusText:",
    "statusText",
    " tag:",
    " request:",
    "网络异常[",
    "HttpError",
    "onerror",
    " http onerror, request:",
    "ClientNetworkError",
    "ServerNetworkError",
    " http onerror, error handled request:",
    " http ontimeout, request:",
    " http ontimeout, error handled request:",
    "getSendData",
    "Content-Type",
    "responseType",
    "application/octet-stream",
    "arraybuffer",
    "chunks:///_virtual/NetConstant.ts",
    "a996e5p3fZKRaMSLgRgCtZc",
    "NetConstantData",
    "CLIENT_REQUEST_HEAD_VERSION",
    "CLIENT_REQUEST_BODY_VERSION",
    "REPORT_HEART_INTERNAL_SECS",
    "GAME_HEART_INTERNAL_SECS",
    "GAME_HEART_TIMEOUT_SECS",
    "chunks:///_virtual/NetEnum.ts",
    "c7604EAsv5KULLsGo73zYLy",
    "NetEnum",
    "WebSocket",
    "StandaloneMod",
    "ConnectionTimeout",
    "ConnectionLose",
    "CrcFail",
    "ServerException",
    "DecodeError",
    "LoginError",
    "InactiveConnection",
    "Reconnection",
    "HandleDataException",
    "MissingTssData",
    "KickToIndex",
    "ShowUncloseableMsg",
    "LeaveRoom",
    "JumpToStore",
    "ProtoBuf",
    "Ios",
    "Guest",
    "chunks:///_virtual/NetError.ts",
    "NetErrorCode",
    "3da06IZFFxB5YK53D8XKM9W",
    "retCode",
    "retErrorMsg",
    "handleParams",
    "affectedRequests",
    "setHandleDatas",
    "handleTypeDic",
    "errorCode",
    "[网络异常] type:",
    " connectionType:",
    " protocol:",
    " errorMsg:",
    " retCode:",
    " handleType:",
    "createWithStateMsg",
    "createWithResponse",
    "setHandleTypeByNumberValue",
    "ErrorSequence",
    "SessionInvalid",
    "isAffectRequest",
    "chunks:///_virtual/NetErrorCode.ts",
    "39bc5AjrF9OprwCY/jUkpwH",
    "Success",
    "SystemError",
    "DecryptError",
    "DataExpired",
    "DataAlreadyHandled",
    "BattleCheat",
    "ParamError",
    "ParamInvalid",
    "OnlineStageStateError",
    "OfflineStageStateError",
    "chunks:///_virtual/NetErrorHandleData.ts",
    "f9271uA7rJCwIZLOTsNX1E8",
    "NetErrorHandleData",
    "chunks:///_virtual/NetHandleClover.ts",
    "PeriodPkDataRequestData",
    "SendGoodsRequestData",
    "RewardType",
    "RandomAidFriendListRequestData",
    "RechargeRequestData",
    "OperateActivityData",
    "UpCmdFundInfoRequestData",
    "StoreFirstInfoRequestData",
    "UpCmdTreasureHuntRequesetData",
    "TreasureHuntData",
    "PrivilegeCardInfoRequestData",
    "StorePeriodInfoRequestData",
    "NoticeData",
    "NewbieBonusInfoRequsetData",
    "PeriodicGiftInfoRequestData",
    "PeriodicGiftMainData",
    "a046e5amz1FPYhIyElqdRsr",
    "isNeedRefreshTop",
    "normalGoods",
    "bossGoods",
    "_isRefreshIndex",
    "_isRefreshDaily",
    "_refreshIndexCallback",
    "_pipeline",
    "onFrontSendRequest",
    "refreshDaily",
    "Net",
    "onFrontRecvRequest",
    "getAddDiamond",
    "getAddPvpToken",
    "getBossAddItems",
    "setItemMoneyData",
    "refreshTopUI",
    "sendIndexRequest",
    "sendBestHistoryRequest",
    "sendPrivilegeCardInfoRequest",
    "createNewPipeline",
    "sendAllPlayerRequest",
    "sendEnergyRequest",
    "sendStoreFirstInfoRequest",
    "sendUpCmdFundInfoRequestData",
    "sendStorePeriodInfoRequest",
    "fetchNoticeNews",
    "sendSignInfoRequestData",
    "sendDailyInfoRequestData",
    "sendPeriodicGiftInfoRequest",
    "sendMoonBonusInfoRequestData",
    "sendMoonGiftInfoRequest",
    "sendBattleArrayRequest",
    "sendHeroPkDataRequest",
    "sendBossPkDataRequest",
    "sendPeriodPkDataRequest",
    "pipelineFlow",
    "refreshIndexData",
    "refreshIndex",
    "MoonIsStart",
    "loadNewsDataFromCdn",
    "sendGMData",
    "rewardData",
    "flushData",
    "battle_array",
    "b_location",
    "heroStage",
    "heroSubstage",
    "sendRechargeRequest",
    "balance",
    "genBalance",
    "获取数据失败",
    "[NetHandleClover] 自动重连中，不处理网络异常",
    "freeAddResourceAndGoods",
    "handleKickOutResponse",
    "handleSpecialError",
    "[NetHandleClover] handleResponse handleSpecialError 讲道理，不应该走到这 \n ",
    "toStringWithColor",
    "setServerTime",
    "responseTime",
    "handleDownData",
    "giftMsgs",
    "sysMsgs",
    "sysBulletin",
    "playerPo",
    "pvp_coin",
    "setPackUsed",
    "pack_used",
    "setPackCapability",
    "pack_capability",
    "setPower",
    "zhanli",
    "setHeadUrl",
    "head_url",
    "equipSkins",
    "moduleMap",
    "getShopModulesByItemDataAndNum",
    "payTest",
    "nums_limit",
    "checkCleanStr",
    "stageState",
    "initNextStage",
    "bossTicketPrizeNormals",
    "bossTicketPrizeSpecials",
    "bossPkCost1",
    "bossPkCost2",
    "gainedAidReward",
    "aidRewardLimit",
    "dailyTaskPo",
    "nums",
    "flags",
    "checkRewardCurDoing",
    "rewardStatePo",
    "doing",
    "checkRewardFinished",
    "finished",
    "collect",
    "checkRewardProgress",
    "updateRewardDoing",
    "checkAllRewardRedDot",
    "thisWeekData",
    "无尽本周最高分：",
    "vipRechargeRmb",
    "vipRecharge",
    "checkVipGiftState",
    "vipFirstPrize",
    "checkVipRedDot",
    "loadEndlessDoubleGoldActivityData",
    "setRechargeData",
    "recharges",
    "setStoreMallData",
    "storeFrees",
    "setStoreMallStageData",
    "storeStages",
    "setPilotData",
    "allPilots",
    "pilotUpgradeM1Num",
    "setWheelData",
    "turnTableFunctionSwitch",
    "turnTableGoods",
    "turnTableRefreshSwitch",
    "battleArrayPo",
    "unlockId",
    "setTodayTime",
    "setStarNum",
    "setUnlockStageID",
    "subStage",
    "dailyNum",
    "initBossStage",
    "setBossPass",
    "subId",
    "setBossLeftTime",
    "remains",
    "setBossTicketNum",
    "setBossTicketBuyNum",
    "dailyBuyNum",
    "bossLootRates",
    "bossOptLootRates",
    "showVars1",
    "showVars2",
    "clearPeriodData",
    "setPeriodTimes",
    "setPeriodOpen",
    "isOpen",
    "refreshPeriodRedDot",
    "openState",
    "stages",
    "setPeriodDayData",
    "[NetHandleClover] 删除无尽世界竞赛战斗结果：",
    "发送完成",
    "friendsBaseInfo",
    "lastScoreData",
    "endlessValueLastWeek",
    "highestScoreData",
    "无尽 | 历史最高分：",
    " | 上周最高分：",
    "aidersBaseInfo",
    "consumes",
    "aidSeconds",
    "activityScoreBonus",
    "activityConsumes",
    "activityAidSeconds",
    "helpCount",
    "好友UID：",
    "，当日协助次数：",
    "isKnowEndlessHighest",
    "quickGainCnt",
    "quickFreeCnt",
    "quickAdCnt",
    "setFundDatas",
    "funds",
    "setStoreFirstData",
    "storeFirsts",
    "refreshStoreFirstRedDot",
    "setTreasureHuntData",
    "explores",
    "setCardInfo",
    "privilegeCards",
    "setStorePeriodsData",
    "firstSend",
    "invite",
    "inviteRewardState",
    "regDeadline",
    "milestone",
    "decadeUniteSkinDataIndex",
    "dailyTasks",
    "setSignData",
    "setContinueSignData",
    "activityDatas",
    "setMoonSignData",
    "responseState",
    "refreshHighestEndlessValue",
    "traceRemoveCurrency",
    "removeResourceAndGoods",
    "checkResourceAndGoods",
    "checkChangeValues",
    "trackAddCurrency",
    "addResourceAndGoods",
    "current_coin",
    "current_diamond",
    "checkResponsePayData",
    "netReduceGoods",
    "shop_index",
    "shop_item",
    "shop_num",
    "token_consume",
    "reduceEnergy",
    "item_consume",
    "token_get",
    "item_get",
    "getRewardsStr",
    "reducePvpCoin",
    "reduceFriendPower",
    "reduceBossTicket",
    "getBossTicketNum",
    "reduceBossTicketBuy",
    "getBossTicketBuyNum",
    "reducePeriodTimes",
    "获得：",
    "金币 x ",
    "钻石 x ",
    "PVP代币 x ",
    "体力 x ",
    "仓库格数 x ",
    "好友度 x ",
    " x ",
    "gainStr : ",
    "获得资源/物品字符串：",
    "addResourceAndGoodsContent",
    "普通资源/物品字符串：",
    "boss掉落资源/物品字符串：",
    "改变数据：",
    "changeValueContent",
    "daily_task",
    "有个活跃度完成",
    "有新的奖励可领取",
    "rewardType",
    "MarsFunctionAvaliable",
    "showRewardTips",
    "ELIC",
    "addGoodsByNetAddGoods",
    "getPackCapability",
    "setUserProperties",
    "vip_level_up",
    "changeVipRechargeRmb",
    "responseContent",
    "[NetHandleClover] UIMgr处理了下行异常: cmdId:",
    " name:",
    "[NetHandleClover] handle response error with responseState:",
    "\n（点击确认，刷新游戏[",
    "closeAllPopup",
    "clearUIStack",
    "会话已失效",
    "\n点击确定请重新登录(",
    "\n点击确定返回登录(",
    "\n点击确定重新登录(",
    "chunks:///_virtual/NetHandler.ts",
    "4ad82U2Ay1OsrDhj/Uh88Hj",
    "NetHandler",
    "chunks:///_virtual/NetMgr.ts",
    "PveGameEndRequestData",
    "NextStageState",
    "GainItemShowType",
    "LoadingStep",
    "BgType",
    "ca903RprMtBpb0shk483tKg",
    "ST_IDLE",
    "sendPveEndRequest",
    "Rmb",
    "canShowRewardTips",
    "secondCnt",
    "fps",
    "bossCount",
    "shieldSecond",
    "scoreShieldSecond",
    "stormSecond",
    "stormTime",
    "endlessLoopCount",
    "engineDmgMax",
    "wingmanDmgMax",
    "getWeaponAttack",
    "weaponDmgMax",
    "enemiesPasserby",
    "enemiesSmall",
    "enemiesMid",
    "enemiesLarge",
    "enemiesPasserbyStorm",
    "enemiesSmallStorm",
    "enemiesMidStorm",
    "enemiesLargeStorm",
    "enemiesPasserbyScore",
    "enemiesSmallScore",
    "enemiesMidScore",
    "enemiesLargeScore",
    "bossSmall",
    "bossLarge",
    "bossSmallScore",
    "bossLargeScore",
    "m1Small",
    "m1Mid",
    "m1Large",
    "m1SmallScore",
    "m1MidScore",
    "m1LargeScore",
    "comboTotalNum",
    "comboSign",
    "comboScore",
    "comboSignScore",
    "flameTime",
    "ashTime",
    "totalDashTime",
    "isRandomBossKill",
    "enterWormholeNum",
    "aidTime",
    "boomATK",
    "improperDs",
    "dsArr",
    "removeReadysMethods",
    "HeroModeCostEnergyReduce",
    "removeEnergyMethods",
    "removeBossTicketMethods",
    "removeBossTicketBuyMethods",
    "removePeriodTimeMethods",
    "setMainPageLoadingStep",
    "Scene",
    "MainPage",
    "MainScene",
    "clearProgress",
    "quit",
    "nextStageState",
    "Cur",
    "getBossLeftTime",
    "setJustPassStage",
    "[NetMgr] before update stageData, battleMode:",
    ", stageID:",
    ", subStageID:",
    ", stageStar:",
    ", nextStageId:",
    ", nextSubStageId:",
    ", nextStageState:",
    "setJustPassStageWithStageId",
    "getTodayTime",
    "setStageInfo",
    "setNextStage",
    "[NetMgr] after update stageData, battleMode:",
    "RedDotWheel",
    "getEndlessDoubleGoldTimes",
    "setEndlessDoubleGoldTimes",
    "ST_SAFE_END_FIR",
    "ST_SAFE_END_SEC",
    "ST_BUY_BOMB_ING",
    "ST_BUY_REBORN_ING",
    "chunks:///_virtual/NetPackage.ts",
    "cc0f8JLmaNPSqHlrdCIIM62",
    "NetPackage",
    "zoneUrl",
    "_sequence",
    "protocol:%c",
    "%c(",
    "), url:",
    ", cmdId:",
    ", name: ",
    "\n        data: %c",
    "protocol:",
    "\n        data: ",
    "requestSuffix",
    "responseSuffix",
    "matchProtocol error, number protocol not handled",
    "Request",
    "Response",
    "VERSION",
    "chunks:///_virtual/NetReduceGoods.ts",
    "59fb7EEVHJPi5wKuWlSPFc4",
    "NetReduceGoods",
    "chunks:///_virtual/NetRequest.ts",
    "a0ae6BLlXdEja19JEEeK8Fe",
    "NetRequest",
    "resendCount",
    "operationTimestamp",
    "sendTimestamp",
    "%c[上行] %c",
    "[上行] ",
    "initWithUrl",
    "getContentDataCrc",
    "chunks:///_virtual/NetRequestClover.ts",
    "a4790XJ7XNN7Y3mIK8V3+Ea",
    "http://192.168.1.38:18080/p.f",
    "removeFriendPowerMethods",
    "removeCurrencyMethods",
    "encodeText",
    "chunks:///_virtual/NetResponse.ts",
    "1fc410UYR1Pgaw+rYFyZUXn",
    "NetResponse",
    "responseProtocol",
    "_isCrcCheckFail",
    "_isDecryptException",
    "%c[下行] %c",
    "[下行] ",
    "initWithJson",
    "setRequest",
    "handleRecvJsonData",
    "initRetCode",
    "initWithBytes",
    "handleRecvData",
    "isCrcCheckFail",
    "isDecryptException",
    "chunks:///_virtual/NetResponseClover.ts",
    "81775248CpLgK+sCbbVnDO/",
    "bodyLength",
    "byteNum",
    "crcCheckValue",
    "headLength",
    "isCrcRight",
    "m_oLogStr",
    "responseLockLength",
    "responseSequence",
    "responseSucceed",
    "responseVersion",
    "checkTenToTwo",
    "chunks:///_virtual/NetUtils.ts",
    "./env",
    "StreamWriter",
    "StreamReader",
    "StreamHelper",
    "DEV",
    "JSB",
    "9fcf2vFqidMi50l3DAjsc0b",
    "HandleRawData.Get ServerException Response:\n",
    "通讯数据解析失败",
    "通讯数据校验失败",
    "处理数据时遇问题\n",
    "stack",
    "解析数据时遇问题\n",
    "xorBytes",
    "VERIFY_LENGTH",
    "writeBytes",
    "MAGIC",
    "writeInt",
    "writeLong",
    "crc32FromUint8Array",
    "getRandomIntInclusive",
    "encryptData",
    "writeShort",
    "getBytes",
    "arrayCopy",
    "decrypt error, length must be at least ",
    " but got ",
    "readBytes",
    "decrypt error, magic not equal.",
    "readInt",
    "readLong",
    "readShort",
    "decryptData",
    "decrypt error, crc not equal, client:",
    " server:",
    "httpGetText",
    "COLOR_REQUEST",
    "color:LightPink",
    "COLOR_RESPONSE",
    "color:lightgreen",
    "COLOR_PROTOCOL",
    "color:khaki",
    "COLOR_DATA",
    "color:LightSkyBlue",
    "chunks:///_virtual/NetZone.ts",
    "268c3m67thMo5PsWpJaZfaX",
    "NetZone",
    "chunks:///_virtual/NewbieBonusInfoRequsetData.ts",
    "d2703h35jdJZYg26/Fz/1yq",
    "chunks:///_virtual/NewbieGainBonusRequsetData.ts",
    "278c0YOASNC9IfBs8FMKk7J",
    "NewbieGainBonusRequsetData",
    "chunks:///_virtual/NExpandData.ts",
    "08e80O43NhKwb4+PSyq+fiy",
    "NExpandData",
    "chunks:///_virtual/NExtraData.ts",
    "236c3o0lrFH8ZIgTGDFBpPQ",
    "NExtraData",
    "consumeExp",
    "chunks:///_virtual/NFriend.ts",
    "7a63cLALJ9GFKBgwlLwCWAH",
    "crown1Times",
    "crown2Times",
    "crown3Times",
    "endlessCup1Times",
    "endlessCup2Times",
    "endlessCup3Times",
    "endlessWorldPvpWinTimes",
    "isReceiveEnergy",
    "pilotDataArray",
    "planeStarID",
    "planeStarType",
    "platformID",
    "sex",
    "stageStr",
    "userInfoFetched",
    "checkFriendStageStr",
    "isFriendPullback",
    "infos",
    "NFriend friendBaseData : ",
    "printLogDescription",
    "pilotsOnBody",
    "getPilotBaseData",
    "highestScore",
    "firstPrizeNum",
    "secondPrizeNum",
    "thirdPrizeNum",
    "pvpNumsData",
    "eicRank",
    "pvpWin",
    "好友：",
    "，战力：",
    "，是否接受体力：",
    " 金杯：",
    "，银杯：",
    "，铜杯：",
    " planeStarID：",
    "，planeStarType：",
    "，pilotId：",
    "chunks:///_virtual/NGiftData.ts",
    "2b47fLfmlNEKqgpg4qzeYue",
    "NGiftData",
    "giftMoney",
    "giftRmb",
    "chunks:///_virtual/NGuild.ts",
    "fb289SaVDxAqYiDmLSb8k8m",
    "NGuild",
    "chunks:///_virtual/NItem.ts",
    "a940cnbvMZNZrvflGxqfB8s",
    "NItem",
    "marsPartOneIndexInBag",
    "marsPartTwoIndexInBag",
    "m_bSplitable",
    "m_pSplitData",
    "m_bMixable",
    "m_pMixRequire",
    "[NItem] can't find item[sortID:%d itemID:%d starID:%d level:%d]",
    "getItemDescribe",
    "getItemDesc",
    "getIconSize0",
    "getIconFrameColor",
    "getDisplayLevelWithLevel",
    "当前等级 ",
    "， 满级 ",
    "getUpgradeData",
    "lv =  ",
    "， exp :  ",
    "getDisplayStarMax",
    "starMax",
    "getMainAttributeStr",
    "getMainAttributeName",
    "getMainAttributeBaseValues",
    "getMainAttributeAddValues",
    "getMarsAttrActivateRate",
    "isUsebleBySortID",
    "isSellableBySortID",
    "getLevelWithExp",
    "getUpgradeDataWithLv",
    "品质：",
    "getExpWithExp",
    "needMoneyPerConsume",
    "getItemMix",
    "chunks:///_virtual/NItemData.ts",
    "0f20cs3CIhCELeSSMZBBUsX",
    "NItemData",
    "donateExp",
    "m_nMarsID",
    "m_pMarsData",
    "getItemDataWithValueArray",
    "getAttributName",
    "ATTR_NUM",
    "checkBaseData",
    "s_pMarsUpgrade",
    "worthExp",
    "worthMoney",
    "getIconFilePath",
    "marsID",
    "getMarsShowData",
    "s_pMarsShow",
    "showIndex",
    "attrActivateRate",
    "attrActivateRateGrowStep",
    "getEngineRandom",
    "getItemBaseDataWithoutSame",
    "_sortID",
    "_itemID",
    "_starID",
    "_requireID",
    "分数加成",
    "金币加成",
    "战机攻击",
    "装甲生命",
    "副武器攻击",
    "僚机攻击",
    "技       能",
    "等       级",
    "同步率",
    "chunks:///_virtual/NItemMix.ts",
    "7458e6RkgBLBI5Pfw9Ckq+s",
    "NItemMix",
    "m_oItemMixReqireIDs",
    "m_pItemMixReqires",
    "itemMix",
    "[NItemMix] costItemCount:",
    " cost:",
    "chunks:///_virtual/NItemMixRequire.ts",
    "b600aOnc3BHR7L9JC/Z8fh1",
    "NItemMixRequire",
    "[NItemMixRequire] requireID:",
    " starID:",
    "chunks:///_virtual/NItemSplit.ts",
    "f6a02YSGrRKPZIrVqrZlqmQ",
    "NItemSplit",
    "[NItemSplit] item:",
    " level:",
    " splits_count:",
    "chunks:///_virtual/NKeyData.ts",
    "aed6aJ6he1C5YfVlLurFAgi",
    "NKeyData",
    "chunks:///_virtual/NLootData.ts",
    "ed6d6VgWZRNHKELesf/e/G5",
    "NLootData",
    "chunks:///_virtual/NMarsData.ts",
    "f2adbJnAhRBa6ZYSlLvJ/o5",
    "NMarsData",
    "partBaseBagItems",
    "getPartBaseBagItems",
    "chunks:///_virtual/NMarsShow.ts",
    "62790M8MGhM/IHwPqyaUc3q",
    "NMarsShow",
    "showBgImagePath",
    "showMidImagePath",
    "showMidBlendFuncImagePath",
    "showTopAmFile",
    "showTopAnimImgs",
    "showTopAnimIndex",
    "getMarsString",
    "showBagItem",
    "getShowBagItem",
    "chunks:///_virtual/NMaterialData.ts",
    "0ea87P4Q7FE9pIAkmFu6pdP",
    "NMaterialData",
    "rocket",
    "chunks:///_virtual/NMoneyData.ts",
    "a671bRlIvFPB7G9xIuaIKby",
    "NMoneyData",
    "chunks:///_virtual/NoticeData.ts",
    "32195FFukxJxohnlwki6SOh",
    "lastFetchTime",
    "_tipPopupVersion",
    "tipPopupVersion",
    "onAutoPopup",
    "getCurVersion",
    "[NoticeData] 弹脸完成，保存弹脸时间：",
    " 公告版本：",
    "getAutoPopupNotice",
    "getCurrentNews",
    "[NoticeData] 当前版本：",
    " 已弹脸版本：",
    "/notice",
    "-dev",
    "/cfg_news_news.json?t=",
    "ios",
    "chunks:///_virtual/NoticeMessageData.ts",
    "b8ad3IWR99EIqAUH2hNrY9J",
    "chunks:///_virtual/NPilot.ts",
    "NPilotAttribute",
    "NPilotBase",
    "NPilotUnlock",
    "9405cX0+b1DnZ9cKhx4uSpZ",
    "uID",
    "pilotAtrData",
    "maxPilotStar",
    "loadPilotData",
    "loadPilotUnlockData",
    "loadPilotSkillData",
    "s_pPilotData",
    "s_starMaxDic",
    "s_starCostDic",
    "s_pPilotUnlockData",
    "s_pPilotSkillData",
    "setLevel",
    "upgradeSucceed",
    "advanceSucceed",
    "getPilotBase",
    "getPilotBaseDataByPId",
    "getPilotBaseDataByPIdAndLevel",
    "getPilotConfig",
    "getUnlockModuleData",
    "驾驶员系统一共有",
    "个驾驶员",
    "驾驶员：",
    "，品质：",
    "，解锁：",
    "getPilotUnlockData",
    "isMaxStar",
    "getNextLvPilot",
    "maxLvInStar",
    "getStarMaxDic",
    "getStarCostDic",
    "costItemsArray",
    "costItemArray",
    "gameUI/pilotUI/",
    "getPilotListImageName",
    "list-pilot-",
    "chunks:///_virtual/NPilotAttribute.ts",
    "2aa5fnqOH9Gzrr+0AEvygMT",
    "allUpgradeCostMoney",
    "allUpgradeCostRmb",
    "allValueAdd",
    "allMoneyAdd",
    "allEngineAdd",
    "allArmorAdd",
    "allWeaponAdd",
    "allWingAdd",
    "chunks:///_virtual/NPilotBase.ts",
    "588c0/ANq9PtbbRtKO0s0wf",
    "effectPicArray",
    "effectAnimNumArray",
    "chunks:///_virtual/NPilotChip.ts",
    "432dew/f7ZAhJyqSYwY6rt5",
    "NPilotChip",
    "chunks:///_virtual/NPilotSkill.ts",
    "03dc85plR5FqbrMpaI+xuud",
    "chunks:///_virtual/NPilotUnlock.ts",
    "e415b1YuF1LqYBP+em00a1W",
    "chunks:///_virtual/NPropData.ts",
    "76591aNfjFNOaH/Ec+nN/Bq",
    "NPropData",
    "chunks:///_virtual/NReadyData.ts",
    "00b166YwRpHsrdSu8FNpcTT",
    "NReadyData",
    "chunks:///_virtual/ns.ts",
    "__wbindgen_add_to_stack_pointer",
    "__wbindgen_malloc",
    "__wbindgen_free",
    "module",
    "using deprecated parameters for `initSync()`; pass a single object instead",
    "Module",
    "Instance",
    "6a4daWtpuxBgaRtjVNxx3zM",
    "WXWebAssembly",
    "WebAssembly",
    "memory",
    "subarray",
    "detached",
    "__wbindgen_exn_store",
    "instantiateStreaming",
    "application/wasm",
    "`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",
    "arrayBuffer",
    "wbg",
    "__wbg_random_dcc13e3a22966e32",
    "Math.random",
    " is not defined",
    "__wbindgen_number_new",
    "__wbg_crypto_1d1f22824a6a080c",
    "crypto",
    "__wbindgen_is_object",
    "__wbg_process_4a72847cc503995b",
    "process",
    "__wbg_versions_f686565e586dd935",
    "versions",
    "__wbg_node_104a2ff8d6ea03a2",
    "__wbindgen_is_string",
    "__wbindgen_object_drop_ref",
    "__wbg_require_cca90b1a94a0255b",
    "__wbindgen_is_function",
    "__wbindgen_string_new",
    "__wbg_msCrypto_eb05e62b530a1508",
    "msCrypto",
    "__wbg_randomFillSync_5c9c955aa56b6049",
    "randomFillSync",
    "__wbg_getRandomValues_3aa56aa6edec874c",
    "getRandomValues",
    "__wbg_newnoargs_76313bd6ff35d0f2",
    "__wbg_call_1084a111329e68ce",
    "__wbindgen_object_clone_ref",
    "__wbg_self_3093d5d1f7bcb682",
    "self",
    "__wbg_window_3bcfc4d31bc012f8",
    "window",
    "__wbg_globalThis_86b222e13bdf32ed",
    "globalThis",
    "__wbg_global_e5a3fe56f8be9485",
    "global",
    "__wbindgen_is_undefined",
    "__wbg_call_89af060b4e1523f2",
    "__wbg_buffer_b7b08af79b0b0974",
    "__wbg_newwithbyteoffsetandlength_8a2cb9ca96b27ec9",
    "__wbg_new_ea1883e1e5e86686",
    "__wbg_set_d1e79e2388520f18",
    "__wbg_newwithlength_ec548f448387c968",
    "__wbg_subarray_7c2e3576afe181d1",
    "__wbindgen_throw",
    "__wbindgen_memory",
    "__wbindgen_wasm_module",
    "module_or_path",
    "using deprecated parameters for the initialization function; pass a single object instead",
    "wasm_encrypt_bg.wasm",
    "chunks:///_virtual/NSkinData.ts",
    "6da0cdb9MtKHawZUqlYzHkp",
    "NSkinData",
    "isSeleted",
    "i-skin",
    "skin-plane",
    "icon-",
    "chunks:///_virtual/NTreasureHunt.ts",
    "41cf0a7qlJOc6BIlU7DvdZx",
    "NTreasureHunt",
    "NTreasure",
    "boxType",
    "adsCdTime",
    "dayLeftNum",
    "mustLeftNum",
    "sMustLeftNum",
    "keyNum",
    "treasures",
    "getKeyNum",
    "chunks:///_virtual/NumberTool.ts",
    "40481sIIc9LlJvZg3bRWjVj",
    "reduce",
    "chunks:///_virtual/NUpgradeFormula.ts",
    "3f6538AgGpGdY4QTe7vaBYR",
    "NUpgradeFormula",
    "，升级所需经验：",
    "，被吞经验提供：",
    "，一个模块升级所需游戏币：",
    "，强化总共需要经验：",
    "chunks:///_virtual/NUtiGoods.ts",
    "e2fd33pWpxD5oX8eHWBMX+i",
    "NUtiGoods",
    "addMoney",
    "addRmb",
    "chunks:///_virtual/NVipData.ts",
    "VipFirstGiftState",
    "c8d5d/Q6qZAdp0gMAX8/TFz",
    "NVipData",
    "firstGiftArray",
    "firstGiftItemDataList",
    "rightsCSprArray",
    "vipRightDic",
    "vipRightDataList",
    "vipGiftState",
    "NotGot",
    "checkRightData",
    "chunks:///_virtual/NWareEngineData.ts",
    "426e3tZp0dHDrmwhGEpMlDR",
    "chunks:///_virtual/NWeaponData.ts",
    "1b2a45GGv5NW6i5xu+ELT2K",
    "NWeaponData",
    "chunks:///_virtual/NWheel.ts",
    "NWheelItem",
    "813007NQ01Il7GI9UR8DLZq",
    "NWheel",
    "bNeedRefresh",
    "bWheelRefreshAvaliable",
    "curEffectParams",
    "curEffects",
    "curLeftSec",
    "curRefreshState",
    "lastRefreshTimestamp",
    "leftFreeRefreshCount",
    "lotteryCosts",
    "lotteryTime",
    "refreshCost",
    "refreshTimes",
    "staticRewardBagItem",
    "freeLotteryNum",
    "addEffectAndParam",
    "clearEffectsAndParams",
    "getCurItems",
    "getEffectParams",
    "getEffects",
    "getLeftSec",
    "refreshTime",
    "getLimitTime",
    "getLotteryCost",
    "getMultyNum",
    "EFFECT_MULTY",
    "getPrizeCost",
    "MAX_SAFE_INTEGER",
    "EFFECT_PRIZE",
    "getRefreshCost",
    "isDouble",
    "EFFECT_DOUBLE",
    "isHasEffect",
    "some",
    "EFFECT_NONE",
    "isLimitTime",
    "isMulty",
    "isNeedRefresh",
    "isPrize",
    "freeTime",
    "hour",
    "minute",
    "m2Cost",
    "preTurnTableResult",
    "specialPrize",
    "specialVars",
    "buyTime",
    "refreshMillis",
    "alreadyBuyTime",
    "onLotterySuccess",
    "setStaticRewardBagItem",
    "getStaticRewardBagItem",
    "chunks:///_virtual/NWheelEffectData.ts",
    "72fd9cPXP9IA6bBHxHERczZ",
    "NWheelEffectData",
    "chunks:///_virtual/NWheelItem.ts",
    "9b9a2VatKJDGLOWCklnvCn5",
    "bEffect",
    "displayBagItemParam",
    "effect",
    "effectParam",
    "prizeParam",
    "isSetPos",
    "[NWheelItem] index:",
    " bEffect:",
    " prize:",
    " prizeParam:",
    " effect:",
    " effectParam:",
    " displayBagItem:",
    "isSpecial",
    "normalPrize",
    "normalVars",
    "chunks:///_virtual/NWingmanData.ts",
    "74e6eJBfH5FY71gnFObZnu7",
    "NWingmanData",
    "offLocationX",
    "offLocationY",
    "followingSpeed",
    "energyWingSpeed",
    "bNormalHurtable",
    "bEnergyHurtable",
    "chunks:///_virtual/OperateActivityData.ts",
    "b693ao+2AVJW7TdF2jSHeuE",
    "m_lBossLootActivityEndDate",
    "m_lBossLootActivityEndMoment",
    "m_lBossLootActivityEndTimestamp",
    "m_lBossLootActivityStartDate",
    "m_lBossLootActivityStartMoment",
    "m_lBossLootActivityStartTimestamp",
    "m_lBossTicketActivityEndDate",
    "m_lBossTicketActivityEndMoment",
    "m_lBossTicketActivityEndTimestamp",
    "m_lBossTicketActivityStartDate",
    "m_lBossTicketActivityStartMoment",
    "m_lBossTicketActivityStartTimestamp",
    "m_lEndlessDoubleGoldEndTimestamp",
    "m_lEndlessDoubleGoldStartTimestamp",
    "m_lEndlessDoubleGoldTimes",
    "m_lEndlessFriendActivityEndDate",
    "m_lEndlessFriendActivityEndMoment",
    "m_lEndlessFriendActivityEndTimestamp",
    "m_lEndlessFriendActivityStartDate",
    "m_lEndlessFriendActivityStartMoment",
    "m_lEndlessFriendActivityStartTimestamp",
    "m_lLastReadTimestamp",
    "m_lRechargeActivityEndTimestamp",
    "m_lRechargeActivityStartTimestamp",
    "m_lStageDoubleLootEndTimestamp",
    "m_lStageDoubleLootStartTimestamp",
    "m_lTreasureOneTimesActivityEndTimestamp",
    "m_lTreasureOneTimesActivityStartTimestamp",
    "m_lTreasureTenTimesActivityEndTimestamp",
    "m_lTreasureTenTimesActivityStartTimestamp",
    "m_nTreasureOneTimesLeftTimes",
    "m_nTreasureOneTimesPrize",
    "m_nTreasureTenTimesLeftTimes",
    "m_nTreasureTenTimesPrize",
    "m_oEndlessDoubleGoldEndDate",
    "m_oEndlessDoubleGoldEndMoment",
    "m_oEndlessDoubleGoldStartDate",
    "m_oEndlessDoubleGoldStartMoment",
    "m_oRechargeActivityFilePath",
    "m_oStageDoubleLootEndDate",
    "m_oStageDoubleLootEndMoment",
    "m_oStageDoubleLootStartDate",
    "m_oStageDoubleLootStartMoment",
    "m_oTreasureOneTimesFilePath",
    "m_oTreasureTenTimesFilePath",
    "getElapsedTime",
    "getRechargeActivityFilePath",
    "getTreasureOneTimesActivityLeftTimes",
    "getTreasureOneTimesFilePath",
    "getTreasureOneTimesPrize",
    "getTreasureTenTimesActivityLeftTimes",
    "getTreasureTenTimesFilePath",
    "getTreasureTenTimesPrize",
    "isBossLootActivityOn",
    "isBossTicketActivityOn",
    "isEndlessDoubleGoldActivityOn",
    "isEndlessFriendActivityOn",
    "isRechargeActivityOn",
    "isStageDoubleLootActivityOn",
    "isTreasureOneTimesActivityOn",
    "isTreasureTenTimesActivityOn",
    "endlessM1Double",
    "startDt",
    "endDt",
    ":00:00",
    "redoubleNum",
    "无尽双倍金币活动：",
    ") -> ",
    ")，剩余次数：",
    "reduceTreasureOneTimesActivityLeftTimes",
    "reduceTreasureTenTimesActivityLeftTimes",
    "chunks:///_virtual/OwnLoginRequestData.ts",
    "e442bZ2yT1O1ov0I3pnSVAR",
    "OwnLoginRequestData",
    "account",
    "chunks:///_virtual/PagePoint.ts",
    "51268ub/r1E0YWSmdWdGSqg",
    "PagePoint",
    "point",
    "pointAnimation",
    "_openAnim",
    "AM-Pilot-Point-Open",
    "_keepAnim",
    "AM-Pilot-Point-Keep",
    "onPointAnimationFinished",
    "playKeepAnimation",
    "setFull",
    "playOpenAnimation",
    "playAnimation",
    "chunks:///_virtual/Pay.ts",
    "dcf3arRZItMZqRrZrUvnI1I",
    "Pay",
    "PayPriceType",
    "chunks:///_virtual/PayData.ts",
    "836d51ww1lPDqedvq7aHOTg",
    "rechargeType",
    "payPriceType",
    "payId",
    "priceADId",
    "priceItem",
    "payName",
    "setStoreData",
    "initPrice",
    "getPayName",
    "IOS",
    "payment",
    "chunks:///_virtual/PayMgr.ts",
    "PrivilegeCardPayData",
    "PlaceOrderRequestData",
    "RechargeRMBPayData",
    "StoreMallStagePayData",
    "StoreFundPayData",
    "StorePeriodPayData",
    "StoreFirstPayData",
    "QueryOrderRequestData",
    "PeriodicGiftRewardPayData",
    "459a7nsZtBAx5+C6xWb4DvU",
    "requestOrderTime",
    "_payDataMap",
    "_curPayData",
    "loadPrivilegeCardData",
    "loadRechargeRMBPayData",
    "loadStoreMallStagePayData",
    "loadStoreFundPayData",
    "loadStorePeriodPayData",
    "loadStoreFirstPayData",
    "loadPeriodicGiftRewardPayData",
    "loadMoonGiftRewardData",
    "setPrivilegeCardData",
    "setStageData",
    "setFundData",
    "setPeriodData",
    "setPeriodicGiftRewardId",
    "getPayDataByType",
    "shouldPreventFastClick",
    "isIos",
    "不存在的支付数据 rechargeType:",
    " id:",
    "sendGetFailedOrdersRequestData",
    "preparePurchase",
    "sendQueryOrderRequestData",
    "sendPurchaseRequestData",
    "orders",
    "chunks:///_virtual/PerformanceDebug.ts",
    "3bfcf3wV39ItZ57L7byBfjs",
    "PerformanceDebug",
    "label",
    "gitVersion",
    "serverName",
    "setServerName",
    "refreshLabel",
    "formatTimestampToYYYYMMDDHHMMSS",
    "dump",
    "dumpPCard",
    "dump skip ad start",
    "dump skip ad end",
    "managedImageAssets",
    "assets",
    "lastDumpRes",
    "lastDumpImgRes",
    "lastDumpJsonRes",
    "imageAssets",
    "addAssets",
    "removeAssets",
    "addImageAssets",
    "removeImageAssets",
    "addJsonAssets",
    "removeJsonAssets",
    "chunks:///_virtual/PeriodicGift.ts",
    "f4906OZSPlNdJt7nkYX4+2F",
    "PeriodicGiftStateType",
    "chunks:///_virtual/PeriodicGiftActivityData.ts",
    "PeriodicGiftData",
    "3d29dU+q2RBla24HGWqpHDX",
    "PeriodicGiftActivityData",
    "giftDataMap",
    "curGiftId",
    "getGiftData",
    "getNextGiftData",
    "getNextGiftDataId",
    "getAllGiftData",
    "giftData",
    "rewardDatas",
    "minGiftIndex",
    "maxGiftIndex",
    "chunks:///_virtual/PeriodicGiftChest.ts",
    "57a862B0mtK2pHdAYLmHaHO",
    "PeriodicGiftChest",
    "chestSprite",
    "chestAnimation",
    "chestOpenAnim",
    "_chestComeInLeftAnimation",
    "AM-PeriodicGiftChest-ComeIn-toL",
    "_chestComeInRightAnimation",
    "AM-PeriodicGiftChest-ComeIn-toR",
    "_chestGoOutLeftAnimation",
    "AM-PeriodicGiftChest-GoOut-toL",
    "_chestGoOutRightAnimation",
    "AM-PeriodicGiftChest-GoOut-toR",
    "_chestKeepAnimation",
    "AM-PeriodicGiftChest-keep",
    "onChestAnimationFinished",
    "runKeepAnimation",
    "chunks:///_virtual/PeriodicGiftData.ts",
    "PeriodicGiftRewardData",
    "97ff074r35Flqhv8JF3VikF",
    "rewardDataList",
    "chunks:///_virtual/PeriodicGiftGainRewardRequestData.ts",
    "b6a3fGZ6gVAbp83lNya7Iws",
    "PeriodicGiftGainRewardRequestData",
    "chunks:///_virtual/PeriodicGiftInfoRequestData.ts",
    "9f9d1JIIJhPqq1DUNioFz5k",
    "chunks:///_virtual/PeriodicGiftMainData.ts",
    "643fdhnXiRPsb0T9gzHLBYa",
    "chunks:///_virtual/PeriodicGiftMgr.ts",
    "8fc32td8PtJ7422fJJWXmsz",
    "_curGainRewardActivityId",
    "_curGainRewardGiftId",
    "_curGainRewardRewardId",
    "_giftRedPointPath",
    "_giftRewardRedPointPath",
    "periodicGiftActivityId",
    "periodicGiftId",
    "periodicGiftRewardId",
    "curShowGiftIndex",
    "curActivityConditionValue",
    "isShowPeriodGift",
    "chunks:///_virtual/PeriodicGiftRewardData.ts",
    "48921m+7i1Mya9KgDV8l2DA",
    "setActivityId",
    "setGiftId",
    "chunks:///_virtual/PeriodicGiftRewardPayData.ts",
    "a507b5HB/dCW5nesQ/56Fen",
    "chunks:///_virtual/PeriodPkDataRequestData.ts",
    "7c721rN9ElDrYTcx0jHzoMQ",
    "chunks:///_virtual/Pilot.ts",
    "cc6e3BkzpBBJZ3YKRCL9AGA",
    "chunks:///_virtual/PilotAdvanceRequestData.ts",
    "f9cf3gAYPRDYL7IL/deXPWx",
    "PilotAdvanceRequestData",
    "chunks:///_virtual/PilotData.ts",
    "dce70nrRBBDYouIlbT+RJIN",
    "isCanShowRmbUpgradePilotMsg",
    "getPilotEngineAtk",
    "getPilotArmorHp",
    "getPilotWeaponAtk",
    "getPilotWingAtk",
    "getPilotBaseDataWithUId",
    "isHasPilotData",
    "pilotMoneyUpTimesPerDay",
    "pushPilotData",
    "getMainPilotData",
    "chunks:///_virtual/PilotIcon.ts",
    "9fdcauf/6dEcrLCe9uodX2S",
    "PilotIcon",
    "isShowStar",
    "pilotData",
    "refreshFrame",
    "stopPurpleAnim",
    "chunks:///_virtual/PilotMgr.ts",
    "PilotMixRequestData",
    "PilotReplaceRequestData",
    "PilotUpgradeRequestData",
    "4a5b6Sd/ilKG6QofJZtMFvs",
    "sendPilotMixRequestData",
    "sendPilotReplaceRequestData",
    "pilotIdUp",
    "pilotIdDown",
    "stateType",
    "sendPilotUpgradeRequestData",
    "snedPilotAdvanceRequestData",
    "chunks:///_virtual/PilotMixRequestData.ts",
    "8231405uV5BZLTi00IquHCy",
    "chunks:///_virtual/PilotRedDot.ts",
    "43f20U78t9Bhqs1XficeJ0S",
    "PilotRedDot",
    "anim",
    "Keep",
    "Open",
    "playAnim",
    "AM-Pilot-Point-",
    "chunks:///_virtual/PilotReplaceRequestData.ts",
    "ad1d3ZoDmpOdZguf5CREjgJ",
    "chunks:///_virtual/PilotSeatComponent.ts",
    "91e63jKX01A3JcpyAyLcAGb",
    "PilotSeatComponent",
    "scanningLineAni",
    "pilotState",
    "_uiPilot",
    "onPilotSeatIconClick",
    "refreshPilot",
    "chunks:///_virtual/PilotSkillMgr.ts",
    "1d9345JzKZNt5E05ZCOPPym",
    "_pilotSkillTimer",
    "_pilotSkillNum",
    "_pilotSkillTotal",
    "pilotSkillReadyAE",
    "pilotSkillUseAE",
    "pilotSkillCD",
    "btn",
    "iconOp",
    "corners",
    "pilotSkillNode",
    "pilotSkillBtn",
    "showPilotSkill",
    "pilotSkillIcon",
    "gameUI/gameUI/skillno1",
    "gameUI/gameUI/skillno2",
    "pilotSkillMask",
    "pilotSkillCorners",
    "gameUI/gameUI/skillready",
    "gameUI/gameUI/skilleffect",
    "setBPilotShield",
    "PilotSkill",
    "normalSprite",
    "disabledSprite",
    "chunks:///_virtual/PilotUpgradeRequestData.ts",
    "5af25h30UpNLKebn7fXY+Ef",
    "chunks:///_virtual/Pipeline.ts",
    "4454esQ2SZGAq6VQYyfHgmA",
    "Pipeline finish",
    "Pipeline step ",
    " start",
    "stepPercent",
    "chunks:///_virtual/PlaceOrderRequestData.ts",
    "04efaNMfPJBDLG0DRrvU547",
    "chunks:///_virtual/PlaneAttackPoint.ts",
    "WeaponBullet",
    "3d315wlpA9DQJh+dUmValdy",
    "PlaneAttackPoint",
    "bShootPause",
    "delObj",
    "nocycleShoot",
    "standbyCount",
    "attackPointType",
    "case_TYPE_AIM_FAMILY",
    "createWeaponBullet",
    "setWait",
    "setAnimationID",
    "setFollowFather",
    "case_TYPE_DOUBLE_FOLLOW_MISSILE",
    "setStandby",
    "setFollow",
    "case_TYPE_DOUBLE_MISSILE",
    "case_TYPE_FOLLOW_FAMILY",
    "case_TYPE_FOLLOW",
    "setOwner",
    "case_TYPE_MACHETE",
    "setBezier",
    "case_TYPE_MISSILE_DIVIDE",
    "setDivideData",
    "case_TYPE_MISSILE",
    "resetSelf",
    "getShootPauseTime",
    "isDeleFromFather",
    "setPlaneAttackPointDelegate",
    "chunks:///_virtual/PlaneAttackPointDelegate.ts",
    "c22cepLpapMgphnAnt1rXrS",
    "PlaneAttackPointDelegate",
    "chunks:///_virtual/PlaneData.ts",
    "4c6b0QHjYZLGrEni7ipdbA/",
    "toEquipString",
    "chunks:///_virtual/PlaneMgr.ts",
    "13d63hxX59FoowMtpS5rl37",
    "loaded",
    "planeBlastAE",
    "planeEffectSp",
    "energyWordAE",
    "isShowTrans",
    "transCount",
    "transAE",
    "lastWeaponGrade",
    "lastPlaneHp",
    "planeDeadFrameCount",
    "_pauseShootByDebug",
    "setEnergyValue",
    "energyValue",
    "getEnergyValue",
    "setEnergy",
    "energySpeed",
    "getEnergySpeed",
    "initPlane",
    "PlaneEffect",
    "liangzihua",
    "PlaneMgr.initPlane currentEquips:",
    "onPlaneResLoaded",
    "onWingmanResLoaded",
    "setMoveRange",
    "born",
    "setBAlpha",
    "setShieldDelegate",
    "setHpCur",
    "weaponGrade",
    "setCurWeapon",
    "pauseShootByDebug",
    "setPauseShootByStage",
    "rebornAlpha",
    "planes",
    "cycleOpenShoot",
    "cycleTrans",
    "isFriendPlane",
    "isHurtPlane",
    "enemyActionState",
    "ENEMY_WORMHOLE",
    "NoHurtBattleGuideID",
    "getNextStageID",
    "getNextSubStageID",
    "invincible",
    "isPercentBool",
    "getHurtlessChance",
    "getHurtlessRate",
    "getUnreduceChance",
    "getUpgradeChance",
    "getUpgradeGrade",
    "reduceWeapon",
    "enemyActionNum",
    "setAddHpAble",
    "resetAlphaTime",
    "initPos",
    "setMoving",
    "effect/sprintdie",
    "effect/missile-02b-boom",
    "upgradeWeapon",
    "UPGRADE_NORMAL",
    "UPGRADE_DIRECT_ENERGY",
    "UPGRADE_MAX",
    "isEnergyTrans",
    "isMarsEngine",
    "showEnergy",
    "deEnergy",
    "isPauseShoot",
    "setPauseShoot",
    "isWormShoot",
    "shieldClosed",
    "showTrans",
    "getWeaponGrade",
    "getAllAddHpNum",
    "getAllAddHpMax",
    "getAllAddHpMin",
    "getAllAddHpTotal",
    "getHpAddNum",
    "getHpAddMax",
    "getHpAddMin",
    "getHpAddTotal",
    "getHpAddIntervalMax",
    "getHpAddIntervalMin",
    "getHurtAlphaNum",
    "gethurtalphaTimeMax",
    "getHurtAlphaTimeMin",
    "getHurtAlphaTimeTotal",
    "getRebornAlphaNum",
    "getRebornalphaTimeMax",
    "getRebornAlphaTimeMin",
    "getRebornAlphaTimeTotal",
    "setAutoMoving",
    "initFriendAttack",
    "setAllAddHp",
    "setHpAdd",
    "setHurtAlpha",
    "setRebornAlpha",
    "chunks:///_virtual/PlanePreview.ts",
    "3f2bcYEwz5JaYN9XSFO5h5T",
    "planeYPercent",
    "energyDelay",
    "anchorNode",
    "anchorOffsetY",
    "container",
    "bShootSoundPlay",
    "inverseTransformPoint",
    "setScaleAndView",
    "chunks:///_virtual/Platform.ts",
    "30c59yqEAJNx54ZhDt+vOMu",
    "AdvertisementType",
    "ADEnergy",
    "ADReborn",
    "ADSummaryDouble",
    "ADNormalBox",
    "ADHighBox",
    "ContextDataMessage",
    "ShowFriendRank",
    "SetScrollViewEnabled",
    "ShowEndlessSurpassFriend",
    "UpdateEndlessGameScore",
    "Clear",
    "ShowDecadeUniteInvite",
    "SetDecadeUniteInviteShareData",
    "chunks:///_virtual/PlatformEnums.ts",
    "000adWtKAxAVob0tB+Izzqu",
    "PlatformEnums",
    "chunks:///_virtual/PlatformMgr.ts",
    "WxPlatform",
    "6cd0dhvFepDCYSlgQGFPhhG",
    "_platform",
    "_inviteCallback",
    "onAppOnShow",
    "getSysTimeMs",
    "PlatformMgr.updateUserCloudStorage success",
    "PlatformMgr.updateUserCloudStorage fail:",
    "PlatformMgr.updateUserCloudStorage then:",
    "calculateSubContextViewAdjustParams",
    "designResolutionSize",
    "play ",
    "skip ad",
    "play ad",
    "checkDecadeUniteInvite",
    "checkDecadeUniteInvite:",
    "inviteData.uid:",
    "PlayerData.instance.uid: ",
    "skip",
    "chunks:///_virtual/PlatformSystemInfo.ts",
    "c519efz+FtKQ5eSFMpEuRbs",
    "PlatformSystemInfo",
    "chunks:///_virtual/PlayerData.ts",
    "4393a+N329MHIehnL0jV84t",
    "packUsed",
    "curSendEnergyNum",
    "curReceiveEnergyNum",
    "curAddEnergyNum",
    "curAddADEnergyNum",
    "curAddADDoubleRewardNum",
    "wheelFreeNum",
    "setAccount",
    "getAccount",
    "setOpenId",
    "setServerId",
    "getServerId",
    "setWxOpenId",
    "getWxOpenId",
    "getHeadUrl",
    "getPackUsed",
    "getCurSendEnergyNum",
    "setCurSendEnergyNum",
    "getCurReceiveEnergyNum",
    "setCurReceiveEnergyNum",
    "setCurAddEnergyNum",
    "setCurAddADEnergyNum",
    "getCurAddADDoubleRewardNum",
    "setWheelFreeNum",
    "getWheelFreeNum",
    "getBossLootRate",
    "getBossTicketPrize",
    "toLocaleString",
    "player-",
    "chunks:///_virtual/PlayerLogoutRequestData.ts",
    "f8e15RfqEFBdoTODQOzNkC8",
    "PlayerLogoutRequestData",
    "OnlineTime",
    "PlayerFriendsNum",
    "ClientVersion",
    "SystemSoftware",
    "SystemHardware",
    "TelecomOper",
    "Network",
    "ScreenWidth",
    "ScreenHight",
    "Density",
    "LoginChannel",
    "CpuHardware",
    "Memory",
    "GLRender",
    "GLVersion",
    "DeviceId",
    "chunks:///_virtual/PlayerScorePo.ts",
    "91a15OEHA1OK5nJ+oaMOO+u",
    "PlayerScorePo",
    "chunks:///_virtual/PopuDialogue.ts",
    "1384dGOZR1EmYjzrmkHpCyh",
    "PopuDialogue",
    "skipDialogueBtn",
    "arrowAnim",
    "dialogueUp",
    "dialogueDown",
    "curDialogue",
    "dialogueState",
    "dialogueIndex",
    "dialogueCount",
    "bNextDialogue",
    "curHeadUpID",
    "curHeadDownID",
    "dialogueTimes",
    "dialogueContents",
    "curDialogueType",
    "showBlack",
    "preInit",
    "onItemDialogueCallback",
    "catch exception",
    "nextDialogue",
    "cycleDialogue",
    "setDialogState",
    "[PopupBattleDialogue] nextDialogue:",
    "[PopupBattleDialogue] show dialogue: ",
    " | ",
    "resetDialogueCount",
    "openGuide",
    "[PopupBattleDialogue] leaveDialogue",
    "[PopupBattleDialogue] setDialogState: ",
    "onSkipDialogueBtnClick",
    "[PopupBattleDialogue] onSkipDialogueBtnClick",
    "chunks:///_virtual/PopupActionAward.ts",
    "2cf4bFleu5ENoKHs+c7x+fp",
    "pages",
    "rewardNode",
    "receivedRewardList",
    "rewardBtn",
    "rewardLabel",
    "isCheckAddedMiniProgramState",
    "onRefreshAward",
    "refreshBtnState",
    "isShowReward",
    "refreshRewardItem",
    "领 取",
    "已领取",
    "7B0E16",
    "999999",
    "onBtnReceiveClick",
    "请先添加到桌面，并从桌面进入游戏",
    "请先添加到我的小程序",
    "chunks:///_virtual/PopupBagFull.ts",
    "d097cfa/UJIsJ/2BuGiS7fR",
    "packCapacityLabel",
    "equipLabel",
    "coinLabel",
    "isCanJumpSale",
    "refreshPackCapacity",
    "coinNum",
    "expNum",
    "背包已达上限<color=#FFFFFF>",
    "</color><br/>需要清理背包了！",
    "onBtnGoToMixClick",
    "onBtnGoToSellClick",
    "PopupBagShortcutSale",
    "暂无金币道具可出售",
    "onBtnGoToUpgradeClick",
    "chunks:///_virtual/PopupBagShortcutSale.ts",
    "4bfb5vhoGZCT4a5eT7dhnND",
    "tipsText",
    "itemRewards",
    "sellMoney",
    "extraItems",
    "calculateGroup",
    "立即出售以下道具，获得<color=#F9C100>",
    "</color>金币？",
    "onEquipSellHandler",
    "卖出成功 获得：金币",
    "onBtnSellClick",
    "chunks:///_virtual/PopupBase.ts",
    "BlockInputEvents",
    "9b3b0s8bxpIQbJiq/rXohzG",
    "useDefaultOpenCloseTween",
    "blockNode",
    "popupNode",
    "closeCallback",
    "component",
    "handler",
    "customEventData",
    "clickEvents",
    "runPopupOpenAction",
    "runPopupCloseAction",
    "chunks:///_virtual/PopupBattleGuide.ts",
    "cd968/4iqJGV7WZ4a6Yg1vF",
    "black",
    "speedLineNode",
    "moveNode",
    "moveAnim",
    "planeBodyNode",
    "planeBodyScanLine",
    "planeBodyButton",
    "lootInfoNode",
    "lootInfoScanLine",
    "lootInfoButton",
    "weaponNode",
    "weaponBgAE",
    "weaponAE",
    "wingmanNode",
    "wingmanLeftAE",
    "wingmanRightAE",
    "energyNode",
    "energyAE",
    "bombNode",
    "bombHighLightArea",
    "bombGuideArrow",
    "movedLength",
    "scanLine",
    "scanLineOpacity",
    "[PopupBattleGuide] doInit:",
    "runBlackOpenAnim",
    "runNodeOpenAnim",
    "runScanLineAnim",
    "runSpeedLineAnim",
    "getMoveToWorldPos",
    "bornPosY",
    "runBlackCloseAnim",
    "GuideWeapon",
    "GuideWingman",
    "uiBombBtnNode",
    "[PopupBattleGuide] onTouchStart:",
    "[PopupBattleGuide] onTouchStart, skip because touch is not the first one, valid touch count: ",
    "[PopupBattleGuide] onTouchStart, touch[",
    "[PopupBattleGuide] onTouchMove:",
    "getDelta",
    "[PopupBattleGuide] trigger move guide finish",
    "_eventDispatcherList",
    "_pointerEventProcessorList",
    "claimedTouchIdList",
    "chunks:///_virtual/PopupBossWarning.ts",
    "66056o1mFFPdK6bd9cWtkjG",
    "infoNode",
    "bossLevelLabel",
    "pirateBossBg",
    "normalBossBg",
    "normalBoxPrefab",
    "pirateBoxPrefab",
    "LV.",
    "AM-ingame-award-appear",
    "AM-ingame-award-keep",
    "pauseMusic",
    "chunks:///_virtual/PopupBossWarningPirate.ts",
    "2898bR3SqpOGK1qIOI8Btnm",
    "chunks:///_virtual/PopupBuyEnergy.ts",
    "f4d16rPXbdPcIueyLkH6oK7",
    "diamondEnergyLabel",
    "diamondLimtLabel",
    "diamondSprBtn",
    "diamondSpr",
    "diamondPriceLabel",
    "adEnergyLabel",
    "adLimitLabel",
    "adSprBtn",
    "adSpr",
    "adPriceLabel",
    "showEnergyUI",
    "refreshEnery",
    "showDiamondEnergyUI",
    "showADEnergyUI",
    "今日剩余次数: ",
    "3D3D3D",
    "410800",
    "003D75",
    "onBtnDiamondEnergyClick",
    "当日购买体力次数已用完",
    "onBtnADEnergyClick",
    "当日观看广告获取体力次数已用完",
    "chunks:///_virtual/PopupBuyWithDiamond.ts",
    "d4230FnQjVIEalWvskIIcxR",
    "countDown",
    "prizeLabel",
    "contLabel",
    "checkDiamondFunc",
    "cont",
    "onBtnConfirmClick",
    "countDownParams",
    "confirmBtn",
    "cancelBtn",
    "contentNode",
    "chunks:///_virtual/PopupBuyWithPvpCoin.ts",
    "6cecaU4PsdMIbevhkmJWOqz",
    "checkPvpCoinFunc",
    "chunks:///_virtual/PopupCdKey.ts",
    "49a2fVP//JLDZR+cWcNYk+I",
    "PopupCdKey",
    "cdKeyEditBox",
    "clickLock",
    "InitUI",
    "onRefreshCdKey",
    "onBtnCdKeyClick",
    "chunks:///_virtual/PopupChooseReward.ts",
    "9e97fYLjB9JF4+lnREdHjR2",
    "chooseNode",
    "confirmLabel",
    "bagItemIconPrefab",
    "_rewardChooseList",
    "_closeCallback",
    "_rewardBagIcons",
    "rewardChooseList",
    "onBagItemIconClick",
    "chunks:///_virtual/PopupContinueSign.ts",
    "SignItem",
    "SignItemType",
    "SignMgr",
    "TreasureSignItem",
    "51e40sD7sVOv4g6IzVP0bqb",
    "btnClaim",
    "btnClose",
    "signItemRoot",
    "pageAni",
    "AniBtn",
    "treasureRoot",
    "TouchNode",
    "signItems",
    "hideReward",
    "SetInputEnable",
    "continueCanGain",
    "crossFade",
    "AM-ContinueSign-Keep",
    "continueSignHasBox",
    "continueTotalDays",
    "continueCurrentProgress",
    "CanReceive",
    "continueGainedSignDays",
    "Received",
    "initItem",
    "continueCurTotalDays",
    "continueTotalPeriodSize",
    "continueGainTotalDays",
    "RedDotContinueSign",
    "DownClaimCallback",
    "DownClaimTreasureCallback",
    "DownRefreshInfoCallback",
    "OnTouchStart",
    "OnTouchEnd",
    "refreshContinueSignData",
    "gainDays",
    "setItemStatus",
    "onBtnClaimClick",
    "isClaim",
    "isMultipleReward",
    "bagitems",
    "bagitem",
    "sendGainDailyBonusRequestData",
    "chunks:///_virtual/PopupDecadeThunderStory.ts",
    "ThunderStoryShareBtn",
    "2d7c0gJZQFET53wnC2q1x9N",
    "PopupDecadeThunderStory",
    "loopPageView",
    "storyShareBtn",
    "showPlaneAni",
    "initStoryShareBtn",
    "AM-ThunderStory-Open",
    "playPlaneKeepAni",
    "AM-ThunderStory-Keep",
    "chunks:///_virtual/PopupDecadeUniteOpen.ts",
    "86417mPO/BM+5jaeCPCbg2l",
    "preLoadUI",
    "chunks:///_virtual/PopupDecadeUniteSendDanmaku.ts",
    "5151fpFMe5FC45kOX/YAYMV",
    "PopupDecadeUniteSendDanmaku",
    "itemParent",
    "diamondGainedLabel",
    "onBtnSendDanmaku",
    "发送成功，获得",
    "***",
    "自定义弹幕需要在手机上使用微信登录后进行测试",
    "您发送的弹幕包含不当信息，请修改后再试",
    "chunks:///_virtual/PopupDecadeUniteSkinPreview.ts",
    "0521cXeYftOGI1p+Vt5OJY2",
    "PopupDecadeUniteSkinPreview",
    "popupAnimation",
    "_popupOpenAnimName",
    "AM-Popup-Skin-Preview-Open",
    "_popupKeepAnimName",
    "AM-Popup-Skin-Preview-Keep",
    "onPopupAnimFinish",
    "runPopupKeepAnim",
    "runPopupOpenAnim",
    "chunks:///_virtual/PopupDiamondRecharge.ts",
    "c1beeMalnxCwb405wcBmDOi",
    "onRefreshStoreHandler",
    "chunks:///_virtual/PopupEndlessCupJoin.ts",
    "835b5RcCm9PdIaIkEu2pApo",
    "PopupEndlessCupJoin",
    "leftTimeHH",
    "leftTimeMM",
    "leftTimeSS",
    "des",
    "isAniEnd",
    "AM-EndlessCup-Join-Keep",
    "onLaterJoinClick",
    "onBtnJoinClick",
    "chunks:///_virtual/PopupEndlessCupRank.ts",
    "randomRangeInt",
    "randomRange",
    "ce88ciwN7JHp7SpJZSnPw1T",
    "PopupEndlessCupRank",
    "btnGoGame",
    "timeRoot",
    "firstInfos",
    "ruleInfoRoot",
    "onBtnGoGameClick",
    "AM-EndlessCup-Rank-Keep",
    "getRobotInfo",
    "getRobotScore",
    "creatPlayerInfo",
    "DownEndlessCupInfoCallback",
    "onBtnRuleInfoClick",
    "chunks:///_virtual/PopupEndlessWorldPvpBattleResult.ts",
    "cdf97Na9pJL+oEOA5M7XhfT",
    "PopupEndlessWorldPvpBattleResult",
    "battleFieldNameNodes",
    "titleNodes",
    "bottomAnimation",
    "currencyReward",
    "pvpTokenReward",
    "reportCheatBtn",
    "closeBtnCallback",
    "[PopupEndlessWorldPvpBattleResult] refresh state:",
    ") result:",
    "onBottomOpenFinish",
    "onBottomCloseFinish",
    "adaptBottomUI",
    "onBtnReportCheatClick",
    "{0}",
    "onBtnBackClick",
    "chunks:///_virtual/PopupEndlessWorldPvpTokenReachDailyLimit.ts",
    "1c84dk3mpVLWLgIPecWVmvu",
    "PopupEndlessWorldPvpTokenReachDailyLimit",
    "todayGainPvpTokenLabel",
    "今日已获得 <size=24><color=#ffcd0b>",
    "EndlessWorldPvpDailyGainPvpTokenLimit",
    "chunks:///_virtual/PopupEndlessWorldPvpTokenWillReachDailyLimit.ts",
    "75e7dLDml1NEYgZN7d2F8lS",
    "PopupEndlessWorldPvpTokenWillReachDailyLimit",
    "onlyGainPvpTokenLabel",
    "本次挑战只能获得 <size=28><color=#ffcd0b>",
    "chunks:///_virtual/PopupFirstRecharge.ts",
    "c1a6dsvuEZJDJcT3H8zusG8",
    "planeAni",
    "dayOneItemRewards",
    "dayTwoItemRewards",
    "dayThreeItemRewards",
    "receivedNodes",
    "calimNodes",
    "tipText",
    "priceSprite",
    "storeFirstDatas",
    "storeDatas",
    "planeRewardData",
    "isCanClaim",
    "claimDayId",
    "showPlanePreview",
    "refreshRewardsUI",
    "showObtainStatusUI",
    "setPopupFirstRechargeShowTime",
    "AM-Recharge-1st-Open",
    "AM-Recharge-1st-Keep",
    "createPreview",
    "getDayItemRewards",
    "refreshDayRewards",
    "元激活",
    "setObtainLabelStatus",
    "getStoreFirst",
    "setClaimStatus",
    "setReceivedStatus",
    "getClaimDayNum",
    "可领取",
    "onBtnObtainClick",
    "sendGainStoreFirstRequestData",
    "sendBuyStoreFirstRequestData",
    "chunks:///_virtual/PopupFriendDetailInfo.ts",
    "55f07YzYVlLNo1mt9uWcVG2",
    "uidLabel",
    "equipLevels",
    "pilots",
    "pilotNames",
    "pilotSlots",
    "pilotLevels",
    "endlessCupLabels",
    "endlessWorldPvpLabel",
    "onBtnCopyUid",
    "chunks:///_virtual/PopupFundRecharge.ts",
    "89222jroCVH5oUriCpZIMnU",
    "bgTrans",
    "closeBtnNode",
    "rechargeBtnNode",
    "rewardPrefab",
    "fundId",
    "rowItems",
    "rewardPool",
    "mergeItemData",
    "HORIZONTAL",
    "resizeMode",
    "ResizeMode",
    "CONTAINER",
    "horizontalDirection",
    "HorizontalDirection",
    "LEFT_TO_RIGHT",
    "sendBuyFundRequestData",
    "destroyArray",
    "chunks:///_virtual/PopupGainWareSkinInfo.ts",
    "b445eE2k9dPKaoG7Sf70RUC",
    "PopupGainWareSkinInfo",
    "popupNodeOpacity",
    "sparkleAE",
    "treasurelAni",
    "closeButton",
    "skinNameLabel",
    "engineNameLabel",
    "curSkinData",
    "showPlane",
    "AM-GetSkin-begin",
    "defaultClip",
    "TreasureShow",
    "treasureNormalReward",
    "chunks:///_virtual/PopupGameGroup.ts",
    "b4da4HV0TpFUZbvfLqZwswl",
    "PopupGameGroup",
    "PlayerGroup",
    "OfficialAccounts",
    "descLabel",
    "qrCode",
    "playerGroupQrCode",
    "officialAccountsQrCode",
    "gameGroupType",
    "onToggleChange",
    "refreshQRCode",
    "qrcode/code-group.png",
    "qrcode/code-official.png",
    "chunks:///_virtual/PopupGiftInfo.ts",
    "c1cccHcWZxFj4ZBnszUp+6J",
    "PopupGiftInfo",
    "midBgUI",
    "contentUITransform",
    "giftinfoSprite",
    "infoRichText",
    "_giftData",
    "gameUI/gift_info/",
    "chunks:///_virtual/PopupGuide.ts",
    "03bd1MpFiBONaYkFlfbVlHX",
    "actionBtn",
    "guideDialog",
    "isCanTouch",
    "needCountTimeDown",
    "highLightParams",
    "onBtnTouchStart",
    "onBtnTouchMove",
    "onBtnTouchEnded",
    "onBtnTouchCancel",
    "uiEventEnabled",
    "playStep",
    "stepAction",
    "checkGuideRect",
    "[PopupGuide] checkGuideRect actionID : ",
    "getVisiblePopups",
    "[PopupGuide] checkGuideRect highLightParams : ",
    "HighLightArea",
    "[PopupGuide] 未找到引导高亮节点：actionID : ",
    "onBtnActionClick",
    "[PopupGuide] onBtnActionClick",
    "checkNextStep",
    "[PopupGuide] 触发式引导完成",
    "[PopupGuide] 将要进行的引导：ID：",
    "，step：",
    "[PopupGuide] stepAction actionID: ",
    ", highLightParams:",
    "[PopupGuide] 未处理的引导行为：",
    "chunks:///_virtual/PopupHandbookInfo.ts",
    "PopupNBagItem",
    "8db59U5bE5HrJSeOVzCYVWA",
    "animationRing",
    "animationLine",
    "planePreviews",
    "nBagItem",
    "InitdisplayInfo",
    "chunks:///_virtual/PopupHelp.ts",
    "f6a4awgU4lPJItCclCsFPV1",
    "PopupHelp",
    "initFlag",
    "chunks:///_virtual/PopupIdleBonus.ts",
    "TimeStringType",
    "4daaeI6vDVOlK7GpT5sOUpz",
    "remainTimeLabel",
    "maxTimeLabel",
    "emptyNode",
    "itemRewardPrefab",
    "gainRewardBtn",
    "gainRewardLabel",
    "quickIdleBonusBtn",
    "quickIdleBonusLabel",
    "popupAnim",
    "privilegeAnimNode",
    "privilegeAnimLabel",
    "privilegeCoinNode",
    "CoinBg",
    "CoinNormalBg",
    "CoinPrivilegeBg",
    "_itemRewardPool",
    "_popupOpenAnim",
    "AM-IdleBonus-Appear",
    "hasPrivilege",
    "refreshQuickIdleBonus",
    "refreshNormalReward",
    "refreshCoinLabel",
    "refreshPrivilegeAbout",
    "removeItemReward",
    "getItemRewardByPool",
    "/小时",
    "（最多可探索",
    "小时）",
    "??分 ??秒",
    "已达到最长时间",
    "getRemainTimeString",
    "Minute",
    "后可领取",
    "探索收益+",
    "%特权生效中",
    "onBtnGainNormalRewardClick",
    "onBtnQuickClick",
    "PopupQuickIdleBonus",
    "chunks:///_virtual/PopupLoading.ts",
    "PopupLoadingBase",
    "848cfkv3LlADLJCFWkmzhrT",
    "PopupLoading",
    "loadingAnim",
    "_playAnim",
    "chunks:///_virtual/PopupLoadingAnim.ts",
    "e1d7erBLXtA8aZzZwfb67wi",
    "PopupLoadingAnim",
    "bHoldHandle",
    "bRanTip",
    "ranTipCount",
    "ranTipTime",
    "m_bNextState",
    "loadingNode",
    "readyNode",
    "loadingAnimNode",
    "barBg",
    "bar",
    "tipTitle",
    "showDownAE",
    "showUpAE",
    "circleXLAE",
    "circleOutAE",
    "circleInAE",
    "stayAE",
    "fadeSecAE",
    "fadeFirAE",
    "animFileAsset",
    "animImageAssets",
    "amStrs",
    "m_bIsPvpMatching",
    "m_pRivalData",
    "originHeadIconPos",
    "bCheckingMatch",
    "bMatchSuccess",
    "bPvpEnterSuccess",
    "lastCheckTimeStamp",
    "pvpMatchCircleAnim",
    "pvpMatchLabelAnim",
    "pvpMatchLightAnim",
    "pvpMatchVsAnim",
    "pvpNode",
    "myHeadIconNode",
    "rivalHeadIconNode",
    "countDownStartTime",
    "countDownDisplaySeconds",
    "isPvpMatching",
    "gameUI/effect/readygo-search",
    "gameUI/effect/readygo",
    "gameUI/effect/loading",
    "gameUI/effect/loading-searching",
    "countDownTimeout",
    "dontRemoveListenersOnDisable",
    "onLoadingProgress",
    "startLoadingAction",
    "ANIM_PVP_MATCH_VS_APPEAR",
    "ANIM_PVP_MATCH_VS_DISAPPEAR",
    "ANIM_PVP_MATCH_TO_LOADING",
    "ANIM_PVP_MATCH_SUCCESS",
    "quadOut",
    "ANIM_PVP_MATCH_VS_LIGHT",
    "ANIM_PVP_MATCH_LOADING",
    "switchGameState",
    "startCheckMatch",
    "ANIM_SHOWDOWN",
    "ANIM_STAY",
    "ANIM_PVP_MATCH_STAY",
    "nextState",
    "ANIM_SHOWUP",
    "ANIM_CIRCLE_XL",
    "ANIM_CIRCLE_OUT",
    "ANIM_CIRCLE_IN",
    "LoadingStart",
    "refreshRivalInfo",
    "setProgress",
    "WEIGHT_SCENE",
    "BattleScene",
    "runReadyGoAnimation",
    "WEIGHT_BATTLE_RES",
    "updateProgress",
    "curProgress",
    "timeoutTriggered",
    "[PopupLoadingAnim] loadBattleRes: ",
    "stopLoadingAction",
    "ANIM_DISAPPEAR_LABEL",
    "ANIM_DISAPPEAR_BG",
    "ANIM_READY_GO",
    "removePersistRootNode",
    "setupAE",
    "nextTip",
    "[PopupLoadingAnim] 上行查询PVP匹配状态请求已在队列中",
    "updateMatchCountDown",
    "EndlessWorldPvpMatchTimeDown",
    "setRivalData",
    "stopPvpMatching",
    "fadeOutWithoutReadyGo",
    "[PopupLoadingAnim] 匹配查询 result:",
    " battleFieldIndex:",
    " bBattleFieldChange:",
    " bNeedStartMatch:",
    "startEndlessWorldPvpMatch",
    "startEndlessGame",
    "showMsgBox",
    "onConfirmMsgBoxClose",
    "匹  配",
    "返  回",
    "onMsgBoxPopupShow",
    "匹配失败，是否重试？\n",
    "进入战斗失败\n",
    "[PopupLoadingAnim] 已经开始加载进场了，忽略网络异常",
    "进入战斗失败\n是否重试？",
    "重  试",
    "放  弃",
    "匹配失败，是否重试？",
    "ANIM_PVP_MATCH_CIRCLE",
    "chunks:///_virtual/PopupLoadingBase.ts",
    "cdefekVQjBHkJGf/S/j4IP6",
    "超时时间，0表示不超时",
    "timeoutSeconds",
    "canvasWidget",
    "disableWidget",
    "targetProgress",
    "lerpSpeed",
    "setupCanvas",
    "adaptCanvas",
    "onTimeout",
    "onErrorMsgBoxPopupHide",
    "返回登录",
    "chunks:///_virtual/PopupLoadingEnums.ts",
    "17c0fo9hg1MwZ1QkTJncMHT",
    "PopupLoadingEnums",
    "CheckReview",
    "PostLogin",
    "RemoteConfig",
    "Index",
    "DecadeUniteInvite",
    "FetchPlayerDatas",
    "LoadMainPagePrefab",
    "PreInitMainPage",
    "Margin",
    "DontChange",
    "Cover",
    "chunks:///_virtual/PopupLoadingMainPage.ts",
    "0032cD9ILJJI7ovAcOcgpLO",
    "PopupLoadingMainPage",
    "coverBgNode",
    "mainPageBgNode",
    "progressLabel",
    "stepLabel",
    "allWeight",
    "preWeight",
    "curWeight",
    "curStep",
    "lastStepTimestamp",
    "stepElapsed",
    "totalElapsed",
    "bgType",
    "StepParams",
    "setStep",
    "recordStepElapsed",
    "setStepProgress",
    "[PopupLoadingMainPage] setStep: ",
    ", progress: ",
    ", target: ",
    "setBgType",
    "ms, ",
    "连接服务器",
    "登录账号",
    "加载配置",
    "获取数据",
    "获取公告",
    "加载完成",
    "chunks:///_virtual/PopupLoginLimit.ts",
    "94dd0G8tOVITKTvrc4PQmyc",
    "PopupLoginLimit",
    "gameGroup",
    "onBtnGameClubClick",
    "onBtnGameGroupClick",
    "chunks:///_virtual/PopupMessage.ts",
    "de5ba9izT9Kv6UZ82FII4yK",
    "MessageListTop",
    "messageTapType",
    "bgTop",
    "bgMid",
    "bgBottom",
    "closeBtn",
    "messageList",
    "messageListTopList",
    "coinDescNode",
    "coinIcon",
    "coinNumLabel",
    "emptyMessageNode",
    "_curMessageTapType",
    "_messageTopMap",
    "initListTopMap",
    "autoOpen",
    "onSwitchMessage",
    "refreshCoinNode",
    " / ",
    "bgFadeAnimation",
    "onOpenActionFinish",
    "onCloseActionFinish",
    "暂无奖励可领取",
    "chunks:///_virtual/PopupMessageBossTicket.ts",
    "2a2d8LVWIBAt4ycckEphqOC",
    "PopupMessageBossTicket",
    "contentLabel1",
    "ticketSp",
    "contentLabel2",
    "costDiamondLabel",
    "lootLabel",
    "_ticketNum",
    "_ticketBuyNum",
    "_ticketPrize",
    "messageBoxCallback",
    "是否使用",
    "x1进入战斗？",
    "已用完，是否消耗",
    "钻石进入战斗？",
    "（今日您还有额外",
    "次消耗钻石进入战斗的机会）",
    "当前蓝色品质装备掉落概率为",
    "chunks:///_virtual/PopupMessageBox.ts",
    "e26e5dMMCtAQKgBbArfwUfH",
    "contentLabelOpacity",
    "customContentParent",
    "cancelLabel",
    "bgSpFr",
    "result",
    "originConfirmLabel",
    "originCancelLabel",
    "initBoxUI",
    "confirmString",
    "cancelString",
    "chunks:///_virtual/PopupMixLuckyExplain.ts",
    "c28damKlMtDGr0xEJVvmbxt",
    "chunks:///_virtual/PopupMoonGift.ts",
    "ca1cdlbQ3ROo5AUlamxUZBY",
    "upArrowNode",
    "downArrowNode",
    "lightNode",
    "rewardBgSprite",
    "giftScrollView",
    "giftParent",
    "itemMoonGift",
    "stateNode",
    "lockStateNode",
    "receivedStateNode",
    "conditionAnimNode",
    "conditionLockTypeNode",
    "conditionTypeNode",
    "conditionNumLabel",
    "gainBtnLabel",
    "rewardAnim",
    "soundTypeList",
    "nodeHeight",
    "spacingY",
    "diffX",
    "diffScale",
    "minScale",
    "basePos",
    "recoverSpeed",
    "changeSpeed",
    "autoMinSpeed",
    "totalLoadCount",
    "_curActivityData",
    "_rewardDataList",
    "_baseX",
    "_lastContentY",
    "_currentRewardIndex",
    "_currentMoveLength",
    "_realMoveLength",
    "_lastScrollTime",
    "_isMove",
    "_isBlackClick",
    "_inResumeProgress",
    "_curSoundIndex",
    "_upArrowAnim",
    "_downArrowAnim",
    "_arrowImgStrs",
    "AM-MoonGift-Open",
    "_popupKeepAnim",
    "AM-MoonGift-Keep",
    "_rewardShowAnim",
    "AM-MoonGift-Condition-In",
    "startInit",
    "initRewardListListener",
    "initAnimationFinish",
    "initRewardList",
    "initArrow",
    "onPopupAnimationFinish",
    "onRewardAnimationFinish",
    "onGiftScrollStart",
    "onGiftScrollMove",
    "onGiftScrollEnd",
    "onRewardMoveStart",
    "inRewardMove",
    "refreshRewardLiseNode",
    "_scrolling",
    "_autoScrolling",
    "_isBouncing",
    "_dispatchEvent",
    "autoList",
    "refreshNodeAbout",
    "runAnimation",
    "refreshActivityTime",
    "refreshConditionLabel",
    "refreshRewardList",
    "refreshRewardAbout",
    "runArrowAnim",
    "runPopupAnim",
    "runRewardShowAnim",
    "refreshRewardBgSprite",
    "refreshCurItemMoonReward",
    "refreshRewardState",
    "refreshConditionState",
    "refreshArrow",
    "活动持续时间：",
    "MoonGiftScrollEnd",
    "quartOut",
    "onBtnUpClick",
    "onBtnDownClick",
    "onBtnInfoClick",
    "chunks:///_virtual/PopupMoonGiftSelectOptionReward.ts",
    "840a406NdJM0JR1XG1UgzZ/",
    "_curOptionData",
    "_curSelectIndex",
    "refreshOptionRewardList",
    "chunks:///_virtual/PopupMoonSign.ts",
    "2ee71G+FHZJj69BnqkKA9FK",
    "timeLab",
    "canMoonGain",
    "日 - ",
    "currentMoongSignDay",
    "moongainedSignDays",
    "sendGainMoonBonusRequestData",
    "chunks:///_virtual/PopupNBag.ts",
    "58ea4YOm6hJZ7ScH7NcgKhx",
    "PopupNBag",
    "packCapacityTxt",
    "sellNode",
    "sellNumLabel",
    "sellPriceLabel",
    "equipPrefab",
    "resPrefab",
    "IsSell",
    "refreshSellView",
    "onEquipWearHandler",
    "装备成功",
    "请选择卖出物品",
    "onBtnCancelClick",
    "equipBtn",
    "chunks:///_virtual/PopupNBagItem.ts",
    "86187ZLHoJKzJPz2Lq2JVCH",
    "装备按钮",
    "出售信息节点",
    "出售价格",
    "满级提示",
    "出售选择节点",
    "sellLabel",
    "maxLevelTip",
    "enhanceBtnNode",
    "enhanceBtnLabel",
    "enhanceAnim",
    "setEquipable",
    "AM-Bag-prompt",
    "-keep",
    "onBtnEquipClick",
    "onBtnEnhanceClick",
    "等级已满，不能升级",
    "chunks:///_virtual/PopupNBagResItem.ts",
    "d3e1b+n/zxOt5hd6hhMqK8e",
    "PopupNBagResItem",
    "资源名称",
    "resNameLabel",
    "chunks:///_virtual/PopupNotice.ts",
    "51151PGp89Njawe3QpicguD",
    "PopupNotice",
    "dataArray",
    "chunks:///_virtual/PopupPause.ts",
    "a4405gV/QVC7YVyl73hi4+C",
    "pauseAE",
    "block",
    "AM-Pause-In",
    "Pause",
    "onBtnResumeClick",
    "AM-Pause-Out",
    "PauseCountDown",
    "onBtnQuitClick",
    "chunks:///_virtual/PopupPeriodicGift.ts",
    "11dabZ/mcpISJP13XqDOkZ0",
    "itemPeriodicGift",
    "anotherItemPeriodicGift",
    "giftBtn",
    "anotherGiftChest",
    "pagePointParent",
    "pagePointPrefab",
    "lockLabel",
    "itemPeriodicGiftRewardList",
    "_pagePointList",
    "_curGiftMaxIndex",
    "_curGiftData",
    "_curItemPeriodicGift",
    "_lastItemPeriodicGift",
    "_curPeriodicGiftChest",
    "_lastPeriodicGiftChest",
    "_leftArrowAnim",
    "_rightArrowAnim",
    "AM-PeriodicGift-Appear",
    "_popupCloseAnim",
    "AM-PeriodicGift-Disappear",
    "_popupAnimFinishCb",
    "initPopupAnim",
    "initAllGift",
    "initGift",
    "setGiftComponentState",
    "onRefreshGift",
    "trunNextGift",
    "refreshCurGiftData",
    "refreshMaxIndex",
    "refreshArrowNode",
    "refreshGift",
    "refreshPagePoint",
    "refreshItemPeriodicGiftReward",
    "runCurGiftOpenAnim",
    "runPopupCloseAnim",
    "onBtnLeftClick",
    "onBtnRightClick",
    "onBtnGainGiftClick",
    "changeCurGiftComponent",
    "runNextGiftAnim",
    "PopupPeriodicGiftInfo",
    "chunks:///_virtual/PopupPeriodicGiftInfo.ts",
    "76b847ZKClMUZYOLkQE0uk9",
    "chunks:///_virtual/PopupPilotChooseItem.ts",
    "590dc+7bP9GU4FRNtbMs8Ha",
    "PopupPilotChooseItem",
    "nameText",
    "skillLabel",
    "scoreLabel",
    "mainPilotNode",
    "deputyNode",
    "fightNode",
    "replaceNode",
    "onBtnReplaceClick",
    "chunks:///_virtual/PopupPilotChooseList.ts",
    "a6cd2D3RVFIX5Uh+S5rbduv",
    "PopupPilotChooseList",
    "PilotChooseListData",
    "onSeatPilotData",
    "chunks:///_virtual/PopupPilotDetails.ts",
    "f28783TWclGg6B+tOhxDFcr",
    "skillDesLabel",
    "desLabel",
    "nPilot",
    "Lv.",
    "chunks:///_virtual/PopupPilotExplain.ts",
    "ba0f2qWE89D6JwVA4E35Zsn",
    "PopupPilotExplain",
    "chunks:///_virtual/PopupPilotPreview.ts",
    "0956cZgU7lDBasYiYrOKaK5",
    "PopupPilotPreview",
    "aniName",
    "AM-Pilot-Preview-",
    "chunks:///_virtual/PopupPowerLess.ts",
    "3b81doPhnxFUaYbiaPfR4CO",
    "upgradeContentNode",
    "onBtnUpgradeClick",
    "chunks:///_virtual/PopupPrivilegeCard.ts",
    "PrivilegeCardType",
    "PrivilegeType",
    "896cfW+el1JO45J3fHOvyNG",
    "UnActive",
    "periodLabel",
    "idleBonusFreeTimesLabel",
    "idleBonusValueLabel",
    "noADLabel",
    "firstRewardList",
    "firstRewardReceived",
    "dailyRewardList",
    "dailyRewardReceived",
    "gainBtnDayLabel",
    "_curPrivilegeData",
    "_btnState",
    "AM-PCard-Appear",
    "AM-PCard-Keep",
    "refreshDailyLabel",
    "refreshPrivilegeLabel",
    "refreshFirstReward",
    "refreshDailyReward",
    "getCardInfo",
    "activating",
    "特权已生效，剩余<color=#12ff00>",
    "天</color>",
    "天内获得以下权益",
    "getPrivilegeDataByType",
    "IdleFreeCoinAdd",
    "IdleFreeTimes",
    "NoAd",
    "dailyReward",
    "今日已领取",
    "（已累计",
    "onBtnGainClick",
    "sendBuyPrivilegeCard",
    "sendGainPrivilegeCard",
    "chunks:///_virtual/PopupQuickIdleBonus.ts",
    "2db03JPhYdILLb3GJP3Rp+6",
    "quickTimeLabel",
    "quickRewardParent",
    "FreeBtn",
    "AdBtn",
    "quickTimesLabel",
    "_curGainType",
    "refreshGainType",
    "refreshQuickTimeLabel",
    "立即获得",
    "分钟探索收益，次数每日刷新。",
    "可用次数：",
    "onBtnFreeClick",
    "gainQuickIdleBonus",
    "onBtnAdClick",
    "chunks:///_virtual/PopupReborn.ts",
    "8faedSpuVRP0qa5QFsv5JJ4",
    "leftNumLabel",
    "rebornAdNode",
    "prizeADLabel",
    "battleData",
    "EndlessWorldPvpRebornTimeDown",
    "onBtnQuit",
    "showRebornUI",
    "canShowADReborn",
    "onBtnReborn",
    "onBtnADReborn",
    "chunks:///_virtual/PopupRemouldExplain.ts",
    "65f55cmHJFPxbURTn+F8OBM",
    "PopupRemouldExplain",
    "desRichText",
    "chunks:///_virtual/PopupReward.ts",
    "RewardTapType",
    "5947fEifIpJsb25HUE58abV",
    "PopupReward",
    "emptyRewardNode",
    "emptyRewardLabel",
    "refreshDailyDescNode",
    "_curRewardTapType",
    "onRefreshReward",
    "getRewardGainNumByType",
    "onSwitchReward",
    "getCurShowRewardDataList",
    "日常任务已全部完成~",
    "暂无新的任务~",
    "暂无新的成就~",
    "活动还未开始，敬请期待吧~",
    "scrollToTop",
    "sendGainRewardRequest",
    "chunks:///_virtual/PopupRewardInfo.ts",
    "b998dl4GbpEmaZy08k6/p7P",
    "rewardInfoNode",
    "rewardInfoPrefab",
    "_bagItems",
    "_itemRewards",
    "doRefresh",
    "chunks:///_virtual/PopupSetting.ts",
    "6610fewWBpDDYMYyS8D9Wsy",
    "PopupSetting",
    "buttonOnSpriteFrame",
    "buttonOffSpriteFrame",
    "musicButton",
    "soundButton",
    "vibrateButton",
    "versionLabel",
    "btnLayout",
    "replenishNode",
    "setBtnOn",
    "pressedSprite",
    "hoverSprite",
    "toggleBtn",
    "onBtnMusicClick",
    "musicEnabled",
    "MenuBgNormal",
    "onBtnSoundClick",
    "soundEnabled",
    "onBtnVibrateClick",
    "onBtnNoticeClick",
    "onBtnHelpClick",
    "onBtnAboutClick",
    "onBtnFixedClick",
    "onBtnCopyClick",
    "onBtnReplenishClick",
    "chunks:///_virtual/PopupSevenSign.ts",
    "TipPopupMgr",
    "3c7932kii1OJ5ACisWpt+rE",
    "AniDay2",
    "AniDay7",
    "AM-SevenSign-Keep",
    "canGain",
    "currentSignDay",
    "gainedSignDays",
    "sendGainRewardRequestData",
    "showAllTipPopup",
    "chunks:///_virtual/PopupSkinActivate.ts",
    "b1938ySNO5KgIrQOnDZS+aa",
    "PopupSkinActivate",
    "planeNameLabel",
    "planeBgParent",
    "uiPlane",
    "skinActivateLabel",
    "_curSkinData",
    "_openAnimation",
    "AM-Popup-Skin-Activate-Open",
    "_keepAnimation",
    "AM-Popup-Skin-Activate-Keep",
    "initPlaneBg",
    "initPlanePreview",
    "onPopupAnimationFinished",
    "loadBundlePrefab",
    "decade_skin",
    "onBtnJumpClick",
    "chunks:///_virtual/PopupSkinTicket.ts",
    "2ac7bVzyBZLcI0JwaAmT3vI",
    "PopupSkinTicket",
    "ticketLabel",
    "chunks:///_virtual/PopupStageFightDetails.ts",
    "813c84HsT5IAo3KO0nQm15M",
    "topNodeUITranform",
    "normalBgNode",
    "heroBgNode",
    "topBgSp",
    "topBgSpSF",
    "titleBgSp",
    "titleBgSpSF",
    "titleNormalPos",
    "titleHeroPos",
    "starParent",
    "starNormalPos",
    "starHeroPos",
    "newAEParent",
    "newAENormalPos",
    "newAEHeroPos",
    "btnNormalSF",
    "btnNormalPressSF",
    "btnHeroSF",
    "btnHeroPressSF",
    "heroIconUIOpacity",
    "rec",
    "line",
    "bossAEParent",
    "descriptionLabel",
    "limitNumLabel",
    "timesNode",
    "unLimitNode",
    "sweepBtnNode",
    "sweepNameLabel",
    "sweepNumLabel",
    "fightButton",
    "_sweepBagItem",
    "_sweepNum",
    "_sweepIndexNum",
    "_lineStartPos",
    "_lineEndPos",
    "_stageNewAE",
    "_fireBackAE",
    "_bossAE",
    "_fireFrontAE",
    "_bossAnim",
    "_bossSpine",
    "gameUI/stageUI/newstage",
    "clearAE",
    "showStageInfo",
    "showSweep",
    "clearTracks",
    "originalSize",
    "showStageStar",
    "sineOut",
    "showBossAE",
    "showPower",
    "showLoot",
    "getStageLeftTimes",
    "不存在的道具 typeID: ",
    " itemID: ",
    " star: ",
    " level: ",
    "HeroModeCanWipOut",
    "onBtnFlightClick",
    "checkCommonCondition",
    "startStageGame",
    "onBtnSweepClick",
    "sendSweepRequestData",
    "chunks:///_virtual/PopupSurvey.ts",
    "0028eJJvEJNA6qJ4j8Pl3Pm",
    "toggleGroup",
    "channelLabels",
    "onToggleChecked",
    "onBtnSubmitClick",
    "chunks:///_virtual/PopupSweepInfo.ts",
    "8a738q+PO9I85vRp+4nVaL4",
    "sweepAEParent",
    "coinNode",
    "coinSpNode",
    "sweepAE",
    "starAEList",
    "_coin",
    "_items",
    "_itemArray",
    "_openAnimFinished",
    "gameUI/stageUI/new/effect-sweep",
    "createSweepAE",
    "createStarAEList",
    "SweepWin",
    "refreshItems",
    "refreshCoin",
    "showStarAnim",
    "actionFinish",
    "hideStarAnim",
    "chunks:///_virtual/PopupTreasureInfo.ts",
    "348a7CzChxJuoOPTWpasfdH",
    "tenRewards",
    "rewardLayout",
    "SkipBtn",
    "normalAni",
    "wheelAni",
    "sChestAni",
    "openButton",
    "againButton",
    "confirmButton",
    "againNum",
    "againCostNum",
    "againIcon",
    "lightRotate",
    "templeteReward",
    "treasureAE",
    "bBtn",
    "extraCount",
    "extraName",
    "infoArray",
    "lightFrames",
    "effectSp",
    "RewardRoot",
    "WheelRoot",
    "wheelCallback",
    "lotteryAction",
    "TenPosOneX",
    "TenPosOneY",
    "TenPosTwoX",
    "TenPosOffsetX",
    "TenPosOffsetY",
    "isShow",
    "isChestS",
    "coroutine",
    "WheelReward",
    "treasureSReward",
    "effectImg",
    "gameUI/gameUI/",
    "star-effect",
    "gameUI/shopUI/280chest-open",
    "gameUI/shopUI/chest-open",
    "gameUI/shopUI/minichest-open",
    "gameUI/shopUI/e-chest-open",
    "BOX_LEVELA",
    "gameUI/shopUI/2500chest-open",
    "BOX_LEVELB",
    "BOX_LEVELS",
    "getBoxType",
    "BOX_GUIDE",
    "AM-S-Chest-idle",
    "TREASURE_OPEN",
    "TREASURE_CLOSE",
    "showRewardFinish",
    "refreshBagItemSp",
    "constraintNum",
    "GRID",
    "gameUI/shopUI/item-light",
    "SelfOne",
    "treasureHunt",
    "getAds",
    "再抽1次",
    "TreasureHuntOne",
    "再抽10次",
    "TreasureHuntTen",
    "gameUI/homeUI/icon-gem",
    "TreasureHunt",
    "gameUI/shopUI/new/shop-treasurebox-key",
    "gameUI/shopUI/new/shop-treasurebox-key2",
    "SkipAnimation",
    "onBtnClickLottery",
    "onBtnOpenClick",
    "treasureOpen",
    "恭喜获得：",
    "treasureAEShow",
    "AM-S-Chest-Begin",
    "treasureOpenS",
    "treasureShowBtn",
    "TREASURE_STAY",
    "treasureSpFade",
    "chunks:///_virtual/PopupTreasureProbInfo.ts",
    "5bc74TWvntDy5z4sEAkHa/+",
    "PopupTreasureProbInfo",
    "ProbTemplete",
    "RootS",
    "RootA",
    "RootB",
    "chunks:///_virtual/PopupUnlockStage.ts",
    "beb6cl3WGZNm5vlTT9BzCid",
    "keyNeedContent",
    "keyNeedLabel",
    "keyNeedIcon",
    "keyNeedNumLabel",
    "keyBuyContent",
    "keyBuyLabel",
    "keyBuyIcon",
    "keyBuyNumLabel",
    "buyBtn",
    "diamondNumLabel",
    "_keyNeedNum",
    "_keyNum",
    "_keyPrize",
    "_keyUse",
    "_isUnlock",
    "_unlockCallback",
    "getModeInfo",
    "getUnlockStageID",
    "showNeedLabel",
    "showBuyLabel",
    "showBtn",
    "开启下一章共需",
    "，是否开启？",
    "是否消耗钻石补足缺少的",
    "UnlockPveNeedsM2Base",
    "UnlockPveNeedsM2Start",
    "开启下一章？",
    "onBtnUnlockClick",
    "chunks:///_virtual/PopupVip.ts",
    "f5cc4K16odHXL88fZvnk9DN",
    "PopupVip",
    "vipNameBgSprite",
    "vipMainContentNode",
    "vipIconSprite",
    "vipIconAEParent",
    "vipNameStarParent",
    "vipUnActivatedNode",
    "leftBtnNode",
    "rightBtnNode",
    "vipNameStarPosList",
    "rechargeFirstLabel",
    "rechargeNumLabel",
    "rechargeYuanLabel",
    "rechargeLastLabel",
    "rechargeSprite",
    "vipRewardContentNode",
    "vipFirstRewardParent",
    "gainVipFirstRewardBtn",
    "gainVipFirstRewardBtnLabel",
    "gainVipFirstRewardNode",
    "vipRightParent",
    "vipRightContentNode",
    "vipRightContentSprite",
    "_vipDataList",
    "_curVipData",
    "_vipNameBgMap",
    "_vipIconMap",
    "_vipLvMap",
    "_vipRightMap",
    "_vipNameStarArray",
    "_vipNameAnimation",
    "_leftBtnAnimation",
    "_rightBtnAnimation",
    "_uiFadeAnimTime",
    "getStarPos",
    "getVipDataList",
    "startPreInitLoadRes",
    "loadNameBgSpriteFrame",
    "loadVipIconSpriteFrame",
    "loadVipAnimation",
    "loadVipLvSpriteFrame",
    "loadVipRightSpriteFrame",
    "gameUI/vipUI/vipeffect",
    "gameUI/vipUI/star",
    "loadVipRightSpr",
    "createSwitchBtnNode",
    "refreshRechargeContent",
    "refreshFirstGiftBtn",
    "refreshFirstGift",
    "refreshRight",
    "getMaxVipLevel",
    "refreshNameData",
    "refreshNameAnimation",
    "playStarAnim",
    "refreshFirstGiftData",
    "Got",
    "refreshRightData",
    "iconSpFr",
    "sendGainVIPFirstPrizeRequest",
    "onBtnRechargeClick",
    "chunks:///_virtual/PopupWareDetails.ts",
    "WareDetailShortcutItem",
    "3e2dcJujU9KH4KzeWIqX5Fw",
    "WareDetailsAdvance",
    "typeLabel",
    "lockToggle",
    "advanceIcons",
    "enhanceNode",
    "splitNode",
    "desNode",
    "shortcutNode",
    "periodShortcut",
    "shortcuts",
    "typeLabels",
    "materialData",
    "refreshSplitNodeActive",
    "进阶材料",
    "消耗品",
    "refreshShortcut",
    "refreshShortcutItems",
    "onToggleLockClick",
    "chunks:///_virtual/PopupWareMaterials.ts",
    "d8a68fhsw9DxJkXkidaG+2U",
    "PopupWareMaterials",
    "chunks:///_virtual/PopupWareMaterialsItem.ts",
    "d40fcHJwU9ALowskvOzpLk3",
    "PopupWareMaterialsItem",
    "materialsIcons",
    "materialsLabel",
    "maskNodes",
    "materArrays",
    "★装备进阶",
    "★的基本材料",
    "战神装备进阶的基本材料",
    "chunks:///_virtual/PopupWheelProbInfo.ts",
    "8aa5fWVYxZIepbMyl/l7eio",
    "PopupWheelProbInfo",
    "Root",
    "chunks:///_virtual/PostLoginRequestData.ts",
    "ab2ca/uaz5L27YKq0TQ+deg",
    "PostLoginRequestData",
    "chunks:///_virtual/PrefabPaths.ts",
    "94b8cWIQCVOSIl9qdDDpPtn",
    "PrefabPaths",
    "getInfo",
    "pathPrefixWithoutBundle",
    "P-UI-MainPage",
    "gameUI_main",
    "UIMainPageTop",
    "P-UI-MainPageTop",
    "UIMenu",
    "P-Menu",
    "P-Popup-TreasureInfo",
    "gameUI_treasure",
    "UILogin",
    "login/P-UI-Login",
    "UICG",
    "guide/P-UI-CG",
    "guide/P-Popup-Guide",
    "setting/P-UI-About",
    "setting/P-Popup-Setting",
    "setting/P-Popup-Help",
    "setting/P-Popup-Notice",
    "setting/P-Popup-CdKey",
    "P-UI-Stage",
    "P-Popup-Stage-FightDetails",
    "P-Popup-Stage-SweepInfo",
    "P-Popup-Stage-UnlockStage",
    "ware/P-Ware",
    "ware/P-Ware-Upgrade",
    "ware/P-Ware-Details",
    "ware/P-Ware-Remould",
    "ware/skin/P-Ware-Skin",
    "ware/skin/P-Popup-SkinReceive",
    "ware/P-Explain-Remould",
    "ware/P-Popup-SLucky-info",
    "bag/P_UI_Popup_EquipChoose",
    "bag/P_UI_Popup_Materials",
    "bag/P_UI_Popup_Bag",
    "bag/P_UI_Popup_BagFull",
    "bag/P_UI_Popup_QuickSale",
    "PopupGM",
    "gm/P-Popup-GM",
    "common/P-Popup-BuyWithDiamond",
    "common/P-Popup-BuyWithPvpCoin",
    "common/P-Popup-MessageBox",
    "common/P-Popup-PowerLess",
    "common/P-Popup-RewardInfo",
    "UIStageBoss",
    "stage_boss/P-UI-BossMode",
    "stage_boss/P-UI-BossDetail",
    "common/P-Popup-MessageBoxBossTicket",
    "load/P-Popup-LoadingMainPage",
    "stage_period/P-UI-Stage-Period",
    "message/P-Popup-Message",
    "UIDailyTask",
    "daily_task/P-UI-DailyTask",
    "reward/P-Popup-Reward",
    "reward/P-Popup-ChooseReward",
    "vip/P-Popup-Vip",
    "friend/P-Popup-FriendDetailInfo",
    "stage_endless/P-UI-EndlessBuyReady",
    "stage_endless/P-UI-EndlessFriendRank",
    "stage_endless/P-UI-EndlessAid",
    "P-UI-EndlessWorldPvp",
    "gameUI_pvp",
    "P-UI-EndlessWorldPvpBattleInfo",
    "P-Popup-EndlessWorldPvpBattleResult",
    "P-UI-EndlessWorldShop",
    "P-Popup-EndlessWorldPvpTokenReachDailyLimit",
    "P-Popup-EndlessWorldPvpTokenWillReachDailyLimit",
    "UITouch",
    "common/P-UI-Touch",
    "load/P-Popup-Loading",
    "load/P-Popup-LoadingAnim",
    "battle/P-UI-Battle",
    "battle/P-Popup-BossWarning",
    "battle/P-Popup-BossWarning-Pirate",
    "battle/P-Popup-Pause",
    "battle/P-Popup-Reborn",
    "battle/P-Popup-BattleGuide",
    "dialogue/P-Popup-Dialogue",
    "summary/P-UI-Summary",
    "common/P-Tip",
    "RewardTips",
    "common/P-Tip-Reward",
    "pilot/P-UI-Pilot",
    "pilot/P_UI_Popup_Pilot",
    "pilot/P-Popup-Pilot-Rule",
    "pilot/P-Popup-pilot-Details",
    "pilot/P-Popup-Pilot-Preview",
    "PopupZone",
    "zone/P-Popup-Zone",
    "store/P-store",
    "store/P-Popup-recharge",
    "store/P_UI_Popup_recharge",
    "idle_bonus/P-Popup-IdleBonus",
    "idle_bonus/P-Popup-QuickIdleBonus",
    "treasure/P_UI_TreasureWheel",
    "treasure/P-Popup-TreasureWheel-Refresh",
    "treasure/P-Popup-WheelProbInfo",
    "treasure/P-Popup-TreasureProbInfo",
    "treasure/P-Handbook-Popup",
    "first_recharge/P-Popup-Recharge-1st",
    "privilege_card/P-Popup-PrivilegeCard",
    "common/P-Popup-BuyEnergy",
    "actionAward/P-Popup-GameGroup",
    "actionAward/P-Popup-ActionAward",
    "login/P-Popup-LoginLimit",
    "P-UI-DecadeUnite-MainPage",
    "decade_main",
    "P-Popup-DecadeUnite-Open",
    "P-Popup-DecadeUnite-SendDanmaku",
    "DecadeUniteWeekTask",
    "P-UI-TenYears-7Day",
    "decade_weekTask",
    "UIDecadeUniteInvite",
    "P-UI-DecadeUniteInvite",
    "decade_invite",
    "DecadeUniteMilestone",
    "P-UI-DecadeUnite-Milestone",
    "decade_milestone",
    "UIDecadeUniteSkin",
    "P-UI-DecadeUnite-Skin",
    "PopupDecadeUniteSkinActivate",
    "P-Popup-Skin-Activate",
    "PopupDecadeUniteSkinTicket",
    "P-Popup-Skin-Info",
    "P-Popup-Skin-Preview",
    "decade_skinPreview",
    "DecadeUniteThunderStory",
    "P-Popup-DecadeUnite-ThunderStory",
    "decade_story",
    "SignActivity/P-Popup-SevenSign",
    "SignActivity/P-Popup-ContinueSign",
    "endlessCupMatch/P-Popup-EndlessCup-Join",
    "endlessCupMatch/P-Popup-EndlessCup-Rank",
    "survey/P-Popup-Survey",
    "periodic_gift/P-Popup-PeriodicGift",
    "periodic_gift/P-Popup-PeriodicGift-Info",
    "P-Popup-MoonSign",
    "moon_sign",
    "P-Popup-MoonGift",
    "moon_gift",
    "P-Popup-OptionReward",
    "common/P-Popup-Gift-Info",
    "chunks:///_virtual/PrivilegeCard.ts",
    "a1868NbBplFk7tIpyFdOasH",
    "chunks:///_virtual/PrivilegeCardInfoRequestData.ts",
    "8427aCSu9FF7Ye4s6fLW3AF",
    "chunks:///_virtual/PrivilegeCardMgr.ts",
    "f2cf49lc75JMok6/irtQlJt",
    "_privilegeCardPrivilegeMap",
    "_curCardId",
    "_activatingPrivilegeCard",
    "refreshPrivilegeCardData",
    "refreshPrivilegeCardInfo",
    "loadPrivilegeCardPrivilegeData",
    "refreshPrivilegeCardRed",
    "checkLoginTipPopup",
    "getPrivilegeCardPrivilegeData",
    "getAutoPopupPrivilegeCard",
    "chunks:///_virtual/PrivilegeCardPayData.ts",
    "c7ba2P1a65Ew4c7+EBo5F9J",
    "privilegeMap",
    "chunks:///_virtual/PullbackRequestData.ts",
    "53913QQt7VHLIn2uTbZwTKa",
    "PullbackRequestData",
    "chunks:///_virtual/PveDoubleRewardRequestData.ts",
    "55b37saBBFFE7cncCRqhFKc",
    "chunks:///_virtual/PveGame1RequestData.ts",
    "05709BsyC9EBLjXrWQCuZZ2",
    "PveGame1RequestData",
    "md5s",
    "chunks:///_virtual/PveGameEndRequestData.ts",
    "4d59aWsLXdHS5pfMw+Vo7Nz",
    "chunks:///_virtual/PVPShopBuyRequestData.ts",
    "7360fkMFPFJEJ6YqdIh9mD3",
    "chunks:///_virtual/PVPShopLastRefreshTimeRequestData.ts",
    "3203asy4LhJB4bwTPxxjIIY",
    "PVPShopLastRefreshTimeRequestData",
    "chunks:///_virtual/PVPShopShowRequestData.ts",
    "efb918DY1ZMMKlYSHnwZiic",
    "chunks:///_virtual/QqGetBalanceRequestData.ts",
    "d5f62RfNj9BZ4N4yX9vKYK8",
    "QqGetBalanceRequestData",
    "amount",
    "chunks:///_virtual/QqLoginRequestData.ts",
    "c7e322bNLRBB4gqiOouuP6G",
    "QqLoginRequestData",
    "openkey",
    "openkeyExpire",
    "refresh_token",
    "pfkey",
    "chunks:///_virtual/QqShareRequestData.ts",
    "af5cbgtJ/REJIkiWcxuCwKR",
    "QqShareRequestData",
    "share_type",
    "fuids",
    "summary",
    "previewText",
    "image_url",
    "target_url",
    "chunks:///_virtual/QueryOrderRequestData.ts",
    "82556JyuslFe7nwT8CNmV1w",
    "chunks:///_virtual/QueryPVPMatchRequestData.ts",
    "27a73hMHahBf4osECp0Yur5",
    "QueryPVPMatchRequestData",
    "chunks:///_virtual/RandDataRequestData.ts",
    "4f304awN2tD45jNeagNWL6B",
    "RandDataRequestData",
    "chunks:///_virtual/RandomAidFriendListRequestData.ts",
    "134b7NXmHBGmprSMzHaBSxo",
    "chunks:///_virtual/RandomSupplyRequestData.ts",
    "e68a4Rwfk9AYraiCWLSNl2T",
    "RandomSupplyRequestData",
    "chunks:///_virtual/ReadyEnum.ts",
    "8d9eekM8M9JPrzUUNkUWsxx",
    "ReadyEnum",
    "chunks:///_virtual/ReadyRandomRequestData.ts",
    "18a63crlDFEAJKpW3T/+3VH",
    "chunks:///_virtual/RechargeM2RequestData.ts",
    "61dc2gbmWFPHJRUCFhgaUW0",
    "RechargeM2RequestData",
    "chunks:///_virtual/RechargeMoneyRequestData.ts",
    "32e66DvWM9BX7IO0htGiUG3",
    "RechargeMoneyRequestData",
    "chunks:///_virtual/RechargeRequestData.ts",
    "87ceemL9+1L37KMALpWjnAB",
    "chunks:///_virtual/RechargeRMBPayData.ts",
    "02b39hZpQdKo6Yk6CeboyPT",
    "rechargeData",
    "setFirst",
    "chunks:///_virtual/RecoverBattleData.ts",
    "a09b87r66ROK5OPLGZ7wqAT",
    "RECOVER_BATTLE",
    "SavedBattleData",
    "battleProgress",
    "startResponse",
    "saved",
    "BattleProgressData",
    "enemyActionIndex",
    "savedData",
    "useServerData",
    "checkResume",
    "[RecoverBattleData] checkResume, savedData is expired, diff time:",
    "loadFromLocal",
    "dataKey",
    "[RecoverBattleData] loadFromLocal, savedData:",
    "saveToLocal",
    "[RecoverBattleData] saveToLocal, savedData:",
    "loadFromServer",
    "[RecoverBattleData] loadFromServer failed, errMsg:",
    "[RecoverBattleData] loadFromServer, savedData:",
    "saveToServer",
    "[RecoverBattleData] saveToServer, savedData:",
    "loadProgress",
    "assignProgressFromBattleData",
    "[RecoverBattleData] saveProgress failed, savedData is null",
    "[RecoverBattleData] assignProgressFromBattleData",
    "[RecoverBattleData] battleProgress",
    "[RecoverBattleData] battleData",
    "[RecoverBattleData] 校验宝箱数量，记录的宝箱数量：",
    "，计算后的宝箱数量：",
    "[RecoverBattleData] assignProgressToBattleData",
    "getSavedData",
    "chunks:///_virtual/RedDot.ts",
    "808deO+C8ZI/ag6di55VRGH",
    "redDotLabel",
    "isNum",
    "chunks:///_virtual/RedDotMgr.ts",
    "693d3/rcrVMXqQDbQdGzQqo",
    "activeNum",
    "setActiveNum",
    "findNode",
    "tree",
    "logError",
    "can not set active for not leaf node ",
    "getActiveNum",
    "RedDotMgr.findNode for ",
    " but ",
    " not found ",
    "chunks:///_virtual/RedDotMonitor.ts",
    "9a763HMg6ZHxYWEgbPE7Vyy",
    "paths",
    "pathStr",
    "setPathStr",
    "chunks:///_virtual/RedLine.ts",
    "7df9d1xfSZGUaCDAuWaLUux",
    "enemy",
    "redLineNode",
    "warningNode",
    "redlineAE",
    "redLineCirAE",
    "redLineWaringAE",
    "redLineNode_",
    "imgStrs",
    "redlineAE_",
    "ANIM_RED_LINE_LINE",
    "warningNode_",
    "redLineWaringAE_",
    "ANIM_RED_LINE_WARING",
    "redLineCirAE_",
    "ANIM_RED_LINE_CIR",
    "chunks:///_virtual/RegCntRequestData.ts",
    "1cad0uBkbBOK5Sej/XN8U+E",
    "RegCntRequestData",
    "chunks:///_virtual/RemovePlayerRequestData.ts",
    "856c6L+bNtLpK4Ql7QHVXqb",
    "RemovePlayerRequestData",
    "chunks:///_virtual/ReportRechargeFailRequestData.ts",
    "299f9B5FARJjo/jEQumiIgi",
    "ReportRechargeFailRequestData",
    "chunks:///_virtual/RequestDataBase.ts",
    "39e366JFUtJOr0yFhCnJ6sK",
    "chunks:///_virtual/ResInfo.ts",
    "f74ceTBUVBEKLcFdYWztftI",
    "ResInfo",
    "chunks:///_virtual/ResMgr.ts",
    "SpriteAtlas",
    "AudioClip",
    "70fc64vjYpOl7OHjbMSRJfK",
    "tags",
    "asset",
    "cachedSpriteFrames",
    "decRef",
    "handleImagePath",
    "jpg",
    "addAssetTag",
    "releaseAsset",
    "/spriteFrame",
    "SkeletonData",
    "triggerGC",
    "loadBundleRes",
    "addRef",
    "loadSpriteFrameInAtlas",
    "loadSpine",
    "loadTexture2D",
    "/texture",
    "binCache",
    "bundle",
    "loadBundle",
    "[ResMgr] loadBundleRes fail:",
    "loadBundleResImpl",
    "loadRemoteAsset",
    "loadRemote",
    "loadSound",
    "unloadSound",
    "nativeUrl",
    "chunks:///_virtual/Reward.ts",
    "3dd77b2r2dJM49gkz6Z6MIZ",
    "RewardServerType",
    "chunks:///_virtual/RewardAchievementData.ts",
    "RewardData",
    "7a98d1pEjVIIZJeRwUmQ513",
    "RewardAchievementData",
    "[RewardAchievementData]：ID：",
    "，奖励：",
    "，前置任务：",
    "chunks:///_virtual/RewardActivityData.ts",
    "e58dcMrDZpFFacx6lpFkt96",
    "RewardActivityData",
    "beginTimestamp",
    "[RewardActivityData] ID：",
    "，开始时间：",
    ")，结束时间：",
    "chunks:///_virtual/RewardData.ts",
    "5db7cgwPelCJ6E9qC4FVvl6",
    "isGift",
    "chunks:///_virtual/RewardMarsData.ts",
    "RewardTaskData",
    "3e5a1uI3pNK1okxPKNWGkD8",
    "RewardMarsData",
    "[RewardMarsData]：ID：",
    "chunks:///_virtual/RewardMgr.ts",
    "d4f27VBHchO9I/h+bihVBzI",
    "_rewardTypeMap",
    "_rewardTypeMapByTapType",
    "_rewardDataMap",
    "_doingRewardDataMap",
    "_finishedRewardDataMap",
    "_chooseRewardId",
    "_currentRewardData",
    "_redDotPath",
    "loadRewardTaskRewardData",
    "loadRewardAchievementData",
    "loadRewardActivityData",
    "loadRewardMarsData",
    "getRewardMap",
    "showRewardData",
    "rewardType: ",
    ", rewardID: ",
    ", description: ",
    "getRewardType",
    "getRewardDataByTypeAndID",
    "getRewardDataListByType",
    "sortRewardBySortLevel",
    "initDoingRewardDataMap",
    "divisionWithRewardId",
    "getRewardDoing",
    "initFinishedRewardDataMap",
    "getRewardFinished",
    "setRewardDoing",
    "removeRewardFinished",
    "setRewardFinished",
    "removeRewardDoing",
    "getNewRewardsArray",
    "当前奖励：",
    "isRewardFinished",
    " 已经完成了",
    " 前置奖励：",
    " 没被领取",
    " 已经被领取了",
    "checkRewardRedDot",
    "getRewardGainNum",
    "succeedGainReward",
    "chunks:///_virtual/RewardTaskData.ts",
    "b268dgIG/1DW7NZyjJWaQyX",
    "[RewardTaskData]：ID：",
    "chunks:///_virtual/RewardTips.ts",
    "e3ee2Ki2f5JhYvROmlf/Ux1",
    "mainNode",
    "bgAEParent",
    "tipsParent",
    "defaultIconNode",
    "rewardTipsRichText",
    "_bgAE",
    "_curIconNode",
    "_inShow",
    "gameUI/effect/top-popup",
    "initBGAE",
    "NewReward",
    "inShow",
    "chunks:///_virtual/RogueBuyRequestData.ts",
    "029ach3kdpGp5ySu+FvSsC1",
    "RogueBuyRequestData",
    "chunks:///_virtual/RogueLastRefreshTimeRequestData.ts",
    "be715ekk3tLE4Nk87RO7aiq",
    "RogueLastRefreshTimeRequestData",
    "chunks:///_virtual/RogueShowRequestData.ts",
    "29d20J+8bpAPpHCNZopBGm2",
    "RogueShowRequestData",
    "chunks:///_virtual/RSA.ts",
    "6ac2fK1xCBBR5AUrUyWZaZH",
    "10001",
    "98b8c7db42d81bc1494250044fe5ebf04862813209bea91bafe6585956b82af85256a2228a56a88536a4deba41b58df8e9b609364d919a7760fd03c2906b64fe1fbd0fbeee48e47b83fa23b90394c8ab4859c5ef2db2d6a17ea4f18bed3ac51e9d7dcefae8eabf5e289431a91750d1b0ba2459ab7e5d2477a53deff8701fd2a8ec9758ddf03faf95dd45daf1705da53638ad43017d64d8a25896e8286e4140e6230f65969535252f8d765870e37089e78c00824177975d6878b4265e8b25cd74869f6e4bf3c36aa41769d38a0b5282201c1e8d67379aa637ed36a402f6adbedfef6076711bef3147730036746d54196f0e1e05524854402b1ef54b77c99bf3a5",
    "chunks:///_virtual/SceneBase.ts",
    "4fc14Tkv0NPm6cjgMnzXnu9",
    "SceneBase",
    "uiRootList",
    "topRoot",
    "popupRootList",
    "menuRoot",
    "tipsRoot",
    "setup",
    "showDefaultUI",
    " showDefaultUI not implemented.",
    "chunks:///_virtual/SceneBattle.ts",
    "53a22OhuQpNToBUqbzeEf5J",
    "SceneBattle",
    "setTouchEnable",
    "chunks:///_virtual/SceneLaunch.ts",
    "9ef3cpPHV5O5ZoSJ4Ca3mCs",
    "SceneLaunch",
    "chunks:///_virtual/SceneLogin.ts",
    "ee921ZSzexHKq6T3aw8kQdj",
    "SceneLogin",
    "uiLogin",
    "debugNode",
    "zoneLabel",
    "guideLabel",
    "updateGuideLabel",
    "resetZone",
    "refreshZone",
    "onBtnZoneClick",
    "onBtnGuideClick",
    "引导 ×",
    "引导 ✓",
    "chunks:///_virtual/SceneMain.ts",
    "780cdKQezxFrI9+fzdUMVVF",
    "SceneMain",
    "hideTopUI",
    "setMainPageLoadingStepProgress",
    "InitialGuideStep",
    "hideMainPageLoading",
    "cachedPlayerForceInfo",
    "gatherPlayerForce",
    "sendUserProperties",
    "pilot",
    "chunks:///_virtual/Scissor.ts",
    "847e2g0JltBkpQ1BB6A6FCd",
    "Scissor",
    "uiTransform",
    "createWithRect",
    "addToNode",
    "setMask",
    "chunks:///_virtual/ScreenBoxing.ts",
    "614bdQ834xAMZot2hfXK20Q",
    "[ScreenBoxing] show ratio:",
    "chunks:///_virtual/SecRoundEndCountDataRequestData.ts",
    "15f28sFfAdB2J2Oy9TTk2ju",
    "SecRoundEndCountDataRequestData",
    "BattleID",
    "UserPlaneHP",
    "UserPlaneInitHP",
    "AttactUserMax",
    "AttactUserMin",
    "AttactUserCount",
    "AttactUserTotal",
    "UserDeathCount",
    "UserReviveCount",
    "UserDeathSite",
    "HealHpCount",
    "HealHpMax",
    "HealHpMin",
    "HealHpTotal",
    "InGameItem1Count",
    "InGameItem1HealMax",
    "InGameItem1HealMin",
    "InGameItem1HealTotal",
    "ShieldItemHealCount",
    "ShieldItemHealMax",
    "ShieldItemHealMin",
    "ShieldItemHealTotal",
    "ShieldItemHealCDMax",
    "ShieldItemHealCDMin",
    "UserPlaneAttackMax",
    "UserPlaneAttackMin",
    "UserPlaneAreaMax",
    "UserPlaneAreaMin",
    "UserPlaneBulletMax",
    "UserPlaneBulletMin",
    "EnemyPlaneCount",
    "EnemyPlaneKillCount",
    "EnemyPlaneKillCount1",
    "EnemyPlaneHpMax",
    "EnemyPlaneHpMin",
    "EnemyPlaneAttackCount",
    "BossCount",
    "BossKillCount",
    "BossKillCount1",
    "InGameItem2Count",
    "InGameItem3Count",
    "USRCount",
    "USRTimeMax",
    "USRTimeMin",
    "USRTimeTotal",
    "InGameItem4Count",
    "HitGodCount1",
    "HitGodTimeMax1",
    "HitGodTimeMin1",
    "HitGodTimeTotal1",
    "HitGodCount2",
    "HitGodTimeMax2",
    "HitGodTimeMin2",
    "HitGodTimeTotal2",
    "HitGodCount3",
    "HitGodTimeMax3",
    "HitGodTimeMin3",
    "HitGodTimeTotal3",
    "StartSprintTime",
    "EndSprintTime",
    "HitGodCount4",
    "HitGodTimeMax4",
    "HitGodTimeMin4",
    "HitGodTimeTotal4",
    "BombUseCount",
    "BombCount",
    "BombCDMin",
    "BombTimeMax",
    "BombTimeMin",
    "BombTimeTotal",
    "BombAttackMax",
    "BombAttackMin",
    "BombAttackTotal",
    "BombAttackBossMax",
    "BombAttackBossMin",
    "BombAttackBossTotal",
    "EndUserItem4Stock",
    "DriverSkillCDMin1",
    "DriverSkillCount1",
    "DriverSkillCDMin2",
    "DriverSkillCount2",
    "DriverSkillMax2",
    "DriverSkillTotal2",
    "PirateShipCount",
    "PirateShipKillCount",
    "PirateShipKillCount1",
    "GoldenBoxCount",
    "SecCY_Count",
    "SecCY_ScoreMax",
    "SecCY_ScoreTotal",
    "SecCY_MinRange",
    "SecCY_MaxRange",
    "BulletVanish",
    "BulletCount",
    "CrushStoneCount1",
    "CrushStoneCount2",
    "CrushStoneCount3",
    "CrushStoneCount4",
    "StoneHpMax1",
    "StoneHpMin1",
    "StoneHpMax2",
    "StoneHpMin2",
    "StoneHpMax3",
    "StoneHpMin3",
    "StoneHpMax4",
    "StoneHpMin4",
    "DodgeLaser",
    "DodgeMissile",
    "DodgeShot",
    "DodgeImpact",
    "LaserCount",
    "MissileCount1",
    "MissileCount2",
    "MissileCount3",
    "UnableTouchCount",
    "DecelerationCount",
    "ShieldItem1Count",
    "ShieldItem1TimeMax",
    "ShieldItem1TimeMin",
    "ShieldItem1TimeTotal",
    "ShieldItem1GoldMax",
    "ShieldItem1GoldMin",
    "ShieldItem1GoldTotal",
    "AtomCount1",
    "AtomMaxHP",
    "AtomMinHP",
    "chunks:///_virtual/SecRoundEndDataRequestData.ts",
    "c8ecdRyt9xPBalfJWOni1yD",
    "SecRoundEndDataRequestData",
    "bossIds",
    "ClientEndTime",
    "Result",
    "PauseTime1",
    "PauseTime2",
    "PauseTimeDetail",
    "PauseTimeIntervalDetail",
    "MoveUpTotal",
    "MoveDownTotal",
    "MoveLeftTotal",
    "MoveRightTotal",
    "RoundStage",
    "TimeUse",
    "MagnetRadiusMax",
    "MagnetRadiusMin",
    "SecInitialScore",
    "SecClientScore",
    "SecScoreBuff",
    "RoundScore",
    "IsTopScore",
    "RoundGold",
    "RoundRate",
    "RoundDropItem1",
    "RoundDropItem2",
    "RoundDropItem3",
    "RoundDropItem4",
    "RoundDropItem5",
    "BossInitHpInfo",
    "BossAttackCountInfo",
    "BossKillTimeInfo",
    "StageTimeInfo",
    "StageGoldInfo",
    "AttactUserInfo",
    "UserHealInfo",
    "ComboTotalScore",
    "ComboTotalCount",
    "ComboMax",
    "ComboScoreMax",
    "ComboScoreMin",
    "ComboTimeMax",
    "ComboTimeMin",
    "ComboRadiusMax",
    "ComboRadiusMin",
    "EnemyPlaneScoreTotal",
    "EnemyPlane1Count",
    "EnemyPlane1ScoreMax",
    "EnemyPlane1ScoreMin",
    "EnemyPlane1ScoreTotal",
    "EnemyPlane2Count",
    "EnemyPlane2ScoreMax",
    "EnemyPlane2ScoreMin",
    "EnemyPlane2ScoreTotal",
    "SecInitialGold",
    "AllGoldTotalCount",
    "AllGoldTotalScore",
    "Gold1TotalCount",
    "Gold1ScoreMax",
    "Gold1TotalScore",
    "Gold2TotalCount",
    "Gold2ScoreMax",
    "Gold2TotalScore",
    "Gold3TotalCount",
    "Gold3ScoreMax",
    "Gold3TotalScore",
    "SupportPower",
    "SupportScore",
    "SupportInfo1",
    "SupportInfo2",
    "SupportInfo3",
    "SupportInfo4",
    "CallSupportTimeMax",
    "CallSupportCount",
    "CallSupportTotal",
    "chunks:///_virtual/SecRoundStartDataRequestData.ts",
    "3712aFlHh9FM64VcjQswNGT",
    "SecRoundStartDataRequestData",
    "ClientStartTime",
    "UserName",
    "Mapid",
    "RoundMode",
    "UserType1",
    "UserLevel1",
    "UserInfo1",
    "UserType2",
    "UserLevel2",
    "UserInfo2",
    "UserType3",
    "UserLevel3",
    "UserInfo3",
    "UserType4",
    "UserLevel4",
    "UserInfo4",
    "RoundScoreBuff",
    "RoundGoldBuff",
    "PowerScore",
    "UserMoney1",
    "UserMoney2",
    "GodBless",
    "UserItem1Stock",
    "UserItem2Stock",
    "UserItem3Stock",
    "UserItem4Stock",
    "UserItem5Stock",
    "UserItem6Stock",
    "RoundSetTime",
    "chunks:///_virtual/SellRequestData.ts",
    "a0530e/Bu1LZoWM1dTXZQoB",
    "chunks:///_virtual/SendEnergyRequestData.ts",
    "66c4fLdvx5PMKFnIzKY1PZt",
    "SendEnergyRequestData",
    "chunks:///_virtual/SendGoodsRequestData.ts",
    "5784eFru+RF25wII/TpPA0b",
    "chunks:///_virtual/SetClientDataRequestData.ts",
    "228a0JO19lJCo77BpCKGA+Y",
    "chunks:///_virtual/SetClientVarsRequestData.ts",
    "12454iVjWlHK7UIdJpGDwke",
    "chunks:///_virtual/SetInfoRequestData.ts",
    "17e56JsUSBDv46+SNH8PZYR",
    "SetInfoRequestData",
    "chunks:///_virtual/Share.ts",
    "dadecdnERBLF5fUrWL7nwVk",
    "Share",
    "ShareType",
    "Menu",
    "MainFriend",
    "EndlessShare",
    "chunks:///_virtual/ShareMgr.ts",
    "fda3c5PH0xMd4pN5eu++BcD",
    "ShareMgr",
    "share",
    "shareByType",
    "getShareConfig",
    "不存在的分享数据 ",
    "不存在的分享配置 ",
    "getShareConfigList",
    "chunks:///_virtual/ShieldDelegate.ts",
    "10921VofoJNo42w9sGpsyZB",
    "ShieldDelegate",
    "chunks:///_virtual/Shop.ts",
    "691d9lONyRInbJFE9vj11N1",
    "Tip",
    "Pop",
    "TreasureFriend",
    "TreasureRmb",
    "RefreshShopType",
    "PvpShop",
    "StorePriceType",
    "Purchase",
    "chunks:///_virtual/ShopBoxData.ts",
    "3d8f72w8D9Lca/5YIo1yfO4",
    "currentPrice",
    "originalPrice",
    "商品名称：sortID：",
    "，itemID：",
    "，star：",
    "，level：",
    "，原价：",
    "，现价：",
    "，num：",
    ", extra：",
    "chunks:///_virtual/ShopData.ts",
    "0a009umv+FClIvT4h107Wmn",
    "chunks:///_virtual/ShopEffectData.ts",
    "cab0e2v7GlGZpSnSyBzEmwb",
    "chunks:///_virtual/ShopMgr.ts",
    "8671dkFxNBGaYGA9v2+X7Hn",
    "shopMap",
    "shopKeyMap",
    "shopBoxMap",
    "shopBoxKeyMap",
    "buyItemType",
    "gainShowType",
    "loadShopData",
    "loadShopBoxData",
    "loadShopModuleData",
    "loadShopEffectData",
    "showShopData",
    "getShopItems",
    "getShopListData",
    "getShopListItems",
    "shop : ",
    "showBoxData",
    "getShopBoxData",
    "shopBox : ",
    "存在：item:",
    "showModuleData",
    "getShopModulesArrayWithItemType",
    "pRet : ",
    "data : ",
    "shopModule : ",
    "操作成功 ",
    "setOneTreasureHuntData",
    "treasure_hunting",
    "setUserAdd",
    "chunks:///_virtual/ShopModuleData.ts",
    "4a75ec+CWVIIYInvk5SSRkA",
    "模块买卖：",
    "存在道具",
    "道具写入异常",
    "，次数：",
    "chunks:///_virtual/ShowLoadingType.ts",
    "e332c+1CbhBb5MDVgWbS9Gf",
    "chunks:///_virtual/SignData.ts",
    "9de0dJLu9NLbpy4b0Zf8MJE",
    "totalDays",
    "curTotalDays",
    "totalPeriodSize",
    "gainTotalDays",
    "chunks:///_virtual/SignItem.ts",
    "3921cAeUg9F/6On1jgNsSOn",
    "itemRewardRoot",
    "locked",
    "received",
    "canReceive",
    "starRoot",
    "isSpecialReward",
    "setLocked",
    "setCanReceive",
    "setReceived",
    "chunks:///_virtual/SignMgr.ts",
    "acc42BEErRI2pgir91CNp6z",
    "sendGainTotalDailyBonusRequestData",
    "getAutoPopupSign",
    "getAutoPopupMoonSign",
    "getAutoPopupDaily",
    "chunks:///_virtual/SingleGuideRequestData.ts",
    "0a05ebhvotOnbBdBtJgRysz",
    "SingleGuideRequestData",
    "singleGuideType",
    "stepValue",
    "chunks:///_virtual/SingletonDataBase.ts",
    "5212dzfzSNJZIaS32Yan/Y/",
    "chunks:///_virtual/Sound.ts",
    "47c58JRHP9M6Y1WH6CKN+eU",
    "Button2",
    "BossShoot",
    "DiePlayer",
    "SwitchHome",
    "SwitchWare",
    "SwitchUpgrade",
    "SwitchAdvance",
    "SwitchStageNormal",
    "SwitchStageEndless",
    "BossDie",
    "UpgradeProgress",
    "GoBallisticFire",
    "PilotUnlock",
    "PilotUpgrade",
    "PilotAdvance",
    "WheelButton",
    "WheelRoll",
    "WheelReword",
    "BlackMarketEnter",
    "MarsActivate",
    "MarsSwitchTab",
    "MarsSwitchMars",
    "MarsCannotActive",
    "MarsCancelActive",
    "MoonGiftScroll",
    "MenuBgDecadeUnited",
    "SoundTag",
    "PilotVoice",
    "chunks:///_virtual/SoundMgr.ts",
    "AudioSource",
    "2d643wqPwFC9IIZN2vBuG4P",
    "audioSource",
    "stopWithTag",
    "audioContext",
    "audioCaches",
    "audioChannelsWithTag",
    "bufferSources",
    "inBackground",
    "createWebAudioContext",
    "audioInterruptionBegin",
    "audioInterruptionEnd",
    "toBackground",
    "toForeground",
    "getChannelLimit",
    "getIdleChannel",
    "getCached",
    "destination",
    "onended",
    "utils",
    "getUrlWithUuid",
    ".mp3",
    "downloadFile",
    "tempFilePath",
    "getFileSystemManager",
    "copyFile",
    " 保存失败",
    " 下载失败",
    "loadFromCache",
    "readFile",
    "decodeAudioData",
    " 解码失败",
    " 读取文件失败",
    "env",
    "USER_DATA_PATH",
    "access",
    "createBufferSource",
    "soundChannels",
    "soundCache",
    "persistNode",
    "maxAudioChannel",
    "SimpleSoundPlayer",
    "afterSceneLaunch",
    "SOUND_CHANNEL_THRESHOLD",
    "playing",
    "bufferSource",
    "pauseTime",
    "soundName",
    "doPlay",
    "musicSource",
    "musicName",
    "isPlayingOnHide",
    "getSoundData",
    ".ogg",
    "getSoundName",
    "soundPlayer",
    "musicPlayer",
    "playWithTag",
    "_enable",
    "soundsLastPlayTimes",
    "enable",
    "chunks:///_virtual/SplitRequestData.ts",
    "193034qcXJJGIm/ssG/651k",
    "chunks:///_virtual/Stage.ts",
    "f1507uH46JBKJg5PxLVBIxP",
    "Next",
    "StageUIType",
    "NewStage",
    "BossStageInfoUnlockType",
    "UnPass",
    "Pass",
    "chunks:///_virtual/StageData.ts",
    "52a29V70IFFCLjLVNtM70Kq",
    "bJustPassHmStage",
    "bJustPassStage",
    "bossPasss",
    "bossStageIDs",
    "bossSubStageIDs",
    "bossTodayTimes",
    "nextHmStageID",
    "nextHmSubStageID",
    "stageHmIDs",
    "stageHmNums",
    "stageIDs",
    "stageNums",
    "starsHm",
    "subHmStageNum",
    "subHmStageTotal",
    "subStageHmIDs",
    "subStageIDs",
    "subStageNum",
    "subStageTotal",
    "todayHmTimes",
    "todayTimes",
    "unlockHmStageID",
    "unlockStageID",
    "lastType",
    "lastHmType",
    "stageInfoMap",
    "isKnowStoryState",
    "isKnowHeroModeState",
    "isKnowBossState",
    "isKnowPeriodState",
    "stagePeriodData",
    "setStageInfoConfig",
    "addStageInfo",
    "getPreStageIDAndSubStageID",
    "getSubStageTotal",
    "initStageNums",
    "isBossPass",
    "isJustPassStage",
    "[StageData] setStageInfo stageID : ",
    " subStageID : ",
    " starNum : ",
    " todayTime : ",
    "getStageInfoData",
    "getStageNum",
    "getLastType",
    "setLastType",
    "chunks:///_virtual/StageMgr.ts",
    "fcfb2d6mWtHzZrwgI76/fWS",
    "enemyLootActions",
    "enemyActionIndexWormHole",
    "enemyCreateTime",
    "waveIndex",
    "waveCreateTime",
    "lastUpdateDebugLabelTime",
    "enemyGroupIndex",
    "enemyRanCreateTime",
    "bSetMap",
    "enemyRanLootCount",
    "ctpSafeCount",
    "gotoSumCount",
    "gotoSumTime",
    "pausePlaneShootWithoutBoss",
    "debugLabel",
    "stage:",
    " wave:",
    " type:",
    "[StageMgr] init error, param NULL!",
    "ENEMY_NORMAL",
    "setEnemyActionIndex",
    "cycleEnemyCreate",
    "cycleEnemyAction",
    "dashNum:",
    "[StageMgr] saveProgress endlessIndex:",
    " enemyActionIndex:",
    "[StageMgr] cycleEnemyAction enemyActionIndex:",
    " waveIndex:",
    " waveID:",
    " time:",
    "[StageMgr] add boss",
    "generateEnemies",
    "[StageMgr] ",
    "addNormalEnemy",
    "addRandomEnemy",
    " stage:",
    ", enemyWaveID:",
    ", enemyID:",
    ", anim:",
    "\nenemy:",
    " ; ",
    "SP_NONE",
    "SP_OPEN",
    "SP_END",
    "chunks:///_virtual/StageUIMgr.ts",
    "SweepRequestData",
    "UnlockPveRequestData",
    "UnlockPveHeroRequestData",
    "ad76c38kwFGm41s2kpipEK2",
    "_curBossStageId",
    "_bossInfoIndex",
    "_isShowUI",
    "_bossHandleType",
    "_periodHandleType",
    "_unlockStageMode",
    "_stageShowStageParam",
    "_periodShowSubStageId",
    "setStageShowStageParam",
    "setPeriodSubStageIdByStageId",
    "setShowPeriodSubStageId",
    "getStageLimitNum",
    "getVipAddLimitNum",
    "HeroModeCostTimesAdd",
    "StoryType1TimesAdd",
    "StoryType2TimesAdd",
    "setBossSubStageIdByStageId",
    "getBossSubStageIdByStageId",
    "startBossModeGame",
    "setBattleData",
    "sendPveRequestData",
    "setupEndlessGame",
    "sweepCardId",
    "activeInHierarchy",
    "bossInfoIndex",
    "stageShowStageParam",
    "chunks:///_virtual/StoreFirstInfoRequestData.ts",
    "8c98aN4fuFNDb37F1aA5KA/",
    "chunks:///_virtual/StoreFirstPayData.ts",
    "e55a1C8nIVMhaXVLdTbirxu",
    "chunks:///_virtual/StoreFund.ts",
    "7e529szpT9Ei6sOYcRoFXDv",
    "Unpurchased",
    "chunks:///_virtual/StoreFundItem.ts",
    "b4ea5P2bz5NQoSe4sujZx1H",
    "targetNode",
    "proBgIcon",
    "proUnlockSprite",
    "proCompleteSprite",
    "proUnlockNumNode",
    "proCompleteNumNode",
    "leftBgSprite",
    "leftReward",
    "leftUnlockNode",
    "leftCompleteNode",
    "rightBgSprite",
    "rightRewards",
    "rightLockNodes",
    "rightUnlockNode",
    "rightCompleteNodes",
    "leftStageAnim",
    "centerStageAnim",
    "rightStageAnim",
    "leftEndlessAnim",
    "centerEndlessAnim",
    "rightEndlessAnim",
    "fundConfig",
    "fundType",
    "refreshItemAssets",
    "onBtnItemClick",
    "AM-Fund-FX-L",
    "AM-Fund-FX-R",
    "AM-Fund-FX-M",
    "fund-level-ordinary-bg",
    "fund-level-Luxury-bg",
    "Star-no",
    "Star-yes",
    "Star2",
    "fund-unlimited-ordinary-bg",
    "fund-unlimited-Luxury-bg",
    "score-bg-no",
    "score-bg-yes",
    "score-bg2",
    "fund-unlimited-",
    "sendGainFundRequestData",
    "chunks:///_virtual/StoreFundPayData.ts",
    "20967yXe4dKk5h0AINfrZH6",
    "isUnlocked",
    "setServerFundData",
    "rechargeSuccess",
    "refreshNodesState",
    "chunks:///_virtual/StoreFundProgressBarItem.ts",
    "f7770+he1pF/JF3Af2NV0Xu",
    "chunks:///_virtual/StoreGiftBagItem.ts",
    "56331oWIAxAtotJAWIqvyt/",
    "StoreGiftBagItem",
    "boardSpr",
    "rewards",
    "limitedLabel",
    "remainNumLabel",
    "redDotNode",
    "hotSaleNode",
    "discountLabel",
    "isSellOut",
    "isTimeOut",
    "set_PeriodData",
    "refreshItem",
    "refreshHotSale",
    "buyCnt",
    "loadBoard",
    "loadIcon",
    "refreshLimitUI",
    "refreshGiftUI",
    "showRefreshTime",
    "getLimitTitle",
    "getBuyCountNum",
    "E20808",
    "0AFF00",
    "formatCountDownTime",
    "每日限购",
    "每周限购",
    "每月限购",
    "refreshPriceUI",
    "getRewardScale",
    "已售完",
    "已结束",
    "sendBuyStoreFreePeriodRequestData",
    "sendBuyStorePeriodRequestData",
    "chunks:///_virtual/StoreMallFree.ts",
    "StoreMallFreeItem",
    "fbea5VewplKLrnAUxlCJZHP",
    "chunks:///_virtual/StoreMallFreeItem.ts",
    "adeb58K3CZHB4O2fwKU4w8s",
    "freeNode",
    "freeLabel",
    "dataConfig",
    "isFree",
    "免费(",
    "今日免费次数已用尽",
    "sendBuyStoreFreeRequestData",
    "chunks:///_virtual/StoreMallMoney.ts",
    "StoreMallMoneyItem",
    "6d92cO75dtHhpRDOcOCDxoR",
    "getRechargeMoneyDatas",
    "chunks:///_virtual/StoreMallMoneyItem.ts",
    "297dbTYFSBHD6UwVzBMnvmb",
    "diamondLabel",
    "moneyData",
    "是否购买 ",
    " 金币",
    "sendRechargeMoneyRequestData",
    "购买金币异常",
    "chunks:///_virtual/StoreMallSale.ts",
    "7bf07jn909GLIruBwppD2M7",
    "StoreMallSale",
    "chunks:///_virtual/StoreMallStage.ts",
    "StoreMallStageItem",
    "aa462k3F5FL3Jt8F+3UCUhz",
    "curItem",
    "nextItem",
    "spineAnim",
    "showItem",
    "curStageId",
    "maxStageId",
    "getCanReceiveStoreStateId",
    "resetPosition",
    "refreshStageInfo",
    "changeBgAnimation",
    "getStoreStages",
    "freeCnt",
    "clearAnimations",
    "chunks:///_virtual/StoreMallStageItem.ts",
    "9ae55QJ16BEsqpxC9UubPSr",
    "stageBg",
    "stageBgOpacity",
    "starSymbols",
    "starSymbolAnim",
    "starSignLineBg",
    "starSignPointBg",
    "purchaseRewards",
    "priceNode",
    "originalPriceLab",
    "curPriceLab",
    "priceTipLabel",
    "saleLabel",
    "freeBg",
    "freeBgOpacity",
    "freeTitleLabel",
    "freeRewards",
    "receiveBtn",
    "receiveLabel",
    "storeStageData",
    "isCanReceive",
    "stageData",
    "shadowColor",
    "stopTweenAnim",
    "onBtnReceivedClick",
    "通过闯关模式第",
    "章后可领取",
    "sendGainStoreStageRequestData",
    "onBtnPurchaseClick",
    "sendBuyStoreStageRequestData",
    "chunks:///_virtual/StoreMallStagePayData.ts",
    "00f36d0TLlDTbiD3iBlZB6s",
    "setBuyAndFreeCnt",
    "refreshBuyCnt",
    "refreshFreeCnt",
    "chunks:///_virtual/StoreMgr.ts",
    "cb526xXE4FGZ5J2BRcNwLtV",
    "rechargeId",
    "fundPhaseId",
    "fundIds",
    "firstDayId",
    "getStoreMallStageDatas",
    "getStoreFundPayDatas",
    "sendRechargeM2RequestData",
    "checkMallRedDot",
    "checkFundRedDot",
    "refreshFundItemData",
    "setBuyCntAndRefreshTime",
    "refreshStorePeriodRedDot",
    "refreshStorePeriod",
    "refreshStoreMall",
    "refreshStoreFirst",
    "礼包购买成功，感谢支持！\n祝您游戏愉快！",
    "setBuyStoreFirst",
    "refreshStoreFrees",
    "chunks:///_virtual/StorePeriodInfoRequestData.ts",
    "e92d8HA4opB6ZHZcBwYArbW",
    "chunks:///_virtual/StorePeriodPayData.ts",
    "d8440dU18ZA8Iy1Mozq2cTn",
    "chunks:///_virtual/StoreRechargeItem.ts",
    "60f4a51h5VDILm18D+CCAxl",
    "StoreRechargeItem",
    "firstNode",
    "extraDiamondLabel",
    "gameUI/shopUI/new/recharge-diamond",
    "chunks:///_virtual/StoresData.ts",
    "9538fRJGzpJH65DGhYZS7x4",
    "popupFirstRechargeShowTimeKey",
    "PopupFirstRechargeShowKey",
    "sortById",
    "getCanReceiveStoreFree",
    "getFundDataConfig",
    "storeFirstUnlock",
    "hasStoreFirstRewards",
    "getAutoPopupFristRecharge",
    "isPopupFirstRechargeSameDay",
    "chunks:///_virtual/StreamHelper.ts",
    "2d48fIBujFOori4b4c8O3Kq",
    "shortToByteArray",
    "integerToByteArray",
    "intToByteArray",
    "longToByteArray",
    "byteArrayToShort",
    "byteArrayToInteger",
    "byteArrayToInt",
    "byteArrayToLong",
    "floatToByteArray",
    "byteArrayToFloat",
    "doubleToByteArray",
    "byteArrayToDouble",
    "utf16ToUtf8Array",
    "stringToByteArray",
    "byteArrayToString",
    "convertToByte",
    "printByteArray",
    "Print byte array with length:",
    "crcTable",
    "float32 bytes : ",
    "float32 value : ",
    "randomBuffer",
    "chunks:///_virtual/StreamReader.ts",
    "44033xSnqBNgJiNLUzXMphh",
    "checkSize",
    "readByte",
    "readInteger",
    "readFloat",
    "readDouble",
    "readUtf",
    "chunks:///_virtual/StreamWriter.ts",
    "5f787yyRyNF0J5tEP0nA+qN",
    "writeByte",
    "writeFloat",
    "writeDouble",
    "writeUtf",
    "expandBuffer",
    "chunks:///_virtual/StringTool.ts",
    "d36ednsljpPSK9VOt9pD092",
    "isDoubleWidthChar",
    "getValueStringWithUnit",
    "chunks:///_virtual/StringUtil.ts",
    "8d2e7c2undMto2LVfwhWzLN",
    "chunks:///_virtual/SweepRequestData.ts",
    "046c1poqXlMhbRXR7753AbT",
    "chunks:///_virtual/SysmsgItemRequestData.ts",
    "7dc49u6c7FNbaXg0k30saqp",
    "chunks:///_virtual/SystemMessageData.ts",
    "668adOLX91BiptmETA4xl66",
    "chunks:///_virtual/SystemUnlock.ts",
    "61a0aOBEDlPKLZ9erIjMPXD",
    "chunks:///_virtual/SystemUnlockMgr.ts",
    "8954f7gDWhI2YubjriJGdI3",
    "jumpIdMap",
    "chunks:///_virtual/tdanalytics.mg.cocoscreator.min.js",
    "3.0.2",
    "utm_source",
    "utm_medium",
    "utm_campaign",
    "utm_content",
    "utm_term",
    "Encryption failed, return the original data",
    "Encryption failed, return the original data: ",
    "getUtm",
    "getQueryParam",
    "get utm fail: ",
    "[\\?&]",
    "=([^&#]*)",
    "getUtmFromQuery",
    "checkCalibration",
    "[ThinkingData] Info: ",
    "[ThinkingData] Warning: ",
    "thinkingdata",
    "thinkingdata_mg",
    "removeStorage",
    "ta_page_show",
    "#url_path",
    "#utm",
    "ta_mp_launch",
    "ta_mp_hide",
    "ta_mp_show",
    "flush",
    "ta_mp_share",
    "The system did not get a value",
    "ta_mp_view",
    "ta_mg_hide",
    "ta_mg_show",
    "setStorageSync",
    "deleteStorage",
    "ThinkingAnalytics: we do not set global name for TA instance when you do not enable auto track.",
    "Cannot get launch options.",
    "thinkingdata_wechat",
    "thinkingdata_wechat_game",
    "thinkingdata_qq",
    "thinkingdata_qq_game",
    "thinkingdata_swan",
    "thinkingdata_swan_game",
    "thinkingdata_tt_game",
    "thinkingdata_tt",
    "thinkingdata_ali",
    "thinkingdata_ali_game",
    "thinkingdata_dd",
    "thinkingdata_kuaishou",
    "thinkingdata_qh360",
    "thinkingdata_tb",
    "thinkingdata_jd",
    "thinkingdata_qg_vivo_game",
    "thinkingdata_qg_oppo_game",
    "thinkingdata_qg_huawei_game",
    "thinkingdata_qg_mz_game",
    "thinkingdata_qg",
    "runTime",
    "invalid data",
    "invalid APP ID",
    "Unknown return code",
    "Unknown error",
    "dryrun",
    "HttpTaskDebug",
    "appid=",
    "#app_id",
    "&source=client&dryRun=",
    "&deviceId=",
    "&data=",
    "application/x-www-form-urlencoded",
    "errorLevel",
    "Verify data success.",
    "errorProperties",
    "errorReason",
    " propertyName:",
    " errorReasons:",
    "Debug data error. errorLevel:",
    " reason:",
    "errorReasons",
    "The current mode is Debug",
    "debugOnly",
    "The current mode is debugOnly",
    "#flush_time",
    "runTimeout",
    "resetTimeout",
    "#device_id",
    "#network_type",
    "systemLanguage",
    "initDeviceId",
    "batchConfig",
    "storageKey",
    "ta_mpsdk_",
    "maxLimit",
    "batchList",
    "tab_tampsdk_",
    "dataHasChange",
    "dataSendTimeStamp",
    "batchInterval",
    "loopWrite",
    "loopSend",
    "batchWrite",
    "batchSend",
    "Flush success: ",
    "batchRemove",
    "/sync_xcx",
    "enableLog",
    "ta_isOptOut",
    "enableBatch",
    "batchConsumer",
    "initSystemInfo",
    "?appid=",
    "Get remote config success(",
    ") :",
    "sync_batch_size",
    "sync_interval",
    "disable_event_list",
    "secret_key",
    "secretKey",
    "Get remote config fail(",
    "TDAnalytics SDK initialize success, AppId = ",
    ", ServerUrl = ",
    ", Mode = ",
    ", DeviceId = ",
    ", Lib = ",
    ", LibVersion = ",
    "SDK is Pause or Stop!",
    "#account_id",
    "track_update",
    "track_overwrite",
    "#event_name",
    "#event_id",
    "extraId",
    "firstCheckId",
    "#first_check_id",
    "#duration",
    "#uuid",
    "Tracking data, ",
    "dryRun",
    "Disabled Event : ",
    "trackUpdate",
    "eventId",
    "enableCalibrationTime",
    "Invalide parameter for trackUpdate: you should pass an object contains eventId to trackUpdate()",
    "trackOverwrite",
    "Invalide parameter for trackOverwrite: you should pass an object contains eventId to trackOverwrite()",
    "trackFirstEvent",
    "Invalide parameter for trackFirstEvent: you should pass an object contains eventName to trackFirstEvent()",
    "user_set",
    "user_setOnce",
    "user_unset",
    "user_add",
    "user_append",
    "user_uniq_append",
    "Setting distinct ID, DistinctId = ",
    "Login SDK, AccountId = ",
    "Logout SDK",
    "#os",
    "#screen_width",
    "#screen_height",
    "#device_model",
    "#os_version",
    "#manufacturer",
    "SAVE_ONLY",
    "Change Status to ",
    "taJs",
    "startThinkingAnalyticsForNative",
    "trackUpdateForNative",
    "trackOverwriteForNative",
    "trackFirstEventForNative",
    "flushForNative",
    "trackUpdate:appId:",
    "trackFirstEvent:appId:",
    "trackOverwrite:appId:",
    "flush:",
    "initWithConfig",
    "initWithConfig:",
    "lightInstance:",
    "startThinkingAnalytics",
    "startThinkingAnalytics:",
    "ThinkingAnalyticsAPI",
    "ThinkingAnalyticsAPIForJS",
    "_shareInstance",
    "_instanceMaps",
    "_defaultInstance",
    "userDelete",
    "getSDKVersion",
    "1.0.0",
    "ThinkingDataAPI",
    "TDAnalytics",
    "chunks:///_virtual/tdanalytics.mg.cocoscreator.min.mjs_cjs=&original=.js",
    "./tdanalytics.mg.cocoscreator.min.js",
    "chunks:///_virtual/TestData.ts",
    "5f25cEO4wxFCaSyRoDGnfF9",
    "TestData",
    "test_query",
    "123123",
    "chunks:///_virtual/TestRequestData.ts",
    "e66cfIYNPRDHI1QQshOzN5r",
    "TestRequestData",
    "clientSayHello",
    "chunks:///_virtual/ThunderStoryShareBtn.ts",
    "aac01XEui5DhYi1TFX/8/Y4",
    "link",
    "story-btn-share.png",
    "L4ObX0hXxoqdaGdJf7aefxQBEr_n9kO82uoXX8Xn3sDei2g2e_LjZ6Bd6x7i9jyrNTsbUFBlk0qxwt_hqurm21Kw8HN5wOxjKqsUEsLdNPR2OmEggUfRc-wiXGNuNdvFEKzz8Y5p3JqOH8qqUeLO4sA",
    "chunks:///_virtual/TimeStringType.ts",
    "39687YVtihAmY4/oYeWMdD/",
    "Second",
    "Hour",
    "Day",
    "chunks:///_virtual/TimeTool.ts",
    "42217TIiBtPlpMJYDtpmJG9",
    "_serverOffset",
    "minTimeType",
    "maxTimeType",
    "customString",
    "defaultStr",
    "TimeToHHMMSS",
    "HOUR",
    "MILLISECOND",
    "MINUTE",
    "formatConversion",
    "TimeToMMSS",
    "getFormatTimeParams",
    "padStart",
    "year",
    "month",
    "hours",
    "minutes",
    "seconds",
    "isSameWeek",
    "getDay",
    "setDate",
    "setHours",
    "0分0秒",
    "DAYMILL",
    "chunks:///_virtual/TipPopup.ts",
    "31c0dROxg1HpoZ4/iI2DDQ9",
    "TipPopup",
    "TipPopupType",
    "EndlessCupOver",
    "MoonSign",
    "chunks:///_virtual/TipPopupMgr.ts",
    "53dfces5axJjId80d6/BcEE",
    "popupList",
    "_inShowPopupToList",
    "_tipPopupMap",
    "refreshEndlessCup",
    "isMainPage",
    "showLimitTipPopup",
    "isStagePage",
    "popupEndlessCup",
    "condition",
    "showPopupToList",
    "componentType",
    "popupRootType",
    "showNextPopup",
    "clientDataBoolProperty",
    "updateClientDataFunc",
    "chunks:///_virtual/Tips.ts",
    "609a7BlsqVDLZwMcSXE/j65",
    "chunks:///_virtual/TipShow.ts",
    "10dbb5VGXZOD7pfyhtqGnsN",
    "TipShow",
    "tip",
    "chunks:///_virtual/TipsMgr.ts",
    "79282L+gwVK9rsqMzDNW7zs",
    "getHttpTipsData",
    "加载遇到了一些问题，请检查网络环境是否正常，若网络环境正常，可尝试使用<color=FFCC00>修复</c>功能",
    "chunks:///_virtual/TopBulletinRequestData.ts",
    "875cdoRiJFJwZHzHr1qUK6u",
    "TopBulletinRequestData",
    "lastTopBulletinVersion",
    "chunks:///_virtual/Tracer.ts",
    "extends",
    "beffae7+5BLwJJ7MywKgEAR",
    "Tracer init",
    "initTD",
    "userProps",
    "savedUserProps",
    "userOnceProps",
    "savedUserOnceProps",
    "8a85c9d010ab4860b3f2937ff99c1384",
    "https://ssdata.99aly.com/",
    "Tracer login ",
    "isValueEqual",
    "chunks:///_virtual/TrackGroup.ts",
    "66ea4/5y4tKFJaQS/6FuQ/E",
    "chunks:///_virtual/TreasureHuntData.ts",
    "02ea9PlK2NAt58Hgyn/ZWho",
    "currentConfig",
    "isAds",
    "setRedDot",
    "setConfig",
    "setAds",
    "chunks:///_virtual/TreasureInfoType.ts",
    "1c4ccWE6JZIaIYeaGfp87RX",
    "chunks:///_virtual/TreasureSignItem.ts",
    "95b49WmJzlE3IlbF9vgk5sd",
    "claimBtn",
    "isClicked",
    "AM-SignChest-Receive",
    "AM-SignChest-Received",
    "AM-SignChest-Normal",
    "onClickClaim",
    "chunks:///_virtual/TreasureWheelMgr.ts",
    "TurnTableBuyRequestData",
    "TurnTableLastRefreshTimeRequestData",
    "TurnTableShowRequestData",
    "4dd3ekuxspKVITkjXetibC9",
    "sendTurnTableBuyRequestData",
    "sendTurnTableLastRefreshTimeRequestData",
    "chunks:///_virtual/TurnTableBuyRequestData.ts",
    "d3b6eL4LXJNmKhuCgoc4WfP",
    "chunks:///_virtual/TurnTableLastRefreshTimeRequestData.ts",
    "034bfKqfOxP/5v82rarI+p7",
    "chunks:///_virtual/TurnTableShowRequestData.ts",
    "a623bziaQJKFZr5VV1jU/HY",
    "chunks:///_virtual/TurnToDirAnim.ts",
    "ccc8a3f4o5NH4M7FJUqjDj4",
    "turnDelayCount",
    "turnToDir",
    "tileSequenceIndex",
    "tileSequence",
    "turnDelays",
    "turnToPreHandle",
    "turnTo",
    "[TurnToDirAnim] reset",
    "[TurnToDirAnim] turnTo: ",
    ", raw:",
    ", mx:",
    "， tileID:",
    "[TurnToDirAnim] cycleTurnTo: ",
    "chunks:///_virtual/TypeScriptTool.ts",
    "dc9e3EZmCZFoL+M4uy8DM+P",
    "TypeScriptTool",
    "deepClone",
    "Unable to copy obj! Its type isn't supported.",
    "chunks:///_virtual/UIAbout.ts",
    "a1d7fbj6qhCgLQXKbiHL5Sw",
    "lisaAnim",
    "endlessHighScoreLabel",
    "normalStageLabel",
    "无尽模式历史最高分：",
    "闯关模式征战进度：",
    "onBtnCGClick",
    "onBtnTermsOfService",
    "openURL",
    "https://privacy.lightboat.games/terminator.html",
    "backUI",
    "chunks:///_virtual/UIAdapter.ts",
    "9db669RA8dLCpdzIZdViDWE",
    "UIAdapter",
    "fitWidth",
    "fitHeight",
    "maxWidth",
    "maxHeight",
    "adjustPosition",
    "chunks:///_virtual/UIBase.ts",
    "44bbcAtTqRJjKHhM0AIVbQ1",
    "backgroundMusic",
    "bottomBGNode",
    "bottomCenterNode",
    "bottomNode",
    "inStack",
    "bottomBGHeight",
    "bottomCenterHeight",
    "bottomHeight",
    "bottomNodes",
    "bottomHeights",
    "isShowTopUI",
    "uiEnum",
    "originPrefab",
    "preInitCallbackCalled",
    "doOnEnable",
    "doOnDisable",
    "adaptTopUI",
    "isTopUIVisible",
    "setTopUI",
    "setBottomUI",
    "setNodeScale",
    "isAlignTop",
    "isAlignBottom",
    "getInStack",
    "getParams",
    "chunks:///_virtual/UIBattle.ts",
    "SubContextView",
    "133cbmjMhJDsruEYx4bf5qH",
    "topNode",
    "btnPause",
    "pausePvpNode",
    "pvpRivalInfoNode",
    "pvpRivalFriendHeadIcon",
    "pvpRivalNameLabel",
    "pvpRivalScoreLabel",
    "pvpRivalOverNode",
    "pvpRivalBeatNode",
    "pvpLocalPlayerOfflineNode",
    "planeHpYellow",
    "planeHpRed",
    "planeHpDeepRed",
    "endlessRewardNode",
    "endlessRewardLabel",
    "endlessBossRewardBoxAnimation",
    "endlessBossRewardNode",
    "bossHps",
    "bossNameLabel",
    "victoryNode",
    "subContextView",
    "subContextContentWidget",
    "bossLeaveTimeSprite",
    "bossLeaveTimeSprites",
    "bgmNameNode",
    "bgmNameLabel",
    "bgmNameSubLabel",
    "popupCountDown",
    "pirateEscapeAE",
    "victoryAE",
    "subContextUpdateScoreInterval",
    "bossLeaveWink",
    "bossLeaveMilliSecond",
    "bossLeaveSecond",
    "bossLeaveMinute",
    "cachedEndlessBossRewardBoxAnimation",
    "equipDpsInfoNode",
    "equipDpsInfoItems",
    "lastSoundData",
    "showedSoundDataIDs",
    "lastRivalScore",
    "lastRivalState",
    "gameUI/prefab/battle/P-Battle-Debug",
    "gameUI/prefab/battle/P-Damage-Debug",
    "gameUI/gameUI/victory",
    "gameUI/gameUI/effect-pirate-escape",
    "onBtnPause",
    "cyclePlaneHp",
    "cycleBossHP",
    "updateGameScore",
    "PLANE_SAFE_HP_RATE",
    "ItemEquipDamageLog",
    "planeData",
    "printEquipDamageLog",
    "hideEquipDpsInfo",
    "updateDisplay",
    "AM-ingame-award-end",
    "getBezierVec2",
    "cubicInOut",
    "sineIn",
    "second",
    "milliSecond",
    "[UIBattle] handleNetError",
    "[UIBattle] handleNetError BattleMgr.instance is null, skip handle any error",
    "[UIBattle] handleNetError BattleMgr.state is S_LOAD or S_READY, skip handle any error",
    "[NetMgr] handleNetError 自动重连中，不处理",
    "\n点击确定返回首页",
    "[UIBattle] clear battle progress when battle cheat",
    "\n点击确定重启游戏",
    "\n点击确定返回登录",
    "switchToLogin",
    "\n点击确定再次结算，点击取消返回登录",
    "chunks:///_virtual/UICG.ts",
    "77a2dlQkJhD4LVIeuXs5fcN",
    "cgNode",
    "crystalNode",
    "crystalBg",
    "crystalAE",
    "crystalSmokeAE",
    "crystalStarAE",
    "crystalLabel",
    "crystalBgBallSpriteFrames",
    "bombLabel",
    "intrusionNode",
    "intrusionAE",
    "intrusionLabel",
    "takeOffNode",
    "takeOffAE",
    "takeOffLabel",
    "wantNode",
    "wantAE",
    "skipButton",
    "cgStep",
    "isEnd",
    "openCG",
    "typeWritingLabel",
    "createCrystalBgBalls",
    "CG_STEP_CRYSTAL",
    "ANIM_CRYSTAL",
    "CG_STEP_BOMB",
    "ANIM_BOMB",
    "CG_STEP_INTRUSION",
    "ANIM_INTRUSION",
    "CG_STEP_TAKEOFF",
    "ANIM_TAKEOFF",
    "CG_STEP_WANT",
    "ANIM_WANT",
    "finishCG",
    "onSkipBtnClick",
    "ANIM_SMOKE",
    "ANIM_STAR",
    "ANIM_LIGHT",
    "chunks:///_virtual/UIDailyTask.ts",
    "2b61b6m/5RA0bGzZW5S+RGF",
    "taskList",
    "taskStage",
    "closeCb",
    "runBottomOpenAnim",
    "runBottomCloseAnim",
    "chunks:///_virtual/UIDecadeMilestonePanel.ts",
    "b87b4i/PgZBNLPT+RDiU7te",
    "UIDecadeMilestonePanel",
    "camera3D",
    "item3DBgNode",
    "itemParent3DNode",
    "itemParent3DItemStatus",
    "milestoneItems",
    "itemOffset",
    "bgMoveRatio",
    "renderNode",
    "titleWidget",
    "itemScroll",
    "uiContentTran",
    "mirrorBtns",
    "mirrorChestInfo",
    "bottomAni",
    "renderPos",
    "allMilestoneDatas",
    "fixedIndex",
    "scrollMaxOffset",
    "renderOffsetY",
    "initMilestoneItemOpacity",
    "showMilestoneItem",
    "updateMirrorBtnPos",
    "scrollToItem",
    "initMirrorChestInfoPos",
    "onBtnMirrorChestInfoClick",
    "initBottomAnimation",
    "runBottomCloseAnimationCallback",
    "hideItemChestInfo",
    "OnScrollValueChanged",
    "initMirrorClick",
    "isScrolling",
    "worldToScreen",
    "updateMirrorChestInfoPos",
    "chunks:///_virtual/UIDecadeUniteInvite.ts",
    "2b81aE3KCFJ4aspcpDSCbdm",
    "inviteNumSprite",
    "inviteRewardGainNum",
    "inviteScrollView",
    "inviteStageParent",
    "inviteItemPrefab",
    "curInviteStageSelectNode",
    "inviteStageEmptyProgressParent",
    "inviteEmptyProgressItemPrefab",
    "inviteStageProgressParent",
    "inviteProgressItemPrefab",
    "boxComp",
    "shareTipLabel",
    "clickTopNode",
    "uiAnimation",
    "randomPlayerWidget",
    "_stageCompList",
    "_progressCompList",
    "_curInviteNum",
    "_openAnimName",
    "10yInvite-UI-In",
    "onBtnTopNodeClick",
    "邀请阶段列表初始化结束",
    "initProgress",
    "邀请进度条初始化结束",
    "runBottomOpenAnimationCallback",
    "邀请阶段列表初始化开始 totalLoadCount: ",
    "initShareConfig",
    "refreshCurStage",
    "refreshInviteNum",
    "refreshInviteRewardGainNum",
    "refreshTips",
    "refreshBox",
    "refreshBoxLevel",
    "refreshRandomPlayer",
    "gameUI/TenYears/Retrieve-BigBox-grade-",
    "今日可领取次数 <size=26><color=#FFEA31>",
    "/1</color></size>",
    "邀请阶段列表刷新开始 this._stageCompList.length: ",
    "onBtnChangePlayerClick",
    "chunks:///_virtual/UIDecadeUniteMainPage.ts",
    "19de7V7MLRLFLsqzIo83BeW",
    "UIDecadeUniteMainPage",
    "danmakuMgr",
    "mainAnim",
    "milestoneAni",
    "recallLabel",
    "weekBtnAnim",
    "skinBtnAnim",
    "danmakuOnSpriteFrame",
    "danmakuOffSpriteFrame",
    "inviteNumLabel",
    "backPlaneAnimation",
    "backPlaneLoopAnimation",
    "backPlaneLoopAnimationDelay",
    "isHiding",
    "AM-Btn-7Day-keep",
    "AM-Btn-Skin-keep",
    "showMilestoneAni",
    "showMilestoneRecallUI",
    "AM-Btn-7Day-begin",
    "AM-Btn-Skin-begin",
    "AM-decade-unite-TOP-begin",
    "playMilestoneKeepAni",
    "AM-decade-unite-TOP-keep",
    "onBtnWeekTask",
    "onBtnMilestone",
    "onBtnSkinClick",
    "onBtnStory",
    "onBtnDanmakuSend",
    "弹幕已关闭",
    "onBtnDanmakuToggle",
    "onBtnInviteClick",
    "onBtnBack",
    "chunks:///_virtual/UIDecadeUniteSkin.ts",
    "bc112038ERNVqYbsh8TP/bO",
    "touchNode",
    "pagePoints",
    "skinTicket",
    "planeSkinName",
    "planeDesc",
    "skinEquips",
    "activateNode",
    "activatedNode",
    "activateBtn",
    "activateBtnAnim",
    "endTimeLabel",
    "curSkinExhibition",
    "nextSkinExhibition",
    "activateAnimation",
    "titleContent",
    "equipDescContent",
    "curSkinId",
    "lastSkinId",
    "curSkin",
    "curSkinParam",
    "skinExhibition",
    "touchPos",
    "isTouchDown",
    "_uiOpenAnim",
    "AM-DecadeUnite-Skin-Open",
    "_uiKeepAnim",
    "AM-DecadeUnite-Skin-Keep",
    "_activateAnim",
    "AM-Skin-Activating",
    "_lastState",
    "_refreshLabelTime",
    "initMap",
    "initUIAnimation",
    "initActivateAnimation",
    "initEquipInfo",
    "initPagePoint",
    "预加载两侧箭头动画结束",
    "preloadActivatePopup",
    "预加载激活弹窗结束",
    "onUIAnimationFinished",
    "onActivateAnimationFinished",
    "initBgPrefab",
    "getSkinParam",
    "bgPrefab",
    "initTicketSpriteFrame",
    "gameUI/TenYears/",
    "ticketSpFr",
    "refreshActivite",
    "initView",
    "distance",
    "turnNextPlane",
    "refreshSkinId",
    "refreshCurSkinParam",
    "refreshSkinExhibition",
    "refreshPlane",
    "refreshEquip",
    "refreshTicket",
    "refreshPoint",
    "refreshEndTimeLabel",
    "runNextPlaneAnim",
    "runNameAction",
    "refreshAttr",
    "refreshBgPrefab",
    "loadBgPrefab",
    "every",
    "playActivateAnim",
    "runNameHideAnim",
    "runNameShowAnim",
    "onBtnTicketInfoClick",
    "onBtnLeftArrowClick",
    "onBtnRightArrowClick",
    "onBtnSkinActivateClick",
    "chunks:///_virtual/UIEndlessAid.ts",
    "UIEndlessBase",
    "cb1ceTv8SNBuqPsYr+0U6sy",
    "aidList",
    "startButton",
    "jumpType",
    "onBtnStartClick",
    "isPlayingCloseAnim",
    "chunks:///_virtual/UIEndlessBase.ts",
    "5f832n4oypB56WTDMJyRN/F",
    "tipShow",
    "scrollViewWidget",
    "centerAnimation",
    "blockInputWhilePlayAnim",
    "originWidgetTop",
    "setupEndlessDoubleGoldActivity",
    "AM-BottomBGNode-Btn-comein",
    "AM-BottomBGNode-Btn-goout",
    "chunks:///_virtual/UIEndlessBuyReady.ts",
    "f6f5eNk6KNAEJd38vbFK2Az",
    "readyList",
    "readyItemPrefab",
    "randomEffectLabel",
    "randomEffectLabelAnimBg",
    "randomEffectLabelAnimLaser",
    "randomEffectLabelAnimBoard",
    "pveSpriteFrame",
    "pvePressSpriteFrame",
    "pvpSpriteFrame",
    "pvpPressSpriteFrame",
    "itemDatas",
    "refreshRandomEffectLabel",
    "startPvpMatch",
    "chunks:///_virtual/UIEndlessFriendRank.ts",
    "UserInfoButton",
    "d1bd9chYVJIRLSXILElzDhf",
    "userInfoBtn",
    "endlessFriendButton",
    "endlessWorldButton",
    "lastPopupCount",
    "onBtnFriendEndless",
    "onBtnWorldEndless",
    "onBtnInvite",
    "chunks:///_virtual/UIEndlessWorldPvp.ts",
    "6f73cDuempDWpb6MwVbs7LX",
    "pvpTokenLabel",
    "itemLayout",
    "shopButton",
    "battleInfoButton",
    "notOpenLabel",
    "AM-EndlessWorldPVP",
    "paddingTop",
    "onBtnHelpClicked",
    "onBtnBattleInfoClicked",
    "onBtnPvpShopClicked",
    "switchUI",
    "onMsgBoxClose",
    "chunks:///_virtual/UIEndlessWorldPvpBattleInfo.ts",
    "2d6a4VPmwlC4Kfbt6D28+iI",
    "noItemNode",
    "unreadBattleInfoDatas",
    "popup",
    "batchReadBattleInfo",
    "[UIEndlessWorldPvpBattleInfo] unreadBattleInfoDatas: ",
    " listCount:",
    "onBackBtnClick",
    "showUnreadPvpBattleInfoData",
    "chunks:///_virtual/UIEndlessWorldShop.ts",
    "5972dsd3U9AzoItFzSRhHia",
    "pvpCoinLabel",
    "itemGroup",
    "datas",
    "shopEffectItems",
    "refreshNewWeekShow",
    "removeAllChildren",
    "chunks:///_virtual/UIEnum.ts",
    "4c11fY102FA1ZWGU6FGnkU+",
    "chunks:///_virtual/UILogin.ts",
    "WxMiniLoginRequestData",
    "89ae8+wsBVGhZAvuUK8cWDV",
    "用户名",
    "userName",
    "password",
    "ownLoginNode",
    "onBtnLoginClick",
    "startOwnAccountLogin",
    "onBtnClearCacheClick",
    "checkReview",
    "doLogin",
    "doPostLogin",
    "doIndex",
    "fetchPlayerDatas",
    "loadClientData",
    "loadNoticeData",
    "doSwitchScene",
    "loadReviewConfig",
    "[UILogin] checkReview 未拉取到评审状态配置，开发环境跳过检查",
    "获取服务器状态失败",
    "评审服",
    "[UILogin] 当前版本：",
    " 是否评审：",
    " 评审服地址：",
    "[UILogin] checkReview: ",
    "正在评审状态",
    "非评审状态",
    "http no text from url:",
    "登录失败：",
    "username",
    "登录失败：未获取到授权数据",
    "请输入用户名",
    "doLoginSuccess",
    "doIndexSuccess",
    "登录达到上限",
    "chunks:///_virtual/UILogo.ts",
    "ef40ahx48JHlIVRuIZGZcN7",
    "UILogo",
    "launcher",
    "fullScreenBg",
    "fadeNodes",
    "stateLabel",
    "launchFinished",
    "tweenFinished",
    "checkSwitchScene",
    "chunks:///_virtual/UIMainPage.ts",
    "808b8Qj9d5J+bqq25B94kSh",
    "homeAnim",
    "playerNameLabel",
    "endlessWeekScoreLabel",
    "devNode",
    "devToolButton",
    "stageNormalButton",
    "stageEndlessButton",
    "wareButton",
    "pilotButton",
    "_animName",
    "AM-MainPage",
    "doInitFlag",
    "shouldCreateUserInfoOnShow",
    "isMainPageLoading",
    "preloadMenu",
    "onTapCallback",
    "refreshUserInfo",
    "showMenu",
    "checkRecoverBattle",
    "checkGuide",
    "checkTipPopup",
    "存在未完成的无尽战斗，是否继续？",
    "DIGIT_1",
    "DIGIT_2",
    "DIGIT_3",
    "refreshUIPlane",
    "onBtnWareHouseClick",
    "onBtnPilotClick",
    "onBtnEndlessClick",
    "onBtnGMClick",
    "onBtnLogoutClick",
    "onBtnSettingClick",
    "onBtnFriendClick",
    "hideMenu",
    "getTopUI",
    "treasureButton",
    "chunks:///_virtual/UIMainPageTop.ts",
    "64a6dq53X1CKIIjkeeV+iSS",
    "topBg",
    "idleTopBg",
    "reviewTopBg",
    "energyTimeLabel",
    "energyBar",
    "vipNode",
    "coinBtn",
    "diamondButton",
    "refreshReview",
    "onBtnAddEnergyClick",
    "onBtnAddCoinClick",
    "onBtnAddDiamondClick",
    "onBtnMessageClick",
    "onBtnDailyTaskClick",
    "onBtnRewardClick",
    "onBtnVipClick",
    "onBtnTresureWheelClick",
    "chunks:///_virtual/UIMenu.ts",
    "2ce93JKHo1LbLVO6yS5s0T8",
    "menuBtnControls",
    "chunks:///_virtual/UIMgr.ts",
    "c945bKEuFFEd4VIxUvnWgrt",
    "_canvasTransform",
    "uiRootMap",
    "popupRootMap",
    "uiCache",
    "uiLoaded",
    "popupCache",
    "menuUI",
    "tipsCache",
    "rewardTips",
    "topUI",
    "topUIVisible",
    "uiStack",
    "currentScene",
    "prefabPath",
    "gameUI/prefab/",
    "_popupLoading",
    "showLoadingType",
    "_popupLoadingMainPage",
    "_uiTouch",
    "visiblePopups",
    "isLoadRewardTips",
    "handleNodeSystemEvent",
    "resumeSystemEvents",
    "pauseSystemEvents",
    "cameraComponent",
    "[UIMgr] adapt wide screen, scale:",
    " camera.rect:",
    ", top:",
    ", bottom:",
    "alignCanvasWithScreen",
    "[UIMgr] adapt narrow screen, top:",
    "worldToCanvasPosition",
    "initTouch",
    "initLoading",
    "initLoadingMainPage",
    "onUIHide",
    "autoReleaseUI",
    "dependUtil",
    "getDeps",
    "_uuid",
    "createTopUI",
    "registerUITouch",
    "Failed to load prefab at path: ",
    "getOrCreateUI",
    "openUI",
    "不存在的UI根节点",
    "UIRoot is invalid",
    "markAutoRelease",
    "Not found prefab path for ",
    "getOrCreatePopup",
    "openPopup",
    "不存在的popup根节点",
    "Popup already exists: ",
    "PopupRoot is invalid",
    "fadeOutTips",
    "showRewardTip",
    "Failed to show reward tips, tipsRoot is invalid",
    "clearUI",
    "clearPopup",
    "clearMenu",
    "clearTips",
    "isPersistRootNode",
    "onTouchUI",
    "onTouch",
    "chunks:///_virtual/UIPilot.ts",
    "quat",
    "e6ebe+9MTFO7peL5tz/6HgR",
    "ChoosePilot",
    "TrainPilot",
    "train",
    "upgrade",
    "PilotTrainComponent",
    "curLabel",
    "nextLabel",
    "centerWidget",
    "centerPilotNode",
    "centerPilotSkillBtnNode",
    "centerPilotBgNode",
    "centerTrainInfoNode",
    "pilotMaskUITrans",
    "pilotBaseInfoNode",
    "midNode",
    "upgradeBtn",
    "trainBtn",
    "unlockBtn",
    "engineBaseAtkLab",
    "engineAddAtkLab",
    "armorBaseHpLab",
    "armorAddHpLab",
    "weaponBaseAtkLab",
    "weaponAddAtkLab",
    "wingBaseAtkLab",
    "wingAddAtkLab",
    "pilotNameLab",
    "pilotLevelLab",
    "clipProBar",
    "clipNumIcon",
    "clipProLab",
    "advanceBtn",
    "curPilotBg",
    "nextPilotBg",
    "pilotSkillLab",
    "pilotScoreLab",
    "pilotEngineAtkLab",
    "pilotArmorHpLab",
    "pilotWeaponAtkLab",
    "pilotWingAtkLab",
    "skillDescLab",
    "pilotDescLab",
    "pilotAttrNode",
    "pilotDescNode",
    "pilotInfoNode",
    "pilotSeatComponents",
    "pilotTrainLevel",
    "pilotTrainScore",
    "pilotTrainEngineAtk",
    "pilotTrainArmorHp",
    "pilotTrainWeaponAtk",
    "pilotTrainWingAtk",
    "pilotTrainNextLevelNode",
    "pilotTrainCostNdoe",
    "pilotTrainCostTipsLabel",
    "pilotTrainCostNumNode",
    "pilotTrainCostNumIcon",
    "pilotTrainCostNumLabel",
    "pilotTrainCostNumTipsLabel",
    "pilotInfoProBarNode",
    "pilotInfoAni",
    "bottomCenterNodeAni",
    "pilotTrainCostNdoeAni",
    "topAnimation",
    "upgradeScanningLineAni",
    "pilotIconNodes",
    "advanceResultNode",
    "advanceResultTipLabelOpacity",
    "whiteBg",
    "curPilotSpine",
    "nextPilotSpine",
    "pilotUpStrs",
    "gameUI/pilotUI/effect-pilotup",
    "upgradeSucAnim",
    "advanceSucAnim",
    "pilotIndex",
    "curPilot",
    "curPilotIndex",
    "chooseSeatState",
    "upPilotUId",
    "downPilotUId",
    "starAnis",
    "isSkillFlip",
    "pagePointAnims",
    "P-RedDot",
    "Item-Pilot-Point",
    "onSpineEnterComplete",
    "Idle1",
    "Idle2",
    "onDownCmdPilotMixHandler",
    "onDownCmdPilotReplaceHandler",
    "onDownCmdPilotUpgradeHandler",
    "onDownCmdPilotAdvanceHandler",
    "refreshPilotInfo",
    "playBottomCenterNodeAni",
    "playPilotInfoProBarAni",
    "checkPilotPageRedDot",
    "checkPilotRedDot",
    "refreshBaseInfo",
    "refreshPilotSeat",
    "refreshSeatInfo",
    "showScanningLineAnim",
    "refreshPilotTrainInfo",
    "refreshPilotBaseInfo",
    "updateAdvanceInfo",
    "AM-PilotUpgrade-scanning",
    "advancePilotIocnAppear",
    "adaptCenterElement",
    "pilot-bg",
    "pilotInfoAnimation",
    "changeCenterBtn",
    "AM-BottomCenter-BtnSingle-comein",
    "AM-BottomCenter-BtnSingle-goout",
    "AM-ware-Remould-CostBar-goout",
    "AM-ware-Remould-CostBar-comein",
    "refreshPilotCostInfo",
    "getOptPilotIndex",
    "initSuccessAnimation",
    "AM-PilotInfo-Appear",
    "pilotAnimationShow",
    "showPilotSound",
    "updateIndexIfAvailable",
    "updateUpgradeIndex",
    "refreshPilotSpine",
    "ResTag",
    "-spine",
    "refreshAdvanceBtnState",
    "refreshPilotPage",
    "驾驶员等级已满，可进阶",
    "gem",
    "sapphire",
    "turnNextPilot",
    "pilotAnimation",
    "AM-PilotInfo-Disappear",
    "changePilotBgAnimation",
    "741705",
    "onBtnPilotInfoClick",
    "onBtnTrainClick",
    "addRmbUpgradePilotRequest",
    "onBtnAdvanceClick",
    "onBtnExplainClick",
    "onBtnAdvanceContinuteClick",
    "chunks:///_virtual/UIPlaneOrientation.ts",
    "7c3d3V4wlpLeI58x+hdHQ/2",
    "chunks:///_virtual/UIStage.ts",
    "e38e4NnIfBJ5qXbJiCVoBTu",
    "OpenAnimationItem",
    "关卡节点",
    "英雄关卡节点",
    "关卡背景根节点",
    "关卡背景根节点2",
    "关卡背景根节点3",
    "关卡背景根节点4",
    "关卡背景根节点5",
    "关卡背景根节点6",
    "英雄关卡背景根节点",
    "英雄关卡背景根节点2",
    "英雄关卡背景根节点3",
    "英雄关卡背景根节点4",
    "英雄关卡背景根节点5",
    "英雄关卡背景根节点6",
    "关卡预制体",
    "关卡路点预制体",
    "关卡根节点",
    "关卡路点根节点",
    "英雄关卡预制体",
    "英雄关卡路点预制体",
    "英雄关卡根节点",
    "英雄关卡路点根节点",
    "关卡ScrollView",
    "英雄关卡ScrollView",
    "关卡顶部UI根节点",
    "英雄关卡顶部UI根节点",
    "关卡资源图，主要是为了随着 prefab 加载",
    "heroStageNode",
    "universeBgRoot",
    "universeUBgRoot",
    "universeUUBgRoot",
    "universeAboveBgRoot",
    "universeStageRoot",
    "universeStageStarRoot",
    "universeHeroBgRoot",
    "universeHeroUBgRoot",
    "universeHeroUUBgRoot",
    "universeHeroAboveBgRoot",
    "universeHeroStageRoot",
    "universeHeroStageStarRoot",
    "stageItemPrefab",
    "stagePointPrefab",
    "stageRoot",
    "stagePointRoot",
    "stageHeroItemPrefab",
    "stageHeroPointPrefab",
    "stageHeroRoot",
    "stageHeroPointRoot",
    "stageScrollView",
    "stageHeroScrollView",
    "scrollViewHeight",
    "stageTopNode",
    "stageHeroTopNode",
    "keyNumLabel",
    "autoLoadImages",
    "openAnimationItem",
    "bossModeButton",
    "periodModeButton",
    "stageHeroButton",
    "spriteSet",
    "stageSet",
    "arrowSet",
    "spriteHeroSet",
    "stageHeroSet",
    "arrowHeroSet",
    "subStageNode",
    "subHeroStageNode",
    "createNormalNode",
    "createHeroNode",
    "stagePointMap",
    "s_nLastType",
    "s_fLastStagePos",
    "gameUI/stageUI/new/points500",
    "gameUI/stageUI/new/points503",
    "gameUI/stageUI/new/points506",
    "gameUI/stageUI/new/points501",
    "gameUI/stageUI/new/points504",
    "gameUI/stageUI/new/points502",
    "gameUI/stageUI/new/points505",
    "_lastMode",
    "refreshKey",
    "showUnlockStage",
    "resetNormal",
    "resetHero",
    "refreshCurType",
    "setBgNodeScale",
    "createBg",
    "createStage",
    "setHeroBgNodeScale",
    "refreshStageNode",
    "refreshStageBtn",
    "getBgRoot",
    "getUBgRoot",
    "getUUBgRoot",
    "getAboveBgRoot",
    "getStageBgRoot",
    "getStageStarRoot",
    "getBgPaths",
    "bg/points000_j",
    "bg/points001_j",
    "bg/points002_j",
    "bg/points017",
    "getEarthBgPath",
    "bg/points011",
    "bg/points021",
    "getSpriteSet",
    "getStageSet",
    "getAboveBgs",
    "above/points400",
    "above/points403",
    "above/points402",
    "above/points401",
    "getAboveBgXs",
    "getAboveBgYs",
    "getAboveBgAnchorXs",
    "getAboveBgTypes",
    "getAboveBgScales",
    "getStoreBgPath",
    "above/points404a",
    "above/points018",
    "refreshScrollView",
    "onScrollViewDidScroll",
    "getStageScrollView",
    "createSpNode",
    "refreshSpriteNodeState",
    "Earth",
    "aboveBgSp",
    "aboveBgFaSp",
    "stoneBgContainer",
    "stoneBgSp",
    "createStone",
    "above/points404b",
    "stone",
    "getUniverseStages",
    "getUniverseData",
    "getStagePrefab",
    "getStageRoot",
    "getSubStageNode",
    "getStagePointPrefab",
    "getStagePointRoot",
    "getStageTopNode",
    "getArrowSet",
    "titles/",
    "signs/",
    "stars/",
    "stageTitle",
    "createStagePointNode",
    "showNewStage",
    "changeStageMode",
    "refreshStageNodeState",
    "worldScale",
    "onBtnChangeModeClick",
    "onBtnBossModeClick",
    "onBtnPeriodModeClick",
    "chunks:///_virtual/UIStageBoss.ts",
    "ba100NJId1Gg7258SoDIC/Q",
    "cloudAdd",
    "bossTicket",
    "bossTicketNumLabel",
    "itemBossStageList",
    "_stageBtnAEs",
    "_stageBtnTimes",
    "_ticketAppearName",
    "AM-BossTicket-Appear",
    "_ticketKeepName",
    "AM-BossTicket-Keep",
    "_ticketDisappearName",
    "AM-BossTicket-Disappear",
    "_onCloseCb",
    "getAllAE",
    "refreshBossTicket",
    "runCloudAction",
    "runBossTicketOpenAction",
    "runBossTicketCloseAction",
    "onBossTicketAnimFinish",
    "chunks:///_virtual/UIStageBossDetail.ts",
    "f51a84ySklFoqK+RRp7P/54",
    "bossClassLabel",
    "bossStateLabel",
    "stagePowerLabel",
    "stagePowerLessLabel",
    "stageCoinLabel",
    "stageLeftTimeLabel",
    "stageLeftTimesLabel",
    "bossLootRateLabel",
    "lootUnknownNode",
    "bossDetailCircleAnims",
    "bossScanner",
    "switchBtnList",
    "bossParent",
    "bossTicketSp",
    "bossScrollBtn",
    "stageInfoNode",
    "bossInfoNode",
    "bossPositionList",
    "bossAlphaList",
    "bossScaleList",
    "bossInfoAnim",
    "stageInfoAnim",
    "_scannerUIOpacity",
    "_stageInfoDatas",
    "_bossInfoDataList",
    "_bossLarDataList",
    "_bossDataList",
    "_bossIndex",
    "_bossIndexes",
    "_bossNames",
    "_change",
    "_bossNodes",
    "_curBossNode",
    "_bossModeUnlocks",
    "_unlockType",
    "_inChange",
    "_touchStartX",
    "_bossInfoAppearName",
    "AM-BossTopDetail-Appear",
    "_bossInfoKeepName",
    "AM-BossTopDetail-Keep",
    "_bossInfoDisappearName",
    "AM-BossTopDetail-Disappear",
    "_stageInfoAppearName",
    "AM-BossDetail-Appear",
    "_stageInfoKeepName",
    "AM-BossDetail-Keep",
    "_stageInfoDisappearName",
    "AM-BossDetail-Disappear",
    "preLoadPipeline",
    "onBossScrollBtnTouchStart",
    "onBossScrollBtnTouchEnd",
    "loadAE",
    "refreshBossAbout",
    "refreshBoss",
    "initBossAE",
    "initBossModeUnlocks",
    "UIStageBossDetail preLoadPipeline error: ",
    "runBossInfoOpenAction",
    "runStageInfoOpenAction",
    "runCircleAngleAction",
    "runBossScannerAction",
    "runBossDetailBtns",
    "runBottomOpenAction",
    "runBossInfoCloseAction",
    "runBottomCloseAction",
    "runStageInfoCloseAction",
    "bossBlackAE",
    "fireBackBlackAE",
    "fireFrontBlackAE",
    "bossAnim",
    "bossBlackAnim",
    "bossSpine",
    "bossBlackSpine",
    "refreshUnlockType",
    "getSubStageID",
    "refreshBossStateLabel",
    "refreshRootLabel",
    "refreshBossName",
    "refreshBossClass",
    "未开启",
    "已击败",
    "当前蓝色品质掉落概率为",
    "boss ",
    "getBossPosID",
    "createBossAE",
    "[UIStageBossDetail] load boss prefab error: ",
    "bossAnimBlackSprites",
    "refreshBossNodeIndex",
    "getBossZOrder",
    "zIndex",
    "runBossAEAction",
    "runInfoAction",
    "onStageInfoAnimFinish",
    "onBossInfoAnimFinish",
    "changeBoss",
    "bossChangeOver",
    "lineHeight",
    "verticalAlign",
    "VerticalAlign",
    "CENTER",
    "已用尽，明天再来继续挑战吧",
    "进入boss模式",
    "chunks:///_virtual/UIStagePeriod.ts",
    "2261b8VEThCIrSr7typOUUA",
    "itemPeriodStageList",
    "stageMinDistance",
    "stageMaxDistance",
    "periodItemPrefab",
    "initItemPeriodStage",
    "refreshItemPeriodStage",
    "runStageAction",
    "chunks:///_virtual/UIStore.ts",
    "e4a16+sE/JN+6Rt0GTzuW8a",
    "storePage",
    "continerNode",
    "chunks:///_virtual/UISummary.ts",
    "b9268AGdXtGZ61wmltBjpHd",
    "friendInfoNode",
    "highScore",
    "keyPos",
    "numTimes",
    "shotPlaneNode",
    "starNum",
    "starState",
    "sucState",
    "allBagItemIcon",
    "m_RollCoinObj",
    "continueButton",
    "normalModeNode",
    "starNodes",
    "normalScoreLabel",
    "normalScoreBonusNumLabel",
    "otherModeNode",
    "otherScoreLabel",
    "otherScoreBonusNumLabel",
    "endlessModeNode",
    "endlessScoreBonusNumLabel",
    "friendScoreRateLabel",
    "endlessHighestScoreLabel",
    "endlessHighAnimNode",
    "failNode",
    "adBtnNode",
    "remainAdNumLabel",
    "scoreBonusNumLabel",
    "highAE",
    "starAnimations",
    "STAR_EFFECT_NUM",
    "gameUI/summeryUI/record",
    "S_TREASURE_INFO",
    "S_SUMMARY",
    "showDoubleRewardADUI",
    "refreshDoubleReward",
    "nextStar",
    "updateLabelContent",
    "S_SHOW_POPUP",
    "ANIM_HIGH_HISTORY_SHOW",
    "ANIM_HIGH_HISTORY_STAY",
    "ANIM_HIGH_WEEK_SHOW",
    "ANIM_HIGH_WEEK_STAY",
    "S_SHOW_FINISH",
    "Stars",
    "onBtnContinue",
    "showPvpBattleResult",
    "UISummary ignore onBtnContinue by state:",
    "onBtnADDoubleRewardClick",
    "playDoubleCoinAni",
    "isDoubleRewardItem",
    "BTN_LR_OFF_X",
    "GOON_BTN_POSY",
    "chunks:///_virtual/UITouch.ts",
    "54bb6QxK5ZJPIktmaiWb6Rk",
    "touchAnimation",
    "AM_Touch",
    "_touchEnable",
    "_transform",
    "chunks:///_virtual/UITreasureWheel.ts",
    "328ab8GAsZJ6ay36YGeYfiP",
    "toggleWheel",
    "toggleTreasure",
    "toggleHandbook",
    "wheelRoot",
    "handbookRoot",
    "InfoNode",
    "Title",
    "currentStatus",
    "bIsClick",
    "isAni",
    "refreshTimeLabel",
    "effectLabel",
    "lotteryLabel",
    "lotteryBtn",
    "wheelNode",
    "lotteryNode",
    "bCheckingWheelRefresh",
    "bDouble",
    "bRefresh",
    "bShowLights",
    "bShowLottery",
    "bTouchable",
    "bWaitForLotteryResult",
    "cost",
    "curLights",
    "curPrizeIndexs",
    "curPrizeNum",
    "curPrizePos",
    "curTimestamp",
    "effectStrs",
    "gainStr",
    "leftSec",
    "icons",
    "iconXs",
    "iconYs",
    "lightCounts",
    "lightTimes",
    "waitLotteryResultTime",
    "wheelAboveAE",
    "wheelAE",
    "wheelLightAEs",
    "treasureS",
    "treasureA",
    "treasureB",
    "aADSNode",
    "bADSNode",
    "aADSTimeLabel",
    "bADSTimeLabel",
    "aKeyNum",
    "bKeyNum",
    "aDayLeftNum",
    "bDayLeftNum",
    "sDayLeftNum",
    "aInfo",
    "bInfo",
    "sInfo",
    "aLeftMustNum",
    "bLeftMustNum",
    "sLeftMustNum",
    "sLeftMustNums",
    "treasureOnceButton",
    "aLeftTime",
    "bLeftTime",
    "treasureCurTime",
    "isPlayStartAni",
    "Method not implemented.",
    "InitWheel",
    "幸运转盘",
    "gameUI/shopUI/effect-wheel",
    "setCurCost",
    "setLeftTime",
    "setEffectLabel",
    "setCurDouble",
    "距离下次免费05:59:59",
    "addRefresh",
    "ANIM_ABOVE",
    "onRefreshItemsFinish",
    "ANIM_SELECT",
    "cycleLeftTime",
    "getSysTime",
    "AdsDisplayPos",
    "LEVEL_B",
    "LEVEL_A",
    "cycleLight",
    "PRIZE_NUM",
    "ANIM_LIGHT_WAIT",
    "leaveLottery",
    "DownCmdTurnTableErrorCallback",
    "stopLottery",
    "DownCmdTurnTableBuyCallback",
    "[GS_Whell] index:",
    "购买成功，获得",
    "DownCmdTurnTableLastRefreshTimeCallback",
    "ST_LOTTERY",
    "DownCmdTurnTableShowCallback",
    "转盘内物品已刷新，是否继续？",
    "showLottery",
    "gameUI/shopUI/t-luck-03",
    "gameUI/shopUI/t-luck-02",
    "gameUI/shopUI/t-luck-04",
    "gameUI/shopUI/t-luck-01",
    "距离下次免费",
    "onClickBtnStartLottery",
    "今日次数已用完",
    "ST_CHECK_TIMSTAMP",
    "onClickBtnRefresh",
    "立即免费刷新当前转盘内物品？\n（今天剩余免费刷新次数:",
    "暂未开启转盘刷新！",
    "InitTreasureHunt",
    "RefreshAllTreasueDisplay",
    "RefreshUIDisplay",
    "/999",
    " <b><color=#12ff00 > ",
    "次</color>内必出<color=#12ff00>绿色装备</color >",
    "/10",
    "<b><color=#12ff00>",
    "次</color>内必出<color=#ff8af9>紫色装备</color>",
    "次</color>内必出<color=#fff000>S级紫装</color>",
    "aBuyBtnPosX",
    "bBuyBtnPosX",
    "onBtnBTreasureClick",
    "OpenTreasure",
    "onBtnATreasureClick",
    "onBtnSOneTreasureClick",
    "onBtnSTenTreasureClick",
    "onClickBtnAdsOpen",
    "InitHandbook",
    "RefreshView",
    "onClickHandbookSwitch",
    "onBottomAnimationFinish",
    "onClickBtnInfo",
    "TREASURE",
    "onClickBtnCancel",
    "onClickToggleSwitch",
    "WHEEL",
    "HANDBOOK",
    "MAINBG_OFFY",
    "MSG_TAG_AFTER_CHECK_REFRESH",
    "MSG_TAG_REFRESH_FORCE",
    "ST_BUSY",
    "LEVEL_S",
    "LEVEL_SONE",
    "LEVEL_STEN",
    "chunks:///_virtual/UIType.ts",
    "8db113Z5I9DXZGrimqS3Ejy",
    "UIType",
    "chunks:///_virtual/UIWareEnhance.ts",
    "dd1e00vAqVO075hCcLFMdl8",
    "wareUpgrade",
    "jumpAdvanceBtn",
    "jumpUpgradeAniBtn",
    "wareAdvance",
    "jumpUpgradeBtn",
    "costLabel",
    "detailsNode",
    "levelArrow",
    "arrows",
    "levelCurLabel",
    "levelNextLabel",
    "attrLabels",
    "curAttrLabels",
    "nextAttrLabels",
    "chooseMaterialsTips",
    "chooseMaterialsLockTips",
    "jumpGroupNode",
    "singleGroupNode",
    "backNode",
    "upgradeInAndOutAnimation",
    "advanceInAndOutAnimation",
    "materialsDisappearAnis",
    "detailsAnimation",
    "autoMaterialsAnimation",
    "powerNode",
    "materialsBtnNode",
    "centerNodeTrans",
    "centerNodeWidget",
    "upgradeAutoSelectMaterialButton",
    "canAdvanceTip",
    "upgradeConsumeBagItems",
    "extraExpBagItems",
    "netItemID",
    "netSortID",
    "netIndex",
    "netExp",
    "netLevel",
    "netStar",
    "temporaryBagItem",
    "temporaryItemID",
    "temporarySortID",
    "temporaryLevel",
    "temporaryExp",
    "temporaryStar",
    "isUpgradeing",
    "upgradeConsumeTotalExp",
    "upgradeNeedMaxExp",
    "advanceConsumeBagItems",
    "refreshUpgradeEquipInfo",
    "refreshAdvanceEquipInfo",
    "tabType",
    "playJumpGroupAni",
    "onEquipUpgradeHandler",
    "onEquipAdvanceHandler",
    "onRefreshkMaterialHandler",
    "onRefreshEquipLockHandler",
    "AM-ware-advance-goout",
    "switchViewState",
    "AM-ware-upgrade-comein",
    "AM-ware-upgrade-goout",
    "AM-ware-advance-comein",
    "AM-Details-Upgrade-goout",
    "AM-Details-Advance-comein",
    "AM-Details-Advance-goout",
    "AM-Details-Upgrade-comein",
    "setTemporaryData",
    "setNetData",
    "refreshExtraExpBagItems",
    "checkHasAdvance",
    "onBtnJumpUpgradeAniClick",
    "<size=24>本次升级经验已超过满级(",
    "级)经验，溢出<color=#FFEB9C>",
    "</color>(不返还)，是否继续升级？</size>",
    "继续升级",
    "取消升级",
    "confirmToUpgrade",
    "升级材料不足",
    "onBtnJumpAdvanceClick",
    "upgradeEquipSucceed",
    "loadConsumeWithUpgradeData",
    "\"强化后：等级：",
    "playUpgradeMatAni",
    "AM-ware-Materials-Disappear",
    "upgradeEquipAniamtionFinish",
    "setUpgradeDataInProgress",
    "resetUpgradeMaterials",
    "该类装备不可进化",
    "当前进阶装备处于保护状态\n是否继续？",
    "confirmToAdvance",
    "onBtnJumpUpgradeClick",
    "clearAdvanceData",
    "loadAdvanceConsume",
    "showMaterialsTipTweens",
    "advanceEquipSucceed",
    "sort_id_after",
    "item_id_after",
    "star_id_after",
    "item_advance",
    "img-S-black",
    "onBtnMaterialsClick",
    "clearData",
    "AM-ware-upgrade-btn-auto-goout",
    "AM-ware-upgrade-btn-auto-comein",
    "chunks:///_virtual/UIWareHouse.ts",
    "67eb5/6R1hLJ7LeBf6yG9Z+",
    "ShowOwn",
    "HideOwn",
    "NULL",
    "WareEquipAttribute",
    "attrLabel",
    "proBarBgNode",
    "proBarNode",
    "所穿装备列表",
    "ownEquipNode",
    "planeInfoNode",
    "planeIcon",
    "planeNameLable",
    "planeSkillNameLabel",
    "planeDesLabel",
    "planeStarList",
    "equipAttributes",
    "ownBtnNode",
    "planeBtnNode",
    "costBtnNode",
    "costSprite",
    "treasureBtnNode",
    "centerInfoAnimation",
    "centerBtnAnimation",
    "uiPlaneOpacity",
    "nextUIPlane",
    "nextPlaneOpacity",
    "planeInfoBgNode",
    "planeInfoBgSprite",
    "nextPlaneInfoBgSprite",
    "planeIfoBgOpacity",
    "nextPlaneIfoBgOpacity",
    "bgEffectNode",
    "upgradeButton",
    "reformButton",
    "skinButton",
    "wareImgStrs",
    "gameUI/effect/ware-new",
    "fighterbgImgStrs",
    "gameUI/effect/warehouse-fighterbg",
    "wareNewAnim",
    "isNewPlaneAnim",
    "uiPlaneBgAnimation",
    "uiPlaneBgGridAnimation",
    "uiPlaneBgScreenAnimation",
    "treatureAnim",
    "engineForSellArray",
    "curShopModule",
    "curEngineData",
    "planeIndex",
    "lastIndex",
    "curPlaneIndex",
    "curPlaneBgIndex",
    "planeOrientation",
    "refreshWearEquip",
    "gameUI/effect/button-effect",
    "onWareEquipHandler",
    "BuyModuleHandler",
    "checkNextPlane",
    "setWearEquip",
    "refreshOwnInfo",
    "showBag",
    "adapterPlanePreview",
    "atan",
    "refreshPlanePage",
    "refreshNextPlane",
    "uiPlaneInfoPanelAction",
    "refreshSellInfo",
    "AM-ware-BottomBGNode-00",
    "AM-ware-BottomCenterNode-00",
    "changePlaneBgAnimation",
    "gameUI/ware_A5/warehouse-bg",
    "icon-sapphire",
    "icon-gem",
    "AM-ware-BottomBGNode-02",
    "AM-ware-BottomCenterNode-02",
    "AM-ware-BottomBGNode-01",
    "AM-ware-BottomCenterNode-01",
    "AM-ware-BottomCenterNode-03",
    "playFadeOut",
    "onBtnPackClick",
    "onBtnRemouldClick",
    "onBtnBuyClick",
    "onBtnTreasureClick",
    "chunks:///_virtual/UIWareRemould.ts",
    "09883/ICA5H/7tLKfjRTI4v",
    "wareMix",
    "mixBtn",
    "mixAutoBtn",
    "jumpSplitBtn",
    "wareSplit",
    "splitBtn",
    "chooseSplitNode",
    "jumpMixBtn",
    "costTipLabel",
    "costIcon",
    "mixInAndOutAnimation",
    "splitInAndOutAnimation",
    "costInAndOutAnimation",
    "explainNode",
    "setCostActive",
    "AM-ware-Split-GoOut",
    "AM-ware-Mix-ComeIn",
    "AM-ware-Mix-GoOut",
    "AM-ware-Split-ComeIn",
    "onBtnJumpSplitClick",
    "onBtnJumpMixClick",
    "chunks:///_virtual/UIWareSkin.ts",
    "WareSkinRedDot",
    "WareSkinBgExhibition",
    "UIWareSkinItem",
    "a0b68T2Z0lEQKa9Y3PXzmQ/",
    "skinNumLabel",
    "skinAttrLabel",
    "skinNameOpacity",
    "skinAttrOpacity",
    "curSkinBgExhibition",
    "nextSkinBgExhibition",
    "skinList",
    "consumeSprite",
    "consumeLabel",
    "useBtn",
    "panelAnimation",
    "bottomCenterAnim",
    "curSkinIndex",
    "skinBgExhibition",
    "engineDatas",
    "curengineData",
    "needTicketNum",
    "ownTicketCont",
    "consumeType",
    "ownItem",
    "jumpBagItem",
    "skinListOpacity",
    "playPanelAnim",
    "Reverse",
    "triggerGuide",
    "jumpEngineSkinIndex",
    "refreshSkinNum",
    "ownNum",
    "totalNum",
    "onRefreshEquipSkinHandler",
    "refreshSkinList",
    "refreshSkinData",
    "refreshSkinName",
    "refreshConsumeItem",
    "runSkinNameHideAnim",
    "runSkinNameShowAnim",
    "TenYears",
    "homeUI",
    "gameUI/",
    "onBtnEquipSkinActivateClick",
    "onBtnEquipSkinChangeClick",
    "chunks:///_virtual/UIWareSkinItem.ts",
    "ec5e1Y87PFCRoL8bno89ZDf",
    "useNode",
    "noneNode",
    "gameUI/ware_A5/",
    "onItemClick",
    "chunks:///_virtual/UIWeekDayItem.ts",
    "f9ae5n7/1tHZZa0qoKZUDgU",
    "UIWeekDayItem",
    "unlockLabel",
    "selectLabel",
    "finishNode",
    "isSelected",
    "refreshSeleted",
    "任务尚未解锁，请耐心等待",
    "chunks:///_virtual/UIWeekTask.ts",
    "2e80270Wk9LsqGJStMi1pGu",
    "UIWeekTask",
    "remainedTimeLabel",
    "totalAdditLabel",
    "totalProgress",
    "dayScrollView",
    "dayItems",
    "topWidget",
    "maskWidget",
    "scrollWidge",
    "curDayData",
    "remainedTime",
    "expired",
    "dailys",
    "isHasClaimable",
    "refreshDayState",
    "expireTime",
    "refreshTotalProgress",
    "refreshRemainedTime",
    "AM-weektask-open",
    "refreshExpiredReward",
    "onRefreshTaskItemHandler",
    "onRefreshTaskTotalProgressandler",
    "活动已结束",
    "totalAddit",
    "totalNodes",
    "getCurrentBagItem",
    "chunks:///_virtual/UIWeekTaskItem.ts",
    "d8a124qB15Kp7RtF2gsx154",
    "UIWeekTaskItem",
    "starNumLabel",
    "taskTitleLabel",
    "taskProLabel",
    "taskProBar",
    "normalBar",
    "finishBar",
    "jumpBtn",
    "finishFlag",
    "jumpLabel",
    "857ABB",
    "BDB5F0",
    "A799CF",
    "FFFFFF",
    "未完成",
    "chunks:///_virtual/UnlockPveHeroRequestData.ts",
    "4656bljnOFFnrFJuhtTy8c3",
    "chunks:///_virtual/UnlockPveRequestData.ts",
    "c314cPyjSBC8bFhabxQtSoY",
    "chunks:///_virtual/UpCmdAdvance.ts",
    "536c874zoVGt4AjuL/TAsdD",
    "chunks:///_virtual/UpCmdAidInvitationList.ts",
    "e014fUbZEVHBLWIo8xeu08x",
    "chunks:///_virtual/UpCmdAidRequestList.ts",
    "ae3e0xTzGBBeKPY8CD/HfXM",
    "chunks:///_virtual/UpCmdAntiData.ts",
    "24a4fT0NapDsIN+f3KSiIEQ",
    "chunks:///_virtual/UpCmdBattleArray.ts",
    "0ac47GUeypHCpAoNGv6kOS1",
    "chunks:///_virtual/UpCmdBestHistory.ts",
    "35d82c0B2dIWKUBVT8Lj3JC",
    "chunks:///_virtual/UpCmdBossPkData.ts",
    "5d4b8VHQDZM3IhSApxmDgKF",
    "chunks:///_virtual/UpCmdBuy.ts",
    "09eaf5IuGFJKbBI+hEdXo+8",
    "chunks:///_virtual/UpCmdBuyFund.ts",
    "9bea76y849HApbk2aez5Eyj",
    "chunks:///_virtual/UpCmdBuyMoonGiftReward.ts",
    "7a2a1CtWqlEa6hGX9KPD0ht",
    "chunks:///_virtual/UpCmdBuyPeriodicGiftReward.ts",
    "75d325OIh1KqJcrYx2T16Ai",
    "chunks:///_virtual/UpCmdBuyPrivilegeCard.ts",
    "f1171vO3JhF0ZJIczCjXSZx",
    "chunks:///_virtual/UpCmdBuyStoreFirst.ts",
    "6966aUMRQZClZ48zMnNYbf/",
    "chunks:///_virtual/UpCmdBuyStoreFree.ts",
    "612b8Gd2YpIqpkjhAZBRpBy",
    "chunks:///_virtual/UpCmdBuyStorePeriod.ts",
    "d7f694j7hdMDJ9bmjKv0Rlq",
    "chunks:///_virtual/UpCmdBuyStoreStage.ts",
    "7a760uYvPtLvpcINujLrwL0",
    "chunks:///_virtual/UpCmdCdKey.ts",
    "5888as3b29OyJnJo+p1AKvZ",
    "chunks:///_virtual/UpCmdCheckPVPResult.ts",
    "c880aDVBK1FJoAiGAwiuv4q",
    "chunks:///_virtual/UpCmdDailyBonusInfo.ts",
    "5ca553HhLdPX6js5ffsPDHH",
    "chunks:///_virtual/UpCmdDecadeUniteInfo.ts",
    "af02aApjE1Pv6rtuM/zz89o",
    "chunks:///_virtual/UpCmdDecadeUniteInvite.ts",
    "1d1c2EXGfBJxbJvQ/rk/PtD",
    "chunks:///_virtual/UpCmdDecadeUniteSendBullet.ts",
    "3ec0fiLujZFvJGJ8jr0lMUq",
    "chunks:///_virtual/UpCmdDecadeUniteSkin.ts",
    "858cbeBLAxORq6ed5DrllXG",
    "chunks:///_virtual/UpCmdEndlessIndividualCupGainReward.ts",
    "2ed6dGmn6VNVpFmFwF7zDyL",
    "chunks:///_virtual/UpCmdEndlessIndividualCupInfo.ts",
    "9a5a5mF07ZBraBhGh9l8unO",
    "chunks:///_virtual/UpCmdEndlessIndividualCupStart.ts",
    "a1ab1WkCgJMObcQro9eb3FQ",
    "chunks:///_virtual/UpCmdEnergy.ts",
    "b948b6+661AxoYWFyBPNur2",
    "chunks:///_virtual/UpCmdEnergySwitch.ts",
    "49a82J1AFxPQJstEVFpKR/T",
    "chunks:///_virtual/UpCmdEnterPVPArea.ts",
    "bbf3cL/RwdIlIBfIFYDNGlN",
    "chunks:///_virtual/UpCmdEquip.ts",
    "ff194WR7wJBia0wdRDCbNtk",
    "chunks:///_virtual/UpCmdEquipSkinActivate.ts",
    "6ca29Gt1YZLT7P/LwQT8E0T",
    "chunks:///_virtual/UpCmdEquipSkinChange.ts",
    "48acb7DTFpMzqHDaLtUbW99",
    "chunks:///_virtual/UpCmdFeedback.ts",
    "23a31EIkVVAMblB7xTyhQXG",
    "chunks:///_virtual/UpCmdFriendData.ts",
    "20ef2JlxvRLnrj7hCQ50Lz6",
    "chunks:///_virtual/UpCmdFriendList.ts",
    "a88efjsv7dF8ps2BLdznGzc",
    "chunks:///_virtual/UpCmdFundInfo.ts",
    "35b02VLrJVATqCHM7JfS+Vb",
    "chunks:///_virtual/UpCmdFundInfoRequestData.ts",
    "ddd73mcgE9LYoJIMKz3YsqX",
    "chunks:///_virtual/UpCmdGainActionAward.ts",
    "1c90cXLPXJIDL2O/h0n/i7M",
    "chunks:///_virtual/UpCmdGainAidReward.ts",
    "3aeb95bFMpAVIH5a3EOUSls",
    "chunks:///_virtual/UpCmdGainDailyBonus.ts",
    "bcae39EG75C5LfMqjhcVPE+",
    "chunks:///_virtual/UpCmdGainDailyTaskReward.ts",
    "f5b1dzkFqNFEYxL/CaVugw1",
    "chunks:///_virtual/UpCmdGainDecadeUniteDailyTasksReward.ts",
    "06a38Tzw+9DdILQxYVg/Bmg",
    "chunks:///_virtual/UpCmdGainDecadeUniteDailyTasksTotalReward.ts",
    "51101atHVhBBafHvrdcbeNl",
    "chunks:///_virtual/UpCmdGainDecadeUniteInviteReward.ts",
    "b4e23ucZ85CKqSenayKLuRk",
    "chunks:///_virtual/UpCmdGainDecadeUniteMilestoneReward.ts",
    "1e1be09LJRM5agLm7gB7i45",
    "chunks:///_virtual/UpCmdGainFund.ts",
    "afda3wIjHtKHJU6aTUcG20m",
    "chunks:///_virtual/UpCmdGainIdleBonus.ts",
    "03d548yMtlMq40P6LH2El4Y",
    "chunks:///_virtual/UpCmdGainLoginReward.ts",
    "8d9ad+0BadAFJPvXUflguyO",
    "chunks:///_virtual/UpCmdGainMoonBonus.ts",
    "8c136hHVX1AyowVj3CU9Jrz",
    "chunks:///_virtual/UpCmdGainNewbieBonus.ts",
    "fad3dvMyalLFKyglfk2Bt3Z",
    "chunks:///_virtual/UpCmdGainPrivilegeCard.ts",
    "58f06EF3v9F36bsT1l6Bh+k",
    "chunks:///_virtual/UpCmdGainQuickIdleBonus.ts",
    "267eaQt/I1H+bqFkgVswiDY",
    "chunks:///_virtual/UpCmdGainReward.ts",
    "69e39cTWL1E9Z2l57KjD7Cn",
    "chunks:///_virtual/UpCmdGainStoreFirst.ts",
    "7a6c02I8gNI17qRFdY45J/+",
    "chunks:///_virtual/UpCmdGainStoreStage.ts",
    "30523v1/1tC0JH+JTP4UCC4",
    "chunks:///_virtual/UpCmdGainTotalDailyBonus.ts",
    "f9835OdaqRGMqUGPwrgXNAm",
    "chunks:///_virtual/UpCmdGainVIPFirstPrize.ts",
    "75536v0/9lCsrlbOgLlc6lf",
    "chunks:///_virtual/UpCmdGetClientData.ts",
    "63e68C5/LhJGoGbunFh4c2p",
    "chunks:///_virtual/UpCmdGetClientVars.ts",
    "cf5b2uL2SxG06KKC90MMtMr",
    "chunks:///_virtual/UpCmdGetFailedOrders.ts",
    "6a8a7J6q/5Ic4m2g1l5vgtO",
    "chunks:///_virtual/UpCmdGetIosPreview.ts",
    "9a38fhA0EpP/KpSS57gd0AC",
    "chunks:///_virtual/UpCmdGetNotice.ts",
    "6e867QBzCVNv5s+enM8PSmM",
    "chunks:///_virtual/UpCmdGiftEnergy.ts",
    "05ca3XfLy5NDZLGrV2xmgcK",
    "chunks:///_virtual/UpCmdGuide.ts",
    "fda16xuzd5Lqaegw59YBfEf",
    "chunks:///_virtual/UpCmdHead.ts",
    "d6fc5BKWoxGDZVKyYun54Ri",
    "UpCmdHead",
    "chunks:///_virtual/UpCmdHeartbeat.ts",
    "1c362YM9MpKXoqfspyw8GVi",
    "chunks:///_virtual/UpCmdHeroPkData.ts",
    "da57fKnbpxBnqVOLgRwK/4n",
    "chunks:///_virtual/UpCmdIdleBonusInfo.ts",
    "16c3aLa2aFCHIZse20ehWgs",
    "chunks:///_virtual/UpCmdIndex.ts",
    "f213dLhWOlPxJ0F7Zs6Fw1A",
    "chunks:///_virtual/UpCmdInvite.ts",
    "4f11bIl5JJMlqngdfy6f6bP",
    "chunks:///_virtual/UpCmdLogin.ts",
    "15afeEtTcBJh6+mLaKB45Rc",
    "chunks:///_virtual/UpCmdMarsActivation.ts",
    "d521e4HFURA8KmZpVvXi+BX",
    "chunks:///_virtual/UpCmdMarsDeactivation.ts",
    "fa6ccr4CXRE1YmJVQU76qKB",
    "chunks:///_virtual/UpCmdMix.ts",
    "0c5650hOdNLR7QLqfe8/HYT",
    "chunks:///_virtual/UpCmdModule.ts",
    "f9c9bNNioJDLLyZm7gtkvlR",
    "chunks:///_virtual/UpCmdMoonBonusInfo.ts",
    "5b4e4AnVStP9YLqcX9cjI4f",
    "chunks:///_virtual/UpCmdMoonGiftGainReward.ts",
    "24aedb0bghG06ztXTiTBMU2",
    "chunks:///_virtual/UpCmdMoonGiftInfo.ts",
    "7e58eRsfXFH+7HGSgERvyiB",
    "chunks:///_virtual/UpCmdNewbieBonusInfo.ts",
    "9f6bcyIuYdMzqaJ/QU6rS/u",
    "chunks:///_virtual/UpCmdOwnLogin.ts",
    "c69dd0IXG9EUq5Z7saaBJhh",
    "chunks:///_virtual/UpCmdPeriodicGiftGainReward.ts",
    "3e51fAZcLtJsqFhjyLcW04k",
    "chunks:///_virtual/UpCmdPeriodicGiftInfo.ts",
    "d7b26+2hLFCO6Td4fHeWdrS",
    "chunks:///_virtual/UpCmdPeriodPkData.ts",
    "c2315Z5YzVNYYVp4Lqw8kZ8",
    "chunks:///_virtual/UpCmdPilotAdvance.ts",
    "34316fCu5pKM4wgeHE3BHCj",
    "chunks:///_virtual/UpCmdPilotMix.ts",
    "af1dbLcH2FFsrK9H66J5aNQ",
    "chunks:///_virtual/UpCmdPilotReplace.ts",
    "25e69n0grJPlbRbNKLEOr3I",
    "chunks:///_virtual/UpCmdPilotUpgrade.ts",
    "61507kG1QNG9L2kgzZ4sbxG",
    "chunks:///_virtual/UpCmdPlaceOrder.ts",
    "97299T+ngxCSKL+TaPgbdwQ",
    "chunks:///_virtual/UpCmdPlayerLogout.ts",
    "bd717w5okZCmbCnBQvkv0vy",
    "chunks:///_virtual/UpCmdPrivilegeCardInfo.ts",
    "55c04ZZb+9NLL6p0yXnmz1f",
    "chunks:///_virtual/UpCmdPullback.ts",
    "cc92dxUS4NMpLI0Ea0ojg0F",
    "chunks:///_virtual/UpCmdPveGame1.ts",
    "98215CFjtlApKDYOAEf5iWF",
    "chunks:///_virtual/UpCmdPveGameEnd.ts",
    "3c26d1hjylCIJnyjsaOY5AW",
    "chunks:///_virtual/UpCmdPveRewardDouble.ts",
    "57633XAkZxBRpZxMFmftQqv",
    "chunks:///_virtual/UpCmdPVPScoreSync.ts",
    "ada99BC5pFK4aMIps7yiNBb",
    "chunks:///_virtual/UpCmdPVPShopBuy.ts",
    "81a07UHBj1A8J0mtECfZuwo",
    "chunks:///_virtual/UpCmdPVPShopLastRefreshTime.ts",
    "f2f26WykjlFhrhaQD8vkJSI",
    "chunks:///_virtual/UpCmdPVPShopShow.ts",
    "82b72Od6qVIkYTULY5JY5HR",
    "chunks:///_virtual/UpCmdQqGetBalance.ts",
    "761e2v+ZrBPuJx2yZ5Blwbv",
    "chunks:///_virtual/UpCmdQqLogin.ts",
    "24c10FxbM1HVbEex3CzyrmR",
    "chunks:///_virtual/UpCmdQqShare.ts",
    "448bdtLAmZDqLvW5iVR/BRv",
    "chunks:///_virtual/UpCmdQueryOrder.ts",
    "dee49Tro5hN45hIpAZMGhS2",
    "chunks:///_virtual/UpCmdQueryPVPMatch.ts",
    "f19f2avLB1Lj7sur2s+GYa/",
    "chunks:///_virtual/UpCmdRandData.ts",
    "057a8RVjfdKt7Y/3Q85y63M",
    "chunks:///_virtual/UpCmdRandomSupply.ts",
    "b20b7B7BWRFAI1jhQVA3hsn",
    "chunks:///_virtual/UpCmdRecharge.ts",
    "01418PLsBFLm6HMqa1rhlYa",
    "chunks:///_virtual/UpCmdRechargeM2.ts",
    "7a8c5QXrAZCUI3hQKMJdO/Q",
    "chunks:///_virtual/UpCmdRechargeMoney.ts",
    "9f8a90wdWVBd7Q9fS5cFtGm",
    "chunks:///_virtual/UpCmdRegCnt.ts",
    "c58eeMAKLFFg6HQVweEiC2G",
    "chunks:///_virtual/UpCmdRemovePlayer.ts",
    "411b3vWIfhMn5jgTYGJnXYe",
    "chunks:///_virtual/UpCmdReportRechargeFail.ts",
    "dea2a7BrLdEZ4oJA48qr/0a",
    "chunks:///_virtual/UpCmdRogueBuy.ts",
    "bdaf8JBB9RFj5h0gnjdp0FG",
    "chunks:///_virtual/UpCmdRogueLastRefreshTime.ts",
    "4ec02OBhMlBzYLB6Mf+SyDj",
    "chunks:///_virtual/UpCmdRogueShow.ts",
    "42a6fUYcSlPM5nTqR06stSD",
    "chunks:///_virtual/UpCmdSecRoundEndCountData.ts",
    "c51901XmvFOhIszwWOLgI+U",
    "chunks:///_virtual/UpCmdSecRoundEndData.ts",
    "930d85dJLRPpIDyhoxVW82v",
    "chunks:///_virtual/UpCmdSecRoundStartData.ts",
    "fa69bn16vhL36KCgaGhT4Ce",
    "chunks:///_virtual/UpCmdSell.ts",
    "50b858kiSNFbYcZRC9/DMxy",
    "chunks:///_virtual/UpCmdSendEnergy.ts",
    "01c74JSR7NBj6NXXmBFOGIg",
    "chunks:///_virtual/UpCmdSendGoods.ts",
    "40278F62hBDXI8t1ZKhVkQc",
    "chunks:///_virtual/UpCmdSetClientData.ts",
    "e4ec8ubEwZB8Ki3KoSrzhXg",
    "chunks:///_virtual/UpCmdSetClientVars.ts",
    "7fac5JeKlRGHYViAbOuAcAW",
    "chunks:///_virtual/UpCmdSetInfo.ts",
    "54155N15DVGMIeC7APAuB08",
    "chunks:///_virtual/UpCmdSingleGuide.ts",
    "d55671z2NxHTLxyvq5I2cYB",
    "chunks:///_virtual/UpCmdSplit.ts",
    "8ed21rF225Ad6L3Svy+ZbuA",
    "chunks:///_virtual/UpCmdStoreFirstInfo.ts",
    "037d1dSeUFAt5CWFEB6jUAF",
    "chunks:///_virtual/UpCmdStorePeriodInfo.ts",
    "6d553wwN9hHoo3cVckmbPiY",
    "chunks:///_virtual/UpCmdSweep.ts",
    "e4e98r+mxBBXrdG6heorG3J",
    "chunks:///_virtual/UpCmdSysmsgItem.ts",
    "eca59UU2yhMYZ2pmKh8VIhm",
    "chunks:///_virtual/UpCmdTest.ts",
    "83197QtgdlEE4eDMgposbpG",
    "chunks:///_virtual/UpCmdTopBulletin.ts",
    "6dc8315915MRLowyRPknyMG",
    "chunks:///_virtual/UpCmdTreasureHunt.ts",
    "a0baeTXF5BFhYn6vL/96sS3",
    "chunks:///_virtual/UpCmdTreasureHuntRequesetData.ts",
    "8c044gvxYtDRqyGOyce+Gbw",
    "chunks:///_virtual/UpCmdTurnTableBuy.ts",
    "875bciza9VPVoaHdaI+WoK7",
    "chunks:///_virtual/UpCmdTurnTableLastRefreshTime.ts",
    "5a844DImZZI+bJmCTEfrweQ",
    "chunks:///_virtual/UpCmdTurnTableShow.ts",
    "b60a7xCT89PC5m+biW9Gez1",
    "chunks:///_virtual/UpCmdUnlockPve.ts",
    "f540eeRYlRFpJswTuPrDkRj",
    "chunks:///_virtual/UpCmdUnlockPveHero.ts",
    "03a95jitENO5bRRohkBxUT9",
    "chunks:///_virtual/UpCmdUpgrade.ts",
    "5c829AFoFZL8byXajFo2fn8",
    "chunks:///_virtual/UpCmdUseItem.ts",
    "3e87a6PrghO2KQGd2f/XMoF",
    "chunks:///_virtual/UpCmdUseSupply.ts",
    "fcf62v56SJM/acOaWIKnNcB",
    "chunks:///_virtual/UpCmdWxMiniLogin.ts",
    "3746dH86xtNlo+E1CynW+MI",
    "chunks:///_virtual/UpgradeRequestData.ts",
    "61db8OW9fdMvYZz2aMGfWFa",
    "chunks:///_virtual/UseItemRequestData.ts",
    "18cb5EFb/dPQ7X7sOox8TDT",
    "chunks:///_virtual/UserInfoButton.ts",
    "0dc3aXmRoNLBYaByJPVzvho",
    "chunks:///_virtual/UseSupplyRequestData.ts",
    "d82695tlvVDL68eWTAJUF+V",
    "UseSupplyRequestData",
    "supply",
    "chunks:///_virtual/Util.ts",
    "0bcaetkR35As68vwPvNoQd8",
    "Util",
    "InitialBackpackSize",
    "MaxBackpackCount",
    "InitialM1Count",
    "InitialM2Count",
    "EnergyFriendshipPoint",
    "MaxFpCount",
    "BoxLimitMaxNum",
    "PilotMainPilotNum",
    "MarsActivationLevelCondition",
    "InitialPvpCoinCount",
    "RebornTimeDown",
    "EndlessWorldPvpDisconnectTime",
    "EndlessWorldPvpSyncScoreInterval",
    "chunks:///_virtual/UtilMgr.ts",
    "72709fXIQBAybcqGQYBfIj9",
    "utilMap",
    "initConfig",
    "chunks:///_virtual/Vip.ts",
    "a0473MQ6iVJ1bMNF/Jbdb6k",
    "GoldAdd",
    "BossTimesAdd",
    "WheelFreeRefreshTimeAdd",
    "BossModeDifficultTimesAdd",
    "HelpMaxGoldPerDayAdd",
    "CallbackGoldAdd",
    "GoldDailyRewardAdd",
    "EndlessGoldAdd",
    "WheelDailyTimesAdd",
    "BlackMarketRefreshTimesAdd",
    "InstanceZonesTimesAdd",
    "BlackMarketAllTime",
    "EndlessShipTreatureAdd",
    "PvpShopFreeRefreshTimePerDay",
    "PvpWinGetRmb2",
    "PvpWinGetRmb3",
    "PvpWinGetPvpToken0",
    "PvpWinGetPvpToken1",
    "PvpWinGetPvpToken2",
    "PvpWinGetPvpToken3",
    "LoginDailyRewardDiam",
    "WareGoodsDiscount",
    "chunks:///_virtual/VipMgr.ts",
    "8b22d2IHhFPAov+4jjvRsL+",
    "_vipDataMap",
    "_gainRewardLevel",
    "loadVipData",
    "checkVipDatas",
    "getRefreshShopRefreshTimeByLevel",
    "getWheelFreeRefreshTimeByLevel",
    "vip等级：",
    "chunks:///_virtual/WareDetailShortcutItem.ts",
    "37f1flzy1JO2qV3LmT20Gxt",
    "TimesEnd",
    "ActivityNotOpen",
    "CanChallenge",
    "NotChallenge",
    "disabledNode",
    "isNormalStage",
    "refreshNormalState",
    "refreshPeriodStage",
    "（关闭时间：",
    "（未解锁）",
    "（次数用尽）",
    "chunks:///_virtual/WareSkinBgExhibition.ts",
    "f7e15M2LjBGXYfZ0R7eiowG",
    "planeBg",
    "planeIconOpacity",
    "AM-SkinBG-Switch",
    "-Switch",
    "AM-SkinBG",
    "skin-bg-",
    "chunks:///_virtual/WareSkinRedDot.ts",
    "4103eVJ77tPxYCe6jo2Fim3",
    "chunks:///_virtual/WeaponBullet.ts",
    "540ecxUM5VEgKH/5s/2iB/z",
    "attackObjects",
    "bAim",
    "bAimDir",
    "bBezier",
    "bFollow",
    "bFollowChild",
    "bThroughSlow",
    "bWait",
    "control1X",
    "control1Y",
    "control2X",
    "control2Y",
    "damageCount",
    "divideBlastID",
    "divideBlastTime",
    "divideCount",
    "endX",
    "endY",
    "enemyId",
    "followFatherBullet",
    "laserAttackHeight",
    "laserBlastCount",
    "laserHeight",
    "laserHitAE",
    "laserHitAnimID",
    "laserOneHeight",
    "laserSpeed",
    "laserType",
    "laserLayer",
    "laserScissor",
    "passBlastCount",
    "passThroughNoDamage",
    "standbyHeight",
    "standbyWidth",
    "startX",
    "startY",
    "suicideCount",
    "throughCount",
    "trackSpeed",
    "waitCount",
    "waitTime",
    "weaponBulletAnim",
    "WeaponBullet#",
    "addThroughCount",
    "WeaponBullet_",
    "cycleLaser",
    "LASER_SPEED",
    "getAttackHeight",
    "getAttackRectOnly",
    "getDirDegrees",
    "getDivideBlastID",
    "getDivideBulletTime",
    "getEndX",
    "getEndY",
    "getEnemyId",
    "getLaserBlastID",
    "getPassBlastType",
    "getWeaponBulletAnim",
    "getWeaponBulletData",
    "isAim",
    "isAimDir",
    "isBomb",
    "isDamage",
    "isFollowChild",
    "isLaserBlast",
    "isLaserBlastHurt",
    "isStay",
    "isPassBlast",
    "isPassThroughNoDamage",
    "isSuicide",
    "isSuicideBomb",
    "isThrough",
    "isThroughOnce",
    "resetDamageCount",
    "resetLaserBlast",
    "setAimDir",
    "ENEMYID_DEFAULT",
    "setFollowChildDir",
    "setFollowChildEnd",
    "setFollowEnd",
    "ENEMYID_NONE",
    "getLaserHeight",
    "scissorNode",
    "setLaserAEScissor",
    "LASER_ORGIN",
    "setLaserHeight",
    "setPosByOwner",
    "setThroughSlow",
    "setWeaponBulletAnim",
    "chunks:///_virtual/WeaponBulletAnim.ts",
    "25644P1Eh5FbYpOGzPNBC0p",
    "WeaponBulletAnim",
    "bStay",
    "openAE",
    "weaponBullet",
    "weaponBulletAnimSp",
    "ANIM_NUM",
    "ANIM_FADE",
    "setCurIndex",
    "chunks:///_virtual/WeaponBulletMgr.ts",
    "c2cdd6fAZRE4py6u/R8hw5h",
    "checkDead",
    "checkHurtable",
    "checkLaserThrough",
    "tempPosY",
    "tempEp",
    "bAttackEnemy",
    "bThroughEnemy",
    "bResetDamage",
    "bLaserBlast",
    "hurtFunc",
    "cachedEnemySet",
    "bullets",
    "addWeaponBulletAnim",
    "weaponBulletHitMany",
    "weaponBulletHit",
    "chunks:///_virtual/WeekTaskData.ts",
    "WeekTaskDayData",
    "6e2c3AxDzlN4q9MgVqHgFjL",
    "refreshTaskRedDot",
    "refreshProRedDot",
    "[WeekTaskData] syncServerData data is null",
    "refreshTaskItemData",
    "finishTask",
    "chunks:///_virtual/WeekTaskDayData.ts",
    "WeekTaskItemData",
    "74d4aIi+hJIsIqXu9Br0mrc",
    "refreshTaskSort",
    "refreshTaskState",
    "WeekTaskDay",
    "chunks:///_virtual/WeekTaskItemData.ts",
    "39fe2kXBedJ+YS1yprokZNO",
    "chunks:///_virtual/WeekTaskTotalProgress.ts",
    "20604TzE3NLUbb5/u1+WTpo",
    "activeNode",
    "compeleteNode",
    "rewardIterm",
    "FDE96A",
    "chunks:///_virtual/Weighted.ts",
    "d85fbYv/W1Es4Lf4vMSMA25",
    "Weighted",
    "chunks:///_virtual/WheelData.ts",
    "4554274X4lEt7YWbyC6OZIr",
    "chunks:///_virtual/WheelRefreshInfo.ts",
    "2066eGLSBJBoLSQENBEcVZg",
    "NormalRoot",
    "isfree",
    "chunks:///_virtual/Wingman.ts",
    "3c9e4F3OK9KJIpIGQuTRYAG",
    "bEnergy",
    "bPauseShoot",
    "bPauseShootByPlane",
    "bPauseShootByStage",
    "cachedBodyRect",
    "weaponBulletDatas",
    "wingmanUIOpacity",
    "wingmanAE",
    "ANIMATION_ENERGY_OPEN",
    "ANIMATION_ENERGY_STAY",
    "ANIMATION_ENERGY_CLOSE",
    "ANIMATION_STAY",
    "WingmanNode",
    "POS_LEFT",
    "POS_RIGHT",
    "initWeapon",
    "isHurtAble",
    "resetAttackPoints",
    "setAlpha",
    "setAnimationScale",
    "setAPDelegate",
    "setOffLocation",
    "setPauseShootByPlane",
    "attackStr",
    "WINGMAN_BULLET_NUM",
    "chunks:///_virtual/WorldMessageData.ts",
    "e742c5tuftPcbG+9uDTOLQV",
    "chunks:///_virtual/WxMiniLoginRequestData.ts",
    "9cbbfDW2yJNOq36bspNjIPd",
    "chunks:///_virtual/WxPlatform.ts",
    "ffc2bH8MU9GOoDZWLY3TVgm",
    "rewardVideoAd",
    "rewardVideoAdTime",
    "videoAdCallback",
    "videoAdFailCallback",
    "purchaseIOSCallback",
    "purchaseData",
    "_inviteUidKey",
    "_invitePlatformKey",
    "_timestampKey",
    "_inviteUid",
    "_invitePlatform",
    "_timestamp",
    "_setMessageToFriendQuery",
    "_isFromDesktopEnterGame",
    "onError",
    "crash",
    "setKeepScreenOn",
    "showShareMenu",
    "shareTimeline",
    "onShareTimeline",
    "getQueryStr",
    "setMessageToFriendQuery query ",
    "onShareMessageToFriend",
    "wx.shareMessageToFriend",
    "分享失败",
    "[WxPlatform] onHide",
    "[WxPlatform] onShow",
    "checkIosPurchaseOrder",
    "onAudioInterruptionBegin",
    "[WxPlatform] onAudioInterruptionBegin",
    "onAudioInterruptionEnd",
    "[WxPlatform] onAudioInterruptionEnd",
    "checkSceneValue",
    "getEnterOptionsSync",
    "added",
    "[WxPlatform] getQueryParam query: ",
    "getQueryParamByKey",
    "[WxPlatform] getQueryParam: ",
    "[WxPlatform] getQueryParamByKey: ",
    "[WxPlatform] getQueryParamByKey query",
    "[WxPlatform] getQueryParamByKey value ",
    "queryHead",
    "entries",
    "login fail: ",
    "未知原因",
    "cgi",
    "fetch",
    "网络异常，请检查网络连接",
    "clearCache",
    "clearStorageSync",
    "readdir",
    "files",
    "unlinkSync",
    "failed to read directory:",
    "restartMiniProgram",
    "getSetting",
    "authSetting",
    "scope.userInfo",
    "onUserInfoGet",
    "getMiniBtnParam",
    "#ff000000",
    "#ffffff",
    "onTap",
    "userInfo",
    "avatarUrl",
    "nickName",
    "WxPlatform.setUserCloudStorage: ",
    "KVDataList",
    "WxPlatform.crossContextDataBusSend: ",
    "getOpenDataContext",
    "postMessage",
    "广告加载中",
    "createRewardedVideoAd",
    "rewardedVideoAd error ",
    "errCode",
    "当前没有适合的广告，请稍后再试",
    "加载广告失败，请稍后再试 (",
    "加载广告失败，请稍后再试",
    "rewardedVideoAdPlayComplete",
    "onClose",
    "ad_click",
    "isEnded",
    "ad_request",
    "播放广告失败，请稍后再试",
    "ad_exposure",
    "payTrackEvent",
    "init_order",
    "purchaseIOS",
    "purchaseAndroid",
    "wxae65611dd1391ed0",
    "openCustomerServiceConversation",
    "/recharge/click.jpg",
    "order_id",
    "支付请求中",
    "requestMidasPayment",
    "1450132998",
    "payment_fail",
    "wxChat",
    "[WxPlatform] getMiniBtnParam screenWidth: ",
    " screenHeight: ",
    " ratio: ",
    " isPad: ",
    " scale: ",
    " left: ",
    " blackWidth: ",
    " top: ",
    " width: ",
    " height: ",
    "pixelRatio",
    "#FFFFFF00",
    "green",
    "createCanvas",
    "toTempFilePath",
    "截图成功",
    "res.tempFilePath: ",
    "imageUrl: ",
    "复制失败 ",
    "chunks:///_virtual/XActionEvent.ts",
    "6525aaPwJ1O944rRbdDCXh9",
    "XActionEvent",
    "chunks:///_virtual/XActionListener.ts",
    "56d782iFVxO9KCR2WktFvzA",
    "XActionListener",
    "chunks:///_virtual/XPlane.ts",
    "7a29b3tEmZCa5gF62dfMyx7",
    "addHpCount",
    "addHpTime",
    "addhpValue",
    "animMap",
    "animCallBackMap",
    "bAddHpAble",
    "bAnimEnergy",
    "bAuto",
    "bBodyAEPositionUPdated",
    "bBodyAERectUpdated",
    "bCtpAddHp",
    "bCtpAddScore",
    "bEnergyShow",
    "bHpForAttack",
    "bHurtAlpha",
    "bodyAEPosition",
    "bodyAERect",
    "bPass",
    "bPilotShield",
    "bRebornAlpha",
    "bShowShootAE",
    "crystalHpRate",
    "crystalHps",
    "ctpMaxLevel",
    "curHurt",
    "curY",
    "hpShow",
    "hurtAlphaCount",
    "hurtAlphaNum",
    "hurtAlphaTimeMax",
    "hurtAlphaTimeMin",
    "hurtAlphaTimeTotal",
    "m_pActionListener",
    "moveBottom",
    "moveLeft",
    "moveRate",
    "moveRight",
    "moveTop",
    "passCount",
    "passDY",
    "passIndex",
    "passTime",
    "planeHpAddIntervalMax",
    "planeHpAddIntervalMin",
    "planeHpAddMax",
    "planehpAddMin",
    "planeHpAddNum",
    "planeHpAddTotal",
    "planeHpAllAddMax",
    "planehpAllAddMin",
    "planeHpAllAddNum",
    "planeHpAllAddTotal",
    "planeNodeUIOpacity",
    "sprintNode",
    "rebornAlphaCount",
    "rebornAlphaNum",
    "rebornAlphaTimeMax",
    "rebornAlphaTimeMin",
    "rebornAlphaTimeTotal",
    "shieldDele",
    "shieldCount",
    "shieldTimeCount",
    "sprintCount",
    "sprintIndex",
    "sprintSpeedY",
    "touchDx",
    "touchDy",
    "weaponBulletAssistDatas",
    "weaponCurMaxGrade",
    "wingmans",
    "energyTransRate",
    "bodyRectY",
    "bodyRectX",
    "bodyPosX",
    "bodyPosY",
    "bodyRectWidth",
    "bodyRectHeight",
    "bAlpha",
    "alphaTime",
    "bodyAE",
    "shieldAEOpacity",
    "planeHeadAE",
    "hurtlessChance",
    "hurtlessRate",
    "unredeceChance",
    "upgradeChance",
    "upgradeGrade",
    "addHpRate",
    "addHpATTRate",
    "hurtToDieHpRate",
    "shieldExtraTime",
    "lineSp",
    "enableMainWeapon",
    "getAddHpValue",
    "getAlphaTime",
    "getBodyPosX",
    "getBodyPosY",
    "getBodyRectHeight",
    "getBodyRectWidth",
    "getBodyRectX",
    "getBodyRectY",
    "getEnergyTransRate",
    "getHurtToDieHpRate",
    "getMoveToX",
    "getMoveToY",
    "setAlphaTime",
    "changeAnimationIndex",
    "cycleSprint",
    "cycleShield",
    "cycleStandby",
    "cycleWingman",
    "cycleAlpha",
    "cyclePass",
    "cycleHpShow",
    "cycleBodyAE",
    "cycleAddHpATT",
    "planeHpAddMax:",
    "planehpAddMin:",
    "isBAlpha",
    "setBodyPosX",
    "setBodyPosY",
    "isBPauseShootByPlane",
    "TYPE_MAIN",
    "showShootAE",
    "ANIM_ENERGY_CLOSE",
    "startAni",
    "energyDownSecLeftAE",
    "ANIM_ENERGY_DOWN_SEC_CLOSE",
    "energyDownSecRightAE",
    "energyDownFirLeftAE",
    "ANIM_ENERGY_DOWN_FIR_CLOSE",
    "energyDownFirRightAE",
    "energyUpFirLeftAE",
    "ANIM_ENERGY_UP_FIR_CLOSE",
    "energyUpFirRightAE",
    "energyUpSecLeftAE",
    "ANIM_ENERGY_UP_SEC_CLOSE",
    "energyUpSecRightAE",
    "energyShow",
    "ANIM_ENERGY_OPEN",
    "ANIM_ENERGY_DOWN_SEC_OPEN",
    "ANIM_ENERGY_DOWN_FIR_OPEN",
    "ANIM_ENERGY_UP_FIR_OPEN",
    "ANIM_ENERGY_UP_SEC_OPEN",
    "fixWingmanPos",
    "TYPE_ASSIST",
    "hideWingman",
    "setAni",
    "flipX",
    "setBlend",
    "getAni",
    "setAniCallBack",
    "ANIMATION_MOVE_LEFT_THIRD",
    "ANIMATION_MOVE_LEFT_TWICE",
    "ANIMATION_MOVE_LEFT",
    "ANIMATION_MOVE_NORMAL",
    "ANIMATION_MOVE_RIGHT",
    "ANIMATION_MOVE_RIGHT_TWICE",
    "ANIMATION_MOVE_RIGHT_THIRD",
    "SprintNode",
    "PlaneNode",
    "EffectNode",
    "shootBackAE",
    "shootFrontAE",
    "ANIM_ENERGY_DOWN_SEC_STAY",
    "ANIM_ENERGY_DOWN_FIR_STAY",
    "ANIM_ENERGY_STAY",
    "ANIM_ENERGY_UP_FIR_STAY",
    "ANIM_ENERGY_UP_SEC_STAY",
    "initWingman",
    "setMoveRate",
    "setBPauseShoot",
    "setBPauseShootByPlane",
    "initArmorSkill",
    "Gimzos",
    "setEnergyTransRate",
    "initWingmanPos",
    "WINGMAN_NUM",
    "isShield",
    "setBodyRectX",
    "setBodyRectY",
    "setBodyRectWidth",
    "setBodyRectHeight",
    "sprintAE",
    "SPRINT_OFF",
    "SPRINT_OPEN",
    "SPRINT_ON",
    "sprintUpPlaneAE",
    "tag_sprint_line",
    "line0AE",
    "SPRINT_LINE_0",
    "line1AE",
    "SPRINT_LINE_1",
    "blackHoleAE",
    "recordPilotShield",
    "setAddHpValue",
    "setBodyAEVisible",
    "setCurHurt",
    "setWormShoot",
    "shieldOff",
    "showPlaneHead",
    "showRewardScore",
    "SHOOT_BACK",
    "SHOOT_ANIM_NUM",
    "SHOOT_FRONT",
    "showWingman",
    "SPRINT_PLANEUP",
    "CLOSE_TO_PLANE_GODLIKE",
    "CLOSE_TO_PLANE_GOOD",
    "CLOSE_TO_PLANE_GREAT",
    "CLOSE_TO_PLANE_HEAVENLY",
    "CLOSE_TO_PLANE_PERFECT",
    "CLOSE_TO_PLANE_SUPERMAN",
    "ENERGY_FADE",
    "ENERGY_OPEN",
    "ENERGY_SHOW",
    "ENERGY_STAY",
    "SHIELD_NUM",
    "chunks:///_virtual/XShake.ts",
    "f61ab3lbmpH6refEvEErkjr",
    "m_fInterval",
    "m_fRangeX",
    "m_fRangeY",
    "m_fShakeElapsed",
    "m_fDuration",
    "m_oStartPos",
    "m_pTarget",
    "m_fElapsed",
    "initWithDuration",
    "chunks:///_virtual/XTool.ts",
    "fdb7dou3TZCWLSJsbBpppns",
    "getLogDateTimeString",
    " -----hurt-----> ",
    " | hp : ",
    " | value : ",
    "repeat",
    "getCurTime",
    "getUtf8Length",
    "encode",
    "getUtf8SubString",
    "decode",
    "getColor3",
    "getColor4",
    "hexStringToInt",
    "isCharToRemove",
    "stringRemoveChars",
    "getMaxFloat",
    "getRndPercent",
    "toDegrees",
    "getRectIntersectedWithNode",
    "getRndBool",
    "getMD5",
    "getMd5Digest",
    "getCurDate",
    "getCurMoment",
    "getMoment",
    "getTextureCache",
    "getPixelFormat",
    "getResourceType",
    "renameHeadIcon",
    "getTimeIntervalFormat",
    "getUTCFullYear",
    "getUTCMonth",
    "getUTCDate",
    "getUTCHours",
    "getUTCMinutes",
    "getUTCSeconds",
    "gray",
    "white",
    "blue",
    "purple",
    "orange",
    "yellow",
    "b2c4dd",
    "272a30",
    "37bf4c",
    "003115",
    "46b7ff",
    "0a1f55",
    "T-Treasure-itemBG-blue",
    "ff85ff",
    "4a0492",
    "T-Treasure-itemBG-purple",
    "getAllTouches",
    "[XTool] getValidTouches rawTouches:",
    "lastModified",
    "[InputMgr] getValidTouches, skip touch because it's too old, touch.lastModified: ",
    ", event.touch.lastModified: ",
    ", delta:",
    "[InputMgr] getValidTouches, allTouches[",
    ", detail:",
    "_printHurtLog",
    "_printEquipDamageLog",
    "SUBSLEN",
    "EBUFLEN",
    "BUFLEN",
    "INVALID_CHARACTER_REPLACER",
    "virtual:///prerequisite-imports/main",
    "__esModule"
]